{"version":3,"sources":["../source/parse.test.js"],"names":["parse_digits","text","caret_position","character","describe","it","test_caret","caret_in_text","caret_in_value","to","deep","equal","value","caret","undefined"],"mappings":";;AAAA;;AAEA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAOC,cAAP,EACrB;AACC,SAAO,qBAAMD,IAAN,EAAYC,cAAZ,EAA4B,qBACnC;AACC,QAAIC,aAAa,GAAb,IAAoBA,aAAa,GAArC,EACA;AACC,aAAOA,SAAP;AACA;AACD,GANM,CAAP;AAOA,CATD;;AAWAC,kBAAkB,YAClB;AACCC,mCAAiC,YACjC;AACC,aAASC,UAAT,CAAoBC,aAApB,EAAmCC,cAAnC,EACA;AACC,wBAAOR,aAAa,iBAAb,EAAgCO,aAAhC,CAAP,EAAuDE,EAAvD,CAA0DC,IAA1D,CAA+DC,KAA/D,CAAqE,EAAEC,OAAO,YAAT,EAAuBC,OAAOL,cAA9B,EAArE;AACA;;AAEDF,eAAW,CAAX,EAAc,CAAd;;AAEAA,eAAW,CAAX,EAAc,CAAd;AACAA,eAAW,CAAX,EAAc,CAAd;AACAA,eAAW,CAAX,EAAc,CAAd;;AAEAA,eAAW,CAAX,EAAc,CAAd;AACAA,eAAW,CAAX,EAAc,CAAd;;AAEAA,eAAW,CAAX,EAAc,CAAd;AACAA,eAAW,CAAX,EAAc,CAAd;AACAA,eAAW,CAAX,EAAc,CAAd;;AAEAA,eAAW,CAAX,EAAc,CAAd;;AAEAA,eAAW,EAAX,EAAe,CAAf;AACAA,eAAW,EAAX,EAAe,CAAf;;AAEAA,eAAW,EAAX,EAAe,CAAf;;AAEAA,eAAW,EAAX,EAAe,CAAf;AACAA,eAAW,EAAX,EAAe,CAAf;;AAEAA,eAAW,EAAX,EAAe,EAAf;AACA,GA/BD;;AAiCAD,sDAAoD,YACpD;AACC,sBAAOL,aAAa,SAAb,EAAwBc,SAAxB,CAAP,EAA2CL,EAA3C,CAA8CC,IAA9C,CAAmDC,KAAnD,CAAyD,EAAEC,OAAO,KAAT,EAAgBC,OAAO,CAAvB,EAAzD;AACA,GAHD;AAIA,CAvCD","file":"parse.test.js","sourcesContent":["import { expect } from 'chai'\r\n\r\nimport parse from '../source/parse'\r\n\r\nconst parse_digits = (text, caret_position) =>\r\n{\r\n\treturn parse(text, caret_position, character =>\r\n\t{\r\n\t\tif (character >= '0' && character <= '9')\r\n\t\t{\r\n\t\t\treturn character\r\n\t\t}\r\n\t})\r\n}\r\n\r\ndescribe(`parse`, function()\r\n{\r\n\tit(`should parse phone numbers`, function()\r\n\t{\r\n\t\tfunction test_caret(caret_in_text, caret_in_value)\r\n\t\t{\r\n\t\t\texpect(parse_digits('(123) 456-78-90', caret_in_text)).to.deep.equal({ value: '1234567890', caret: caret_in_value })\r\n\t\t}\r\n\r\n\t\ttest_caret(0, 0)\r\n\r\n\t\ttest_caret(1, 0)\r\n\t\ttest_caret(2, 1)\r\n\t\ttest_caret(3, 2)\r\n\r\n\t\ttest_caret(4, 3)\r\n\t\ttest_caret(5, 3)\r\n\r\n\t\ttest_caret(6, 3)\r\n\t\ttest_caret(7, 4)\r\n\t\ttest_caret(8, 5)\r\n\r\n\t\ttest_caret(9, 6)\r\n\r\n\t\ttest_caret(10, 6)\r\n\t\ttest_caret(11, 7)\r\n\r\n\t\ttest_caret(12, 8)\r\n\r\n\t\ttest_caret(13, 8)\r\n\t\ttest_caret(14, 9)\r\n\r\n\t\ttest_caret(15, 10)\r\n\t})\r\n\r\n\tit(`should parse without caret position specified`, function()\r\n\t{\r\n\t\texpect(parse_digits(' 1 2 3 ', undefined)).to.deep.equal({ value: '123', caret: 3 })\r\n\t})\r\n})"]}