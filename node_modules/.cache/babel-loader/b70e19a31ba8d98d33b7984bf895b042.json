{"ast":null,"code":"import _slicedToArray from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Amar/emp/src/components/MTSA/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, List, Form, Icon, Button, Layout, Row, Col, Card, Badge } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getPro, getEmpInfo } from \"../../redux/actions/Get_List\";\nimport Moment from \"react-moment\";\nvar Header = Layout.Header,\n    Content = Layout.Content,\n    Footer = Layout.Footer;\nvar size1 = 0;\nvar size2 = 0;\n\nvar MTSA =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MTSA, _Component);\n\n  function MTSA(props) {\n    var _this;\n\n    _classCallCheck(this, MTSA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MTSA).call(this, props));\n\n    _this.onChange = function (e) {\n      return _this.setState({\n        data: _objectSpread({}, _this.state.data, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleClick = function (e) {\n      console.log(\"click \", e);\n\n      _this.setState({\n        current: e.key\n      });\n    };\n\n    _this.onShow = function (e) {\n      var _this$state$data = _this.state.data,\n          clientProjectName = _this$state$data.clientProjectName,\n          startDate = _this$state$data.startDate,\n          endDate = _this$state$data.endDate;\n\n      _this.props.dispatch(getPro({\n        clientProjectName: clientProjectName,\n        startDate: startDate,\n        endDate: endDate\n      }));\n\n      _this.props.history.push(\"/mTSA\");\n    };\n\n    _this.onList = function (e) {\n      var _this$state$data2 = _this.state.data,\n          _this$state$data2$lis = _slicedToArray(_this$state$data2.listOfEmployees, 1),\n          _this$state$data2$lis2 = _this$state$data2$lis[0],\n          employeeId = _this$state$data2$lis2.employeeId,\n          employeeName = _this$state$data2$lis2.employeeName,\n          activeTimesheetStartDate = _this$state$data2.activeTimesheetStartDate,\n          activeTimesheetEndDate = _this$state$data2.activeTimesheetEndDate,\n          notes = _this$state$data2.notes;\n\n      _this.props.dispatch(getEmpInfo({\n        listOfEmployees: [{\n          employeeId: employeeId,\n          employeeName: employeeName\n        }],\n        activeTimesheetStartDate: activeTimesheetStartDate,\n        activeTimesheetEndDate: activeTimesheetEndDate,\n        notes: notes\n      }));\n\n      size1 = 8;\n\n      _this.props.history.push(\"/mTSA\");\n    };\n\n    _this.onDetails = function (e) {\n      var _this$state$data3 = _this.state.data,\n          _this$state$data3$lis = _slicedToArray(_this$state$data3.listOfEmployees, 1),\n          employeeId = _this$state$data3$lis[0].employeeId,\n          projectId = _this$state$data3.projectId,\n          clientProjectId = _this$state$data3.clientProjectId,\n          vendorId = _this$state$data3.vendorId,\n          vendorName = _this$state$data3.vendorName;\n\n      _this.props.dispatch(getEmpInfo({\n        listOfEmployees: [{\n          employeeId: employeeId\n        }],\n        projectId: projectId,\n        clientProjectId: clientProjectId,\n        vendorId: vendorId,\n        vendorName: vendorName\n      }));\n\n      size2 = 8;\n\n      _this.props.history.push(\"/mTSA\");\n    };\n\n    _this.state = {\n      current: \"mail\",\n      data: {\n        clientProjectName: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        listOfEmployees: [{\n          employeeId: \"\",\n          employeeName: \"\"\n        }],\n        activeTimesheetStartDate: \"\",\n        activeTimesheetEndDate: \"\",\n        notes: \"\",\n        projectId: \"\",\n        clientProjectId: \"\",\n        vendorId: \"\",\n        vendorName: \"\"\n      },\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(MTSA, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onShow();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data1 = Array.from(this.props.empList);\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 22,\n        sm: 22,\n        md: 22,\n        lg: 22,\n        xl: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        onClick: this.handleClick,\n        selectedKeys: [this.state.current],\n        mode: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/home\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: \"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\",\n        width: \"200px\",\n        height: \"60px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(Menu.Item, {\n        key: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/home\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \"Home\")), React.createElement(Menu.Item, {\n        key: \"timesheet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/createNewRequest\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"clock-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \"Time Sheet\")), React.createElement(Menu.Item, {\n        key: \"Manager Approval\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/mTSA\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"ordered-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), \"Manager TimeSheet Approval\")), React.createElement(Menu.Item, {\n        key: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/project\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"Project\")))), React.createElement(Col, {\n        xs: 2,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        xl: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/login\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), \"Logout\"))))), React.createElement(Content, {\n        style: {\n          margin: \"24px 16px\",\n          padding: 24,\n          background: \"#fff\",\n          minHeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Project List\",\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Form, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(List, {\n        bordered: true,\n        dataSource: data1,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, React.createElement(Card, {\n            onClick: _this2.onList,\n            value: item.projectId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, React.createElement(Badge, {\n            count: item.listOfEmployees.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \"Project Name: \", item.clientProjectName), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }), \"Date: \", React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, item.startDate), \" - \", React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, item.endDate), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        xs: size1,\n        sm: size1,\n        md: size1,\n        lg: size1,\n        xl: size1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Employee List\",\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Form, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(List, {\n        bordered: true,\n        dataSource: data1,\n        renderItem: function renderItem(item2) {\n          return React.createElement(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(Card, {\n            onClick: _this2.onDetails,\n            value: data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, \"Employee ID: \", React.createElement(Badge, {\n            count: item2.listOfEmployees[0].employeeId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }), \"Employee Name: \", item2.listOfEmployees[0].employeeName, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }), \"Timesheet Date: \", React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }, item2.activeTimesheetStartDate), \" - \", React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, item2.activeTimesheetEndDate)));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        xs: size2,\n        sm: size2,\n        md: size2,\n        lg: size2,\n        xl: size2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Employee Details\",\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Form, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(List, {\n        bordered: true,\n        dataSource: data1,\n        renderItem: function renderItem(item2) {\n          return React.createElement(List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }, React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, \"Employee Id: \", React.createElement(Badge, {\n            count: item2.listOfEmployees[0].employeeId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }), \"Project Id: \", React.createElement(Badge, {\n            count: item2.listOfEmployees[0].projectId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }), \"Client Id: \", React.createElement(Badge, {\n            count: item2.listOfEmployees[0].clientProjectId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }), \"Vendor Id: \", item2.vendorId, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }), \"Vendor Name: \", item2.vendorName));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), \" \")), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"copyright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \"Reliable Software 2018\"))));\n    }\n  }]);\n\n  return MTSA;\n}(Component);\n\nfunction mapStateToProps(state) {\n  //console.log(\"STATE\" + JSON.stringify(state.empList.result));\n  return {\n    empList: state.empList.result\n  };\n}\n\nexport default connect(mapStateToProps)(MTSA);","map":{"version":3,"sources":["/Users/Amar/emp/src/components/MTSA/index.js"],"names":["React","Component","connect","Menu","List","Form","Icon","Button","Layout","Row","Col","Card","Badge","Link","getPro","getEmpInfo","Moment","Header","Content","Footer","size1","size2","MTSA","props","onChange","e","setState","data","state","target","name","value","handleClick","console","log","current","key","onShow","clientProjectName","startDate","endDate","dispatch","history","push","onList","listOfEmployees","employeeId","employeeName","activeTimesheetStartDate","activeTimesheetEndDate","notes","onDetails","projectId","clientProjectId","vendorId","vendorName","loading","data1","Array","from","empList","pathname","margin","padding","background","minHeight","item","length","item2","mapStateToProps","result"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Menu,\n    List,\n    Form,\n    Icon,\n    Button,\n    Layout,\n    Row,\n    Col,\n    Card,\n    Badge\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getPro, getEmpInfo } from \"../../redux/actions/Get_List\";\nimport Moment from \"react-moment\";\n\nconst { Header, Content, Footer } = Layout;\nvar size1 = 0;\nvar size2 = 0;\nclass MTSA extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            current: \"mail\",\n            data: {\n                clientProjectName: \"\",\n                startDate: \"\",\n                endDate: \"\",\n                listOfEmployees: [{ employeeId: \"\", employeeName: \"\" }],\n                activeTimesheetStartDate: \"\",\n                activeTimesheetEndDate: \"\",\n                notes: \"\",\n                projectId: \"\",\n                clientProjectId: \"\",\n                vendorId: \"\",\n                vendorName: \"\"\n            },\n            loading: false\n        };\n    }\n    componentDidMount() {\n        this.onShow();\n    }\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    handleClick = e => {\n        console.log(\"click \", e);\n        this.setState({\n            current: e.key\n        });\n    };\n\n    onShow = e => {\n        const { clientProjectName, startDate, endDate } = this.state.data;\n        this.props.dispatch(\n            getPro({\n                clientProjectName: clientProjectName,\n                startDate: startDate,\n                endDate: endDate\n            })\n        );\n        this.props.history.push(\"/mTSA\");\n    };\n    onList = e => {\n        const {\n            listOfEmployees: [{ employeeId, employeeName }],\n            activeTimesheetStartDate,\n            activeTimesheetEndDate,\n            notes\n        } = this.state.data;\n        this.props.dispatch(\n            getEmpInfo({\n                listOfEmployees: [\n                    {\n                        employeeId: employeeId,\n                        employeeName: employeeName\n                    }\n                ],\n                activeTimesheetStartDate: activeTimesheetStartDate,\n                activeTimesheetEndDate: activeTimesheetEndDate,\n                notes: notes\n            })\n        );\n        size1 = 8;\n        this.props.history.push(\"/mTSA\");\n    };\n\n    onDetails = e => {\n        const {\n            listOfEmployees: [{ employeeId }],\n            projectId,\n            clientProjectId,\n            vendorId,\n            vendorName\n        } = this.state.data;\n        this.props.dispatch(\n            getEmpInfo({\n                listOfEmployees: [{ employeeId: employeeId }],\n                projectId: projectId,\n                clientProjectId: clientProjectId,\n                vendorId: vendorId,\n                vendorName: vendorName\n            })\n        );\n        size2 = 8;\n        this.props.history.push(\"/mTSA\");\n    };\n\n    render() {\n        const data1 = Array.from(this.props.empList);\n        const { data } = this.state;\n\n        return (\n            <div>\n                <Layout>\n                    <Header>\n                        <Row>\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n                                    <Menu.Item>\n                                        <Link to={{ pathname: \"/home\" }}>\n                                            {\" \"}\n                                            <img\n                                                src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\n                                                width=\"200px\"\n                                                height=\"60px\"\n                                            />\n                                        </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"mail\">\n                                        <Link to={{ pathname: \"/home\" }}>\n                                            <Icon type=\"mail\" />\n                                            Home\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}>\n                                            <Icon type=\"clock-circle\" />\n                                            Time Sheet\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"Manager Approval\">\n                                        <Link to={{ pathname: \"/mTSA\" }}>\n                                            <Icon type=\"ordered-list\" />\n                                            Manager TimeSheet Approval\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"project\">\n                                        <Link to={{ pathname: \"/project\" }}>\n                                            <Icon type=\"project\" />\n                                            Project\n                    </Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                <Link to={{ pathname: \"/login\" }}>\n                                    {\" \"}\n                                    <Button size=\"large\">\n                                        <Icon type=\"logout\" />\n                                        Logout\n                  </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Header>\n                    <Content\n                        style={{\n                            margin: \"24px 16px\",\n                            padding: 24,\n                            background: \"#fff\",\n                            minHeight: 500\n                        }}\n                    >\n                        <Col span={8}>\n                            <Card title=\"Project List\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item => (\n                                            <List.Item>\n                                                <Card onClick={this.onList} value={item.projectId}>\n                                                    <Badge count={item.listOfEmployees.length} />\n                                                    <b>\n                                                        {\"Project Name: \"}\n                                                        {item.clientProjectName}\n                                                    </b>\n                                                    <br />\n                                                    {\"Date: \"}\n                                                    <Moment format=\"MM/DD/YYYY\">{item.startDate}</Moment>\n                                                    {\" - \"}\n                                                    <Moment format=\"MM/DD/YYYY\">{item.endDate}</Moment>\n                                                    <br />\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>\n                        </Col>\n\n                        <Col xs={size1} sm={size1} md={size1} lg={size1} xl={size1}>\n                            <Card title=\"Employee List\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item2 => (\n                                            <List.Item>\n                                                <Card onClick={this.onDetails} value={data}>\n                                                    {\"Employee ID: \"}\n                                                    <Badge count={item2.listOfEmployees[0].employeeId} />\n                                                    <br />\n                                                    {\"Employee Name: \"}\n                                                    {item2.listOfEmployees[0].employeeName}\n                                                    <br />\n                                                    {\"Timesheet Date: \"}\n                                                    <Moment format=\"MM/DD/YYYY\">\n                                                        {item2.activeTimesheetStartDate}\n                                                    </Moment>\n                                                    {\" - \"}\n                                                    <Moment format=\"MM/DD/YYYY\">\n                                                        {item2.activeTimesheetEndDate}\n                                                    </Moment>\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>\n                        </Col>\n                        <Col xs={size2} sm={size2} md={size2} lg={size2} xl={size2}>\n                            <Card title=\"Employee Details\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item2 => (\n                                            <List.Item>\n                                                <Card>\n                                                    {\"Employee Id: \"}\n                                                    <Badge count={item2.listOfEmployees[0].employeeId} />\n                                                    <br />\n                                                    {\"Project Id: \"}\n                                                    <Badge count={item2.listOfEmployees[0].projectId} />\n                                                    <br />\n                                                    {\"Client Id: \"}\n                                                    <Badge\n                                                        count={item2.listOfEmployees[0].clientProjectId}\n                                                    />\n                                                    <br />\n                                                    {\"Vendor Id: \"}\n                                                    {item2.vendorId}\n                                                    <br />\n                                                    {\"Vendor Name: \"}\n                                                    {item2.vendorName}\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>{\" \"}\n                        </Col>\n                    </Content>\n\n                    <Footer>\n                        <center>\n                            <Icon type=\"copyright\" />\n                            Reliable Software 2018\n            </center>\n                    </Footer>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    //console.log(\"STATE\" + JSON.stringify(state.empList.result));\n    return {\n        empList: state.empList.result\n    };\n}\n\nexport default connect(mapStateToProps)(MTSA);"]},"metadata":{},"sourceType":"module"}