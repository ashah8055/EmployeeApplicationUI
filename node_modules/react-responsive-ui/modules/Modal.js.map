{"version":3,"sources":["../source/Modal.js"],"names":["ModalContext","Modal","props","storeContentInstance","ref","content","registerForm","setState","form","unregisterForm","unmounted","on_request_close","event","closeLabel","state","type","indicate_cannot_close","focus","closeIfNotBusy","wait","busy","close","closeTimeout","could_not_close_because_busy","on_after_open","afterOpen","adjust_scrollbar_after_open","on_after_close","afterClose","reset","adjust_scrollbar_after_close","context","prevProps","prevState","unmount","isOpen","reset_content_scroll","clearTimeout","could_not_close_because_busy_animation_timeout","undefined","fullscreen","contentLabel","title","closeButtonIcon","actions","style","className","overlayClassName","children","react_modal_style","could_not_close_because_busy_animation_duration","setTimeout","document","querySelector","scrollTop","div","createElement","position","left","right","body","appendChild","width_before","clientWidth","overflow","width_adjustment","removeChild","get_full_width_elements","element","marginRight","bodyOverflowX","bodyOverflowY","overflowX","overflowY","propTypes","bool","isRequired","func","number","node","string","oneOfType","oneOf","object","defaultProps","ModalContent","storeNode","containsForm","closeButtonAdded","Children","map","ModalTitleType","ModalContentType","cloneElement","closeButton","render_close_button","Actions","transformChildren","CloseButtonIcon","overlay","top","bottom","full_width_elements","slice","call","querySelectorAll","push","Title","rest","Content"],"mappings":"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","file":"Modal.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport ReactModal from 'react-modal'\r\nimport createContext from 'create-react-context'\r\nimport { polyfill as reactLifecyclesCompat } from 'react-lifecycles-compat'\r\n\r\nimport Form from './Form'\r\nimport Button from './Button'\r\nimport Close, { CloseIcon } from './Close'\r\n\r\nexport const ModalContext = createContext()\r\n\r\n// Make sure to add `.rrui__fixed-full-width` CSS class\r\n// to all full-width `position: fixed` elements.\r\n// Such elements must not be `width: 100%`\r\n// but rather `width: auto` or `left: 0; right: 0;`.\r\nclass Modal extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// If `true` then the modal is shown\r\n\t\tisOpen           : PropTypes.bool.isRequired,\r\n\r\n\t\t// Closes the modal (must set the `isOpen` flag to `false`)\r\n\t\tclose            : PropTypes.func.isRequired,\r\n\r\n\t\t// A time required for CSS hiding animation to complete\r\n\t\t// (150 milliseconds by default)\r\n\t\tcloseTimeout     : PropTypes.number.isRequired,\r\n\r\n\t\t// Is called after the modal is shown\r\n\t\tafterOpen        : PropTypes.func,\r\n\r\n\t\t// Is called after the modal is closed\r\n\t\tafterClose       : PropTypes.func,\r\n\r\n\t\t// Enters fullscreen mode\r\n\t\tfullscreen       : PropTypes.bool,\r\n\r\n\t\t// Modal content\r\n\t\tchildren         : PropTypes.node,\r\n\r\n\t\t// If `wait` is `true` then the modal\r\n\t\t// won't close on click-out or Escape\r\n\t\t// and will show spinner on the overlay.\r\n\t\twait            : PropTypes.bool,\r\n\r\n\t\t// (deprecated)\r\n\t\t// (use `wait` instead)\r\n\t\t// If `busy` is `true` then the modal\r\n\t\t// won't close on click-out or Escape\r\n\t\t// and will show spinner on the overlay.\r\n\t\tbusy            : PropTypes.bool,\r\n\r\n\t\t// Resets the modal on close\r\n\t\t// (e.g. could reset edited form fields)\r\n\t\treset            : PropTypes.func,\r\n\r\n\t\t// \"Cancel\" button label.\r\n\t\t// If set, the modal will have a \"Cancel\" button.\r\n\t\t// (only if `<Form.Actions/>` is found in content)\r\n\t\tcloseLabel       : PropTypes.string,\r\n\r\n\t\t// The default `overflow-x` of the <body/>.\r\n\t\t// Is `auto` by default.\r\n\t\tbodyOverflowX    : PropTypes.string.isRequired,\r\n\r\n\t\t// The default `overflow-x` of the <body/>.\r\n\t\t// Is `scroll` by default\r\n\t\t// (which is better than `auto`\r\n\t\t//  because the document width won't be jumpy\r\n\t\t//  while navigating the website —\r\n\t\t//  it will be consistent across all pages)\r\n\t\tbodyOverflowY    : PropTypes.string.isRequired,\r\n\r\n\t\t// `aria-label` for the modal.\r\n\t\t// (is \"Popup\" by default)\r\n\t\tcontentLabel     : PropTypes.string.isRequired,\r\n\r\n\t\t// An optional close button icon (like a cross).\r\n\t\t// Set to `true` to show the default \"cross\" icon.\r\n\t\tcloseButtonIcon  : PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([true])]),\r\n\r\n\t\t// If set to `false` will prevent modal contents\r\n\t\t// from being unmounted when the modal is closed.\r\n\t\tunmount          : PropTypes.bool.isRequired,\r\n\r\n\t\t// Internal property\r\n\t\tcould_not_close_because_busy_animation_duration : PropTypes.number.isRequired,\r\n\r\n\t\t// CSS class for overlay (e.g. for fullscreen modal background color)\r\n\t\toverlayClassName : PropTypes.string,\r\n\r\n\t\t// CSS class\r\n\t\tclassName        : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle            : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tisOpen : false,\r\n\r\n\t\tbodyOverflowX : 'auto',\r\n\t\t// Prevents document width from jumping due to the\r\n\t\t// vertical scrollbar appearance/disappearance\r\n\t\tbodyOverflowY : 'scroll',\r\n\r\n\t\t// when changing this also change\r\n\t\t// your .ReactModal__Overlay and .ReactModal__Content\r\n\t\t// css transition times accordingly\r\n\t\tcloseTimeout : 150, // ms\r\n\r\n\t\tcontentLabel : 'Popup',\r\n\r\n\t\t// Modal contents are unmounted when the modal is closed by default\r\n\t\tunmount : true,\r\n\r\n\t\t// When changing this also change\r\n\t\t// `.rrui__modal--could-not-close-because-busy`\r\n\t\t// css transition time accordingly\r\n\t\tcould_not_close_because_busy_animation_duration: 600 // ms\r\n\t}\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state =\r\n\t\t{\r\n\t\t\t// Using a counter instead of a boolean here\r\n\t\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t\t// (React reconciliation algorythm implementation details)\r\n\t\t\tform : 0,\r\n\r\n\t\t\tcontext:\r\n\t\t\t{\r\n\t\t\t\tcloseLabel     : this.props.closeLabel,\r\n\t\t\t\tcloseIfNotBusy : this.closeIfNotBusy,\r\n\t\t\t\tregisterForm   : this.registerForm,\r\n\t\t\t\tunregisterForm : this.unregisterForm\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState)\r\n\t{\r\n\t\tconst { unmount, isOpen } = this.props\r\n\r\n\t\t// If prevent `<Modal/>` contents\r\n\t\t// from being unmounted upon close.\r\n\t\tif (!unmount)\r\n\t\t{\r\n\t\t\t// If has been opened.\r\n\t\t\tif (!prevProps.isOpen && isOpen)\r\n\t\t\t{\r\n\t\t\t\tthis.on_after_open()\r\n\t\t\t}\r\n\t\t\t// If has been closed.\r\n\t\t\telse if (prevProps.isOpen && !isOpen)\r\n\t\t\t{\r\n\t\t\t\tthis.on_after_close()\r\n\t\t\t\tthis.reset_content_scroll()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// A modal itself umounts only when the user leaves a page,\r\n\t// so in a \"Single Page Application\", for example,\r\n\t// if this was a regular popup and a user could still navigate\r\n\t// away via a hyperlink then this code becomes neccessary.\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { isOpen } = this.props\r\n\r\n\t\tthis.unmounted = true\r\n\r\n\t\t// If the modal is still open\r\n\t\t// while a user navigates away\r\n\t\t// then \"close\" it properly\r\n\t\t// (restore the document scrollbars, etc).\r\n\t\tif (isOpen)\r\n\t\t{\r\n\t\t\tthis.on_after_close()\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.could_not_close_because_busy_animation_timeout)\r\n\t\tthis.could_not_close_because_busy_animation_timeout = undefined\r\n\t}\r\n\r\n\tstoreContentInstance = (ref) => this.content = ref\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\twait,\r\n\t\t\tbusy,\r\n\t\t\tfullscreen,\r\n\t\t\tisOpen,\r\n\t\t\tcloseTimeout,\r\n\t\t\tcontentLabel,\r\n\t\t\ttitle,\r\n\t\t\tcloseLabel,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tactions,\r\n\t\t\tunmount,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\toverlayClassName,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcould_not_close_because_busy,\r\n\t\t\tform\r\n\t\t}\r\n\t\t= this.state\r\n\r\n\t\treturn (\r\n\t\t\t<ReactModal\r\n\t\t\t\tisOpen={ unmount ? isOpen : true }\r\n\t\t\t\tonAfterOpen={ unmount ? this.on_after_open : undefined }\r\n\t\t\t\tonRequestClose={ this.on_request_close }\r\n\t\t\t\tcloseTimeoutMS={ closeTimeout }\r\n\t\t\t\tcontentLabel={ contentLabel }\r\n\t\t\t\tariaHideApp={ false }\r\n\t\t\t\tstyle={ react_modal_style }\r\n\t\t\t\toverlayClassName={ classNames('rrui__modal__overlay',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__overlay--busy'       : wait || busy,\r\n\t\t\t\t\t'rrui__modal__overlay--fullscreen' : fullscreen,\r\n\t\t\t\t\t'rrui__modal__overlay--hidden'     : !unmount && !isOpen\r\n\t\t\t\t},\r\n\t\t\t\toverlayClassName) }\r\n\t\t\t\tclassName={ classNames('rrui__modal__container',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__container--fullscreen' : fullscreen\r\n\t\t\t\t}) }>\r\n\r\n\t\t\t\t{/* Top margin, grows less than bottom margin */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--top',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\tonClick={ this.on_request_close }/>\r\n\r\n\t\t\t\t{/* Modal window content */}\r\n\r\n\t\t\t\t<ModalContext.Provider value={ this.state.context }>\r\n\t\t\t\t\t<ModalContent\r\n\t\t\t\t\t\tref={ this.storeContentInstance }\r\n\t\t\t\t\t\tcloseLabel={ closeLabel }\r\n\t\t\t\t\t\tcloseButtonIcon={ closeButtonIcon }\r\n\t\t\t\t\t\tclose={ this.closeIfNotBusy }\r\n\t\t\t\t\t\tstyle={ style }\r\n\t\t\t\t\t\tclassName={ className }\r\n\t\t\t\t\t\tfullscreen={ fullscreen }\r\n\t\t\t\t\t\tcould_not_close_because_busy={ could_not_close_because_busy }\r\n\t\t\t\t\t\tcontainsForm={ form > 0 }\r\n\t\t\t\t\t\twait={ wait || busy }\r\n\t\t\t\t\t\treset={ this.on_after_close }>\r\n\t\t\t\t\t\t{ children }\r\n\t\t\t\t\t</ModalContent>\r\n\t\t\t\t</ModalContext.Provider>\r\n\r\n\t\t\t\t{/* Bottom margin, grows more than top margin */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--bottom',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\tonClick={ this.on_request_close }/>\r\n\t\t\t</ReactModal>\r\n\t\t)\r\n\t}\r\n\r\n\tregisterForm = () =>\r\n\t{\r\n\t\t// Using a counter instead of a boolean here\r\n\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t// (React reconciliation algorythm implementation details)\r\n\t\tthis.setState(({ form }) => ({ form: form + 1 }))\r\n\t}\r\n\r\n\tunregisterForm = () =>\r\n\t{\r\n\t\tif (this.unmounted)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Using a counter instead of a boolean here\r\n\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t// (React reconciliation algorythm implementation details)\r\n\t\tthis.setState(({ form }) => ({ form: form - 1 }))\r\n\t}\r\n\r\n\t// Play \"cannot close\" animation on the modal\r\n\tindicate_cannot_close()\r\n\t{\r\n\t\tconst { could_not_close_because_busy_animation_duration } = this.props\r\n\t\tconst { could_not_close_because_busy } = this.state\r\n\r\n\t\tif (!could_not_close_because_busy)\r\n\t\t{\r\n\t\t\tthis.could_not_close_because_busy_animation_timeout = setTimeout(() =>\r\n\t\t\t{\r\n\t\t\t\tthis.could_not_close_because_busy_animation_timeout = undefined\r\n\t\t\t\tthis.setState({ could_not_close_because_busy: false })\r\n\t\t\t},\r\n\t\t\t// Give it a bit of extra time to finish the CSS animation\r\n\t\t\tcould_not_close_because_busy_animation_duration * 1.1)\r\n\r\n\t\t\tthis.setState({ could_not_close_because_busy: true })\r\n\t\t}\r\n\t}\r\n\r\n\ton_request_close = (event) =>\r\n\t{\r\n\t\tconst { closeLabel } = this.props\r\n\t\tconst { form } = this.state\r\n\r\n\t\t// If the modal has an explicit \"Cancel\" button,\r\n\t\t// then allow closing it by hitting \"Escape\" key,\r\n\t\t// but don't close it on a click outside.\r\n\t\t// (because a user wouldn't want to loose form data due to a misclick)\r\n\t\tif (closeLabel && form && event && event.type !== 'keydown')\r\n\t\t{\r\n\t\t\tthis.indicate_cannot_close()\r\n\t\t\t// Focus on `<ReactModal/>` element.\r\n\t\t\treturn this.content.focus()\r\n\t\t}\r\n\r\n\t\tthis.closeIfNotBusy()\r\n\t}\r\n\r\n\tcloseIfNotBusy = () =>\r\n\t{\r\n\t\tconst { wait, busy, close, closeTimeout } = this.props\r\n\r\n\t\t// For weird messed development mode cases\r\n\t\tif (this.unmounted)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Don't close the modal if it's busy\r\n\t\tif (wait || busy)\r\n\t\t{\r\n\t\t\treturn this.indicate_cannot_close()\r\n\t\t}\r\n\r\n\t\t// Abruptly end \"couldn't close\" animation to make room for closing animation\r\n\t\tthis.setState({ could_not_close_because_busy: false })\r\n\r\n\t\t// Close the modal\r\n\t\tif (close)\r\n\t\t{\r\n\t\t\tclose()\r\n\t\t}\r\n\t}\r\n\r\n\t// If the user scrolled on a previously shown react-modal,\r\n\t// then reset that previously scrolled position.\r\n\treset_content_scroll()\r\n\t{\r\n\t\tdocument.querySelector('.ReactModal__Overlay').scrollTop = 0\r\n\t}\r\n\r\n\t// Hides the main (body) scrollbar upon showing a modal\r\n\t// and also adjusts the width of all \"full-width\" elements\r\n\t// so that they don't expand no that the scrollbar is absent.\r\n\t//\r\n\t// This doesn't account for window resizes\r\n\t// but since my body is always `overflow: visible` (a good practice)\r\n\t// there's no difference and it should work in any scenario.\r\n\t//\r\n\tadjust_scrollbar_after_open()\r\n\t{\r\n\t\t// A dummy `<div/>` to measure\r\n\t\t// the difference in width\r\n\t\t// needed for the \"full-width\" elements\r\n\t\t// after the main (body) scrollbar is deliberately hidden.\r\n\t\tconst div = document.createElement('div')\r\n\t\tdiv.style.position = 'fixed'\r\n\t\tdiv.style.left     = 0\r\n\t\tdiv.style.right    = 0\r\n\t\tdocument.body.appendChild(div)\r\n\r\n\t\t// Calculate the width of the dummy `<div/>`\r\n\t\t// before the main (body) scrollbar is deliberately hidden.\r\n\t\tconst width_before = div.clientWidth\r\n\r\n\t\t// Hide the main (body) scrollbar\r\n\t\t// so that when a user scrolls in an open modal\r\n\t\t// this `scroll` event doesn't go through\r\n\t\t// and scroll the main page.\r\n\t\tdocument.body.style.overflow = 'hidden'\r\n\r\n\t\t// All \"full-width\" elements will need their\r\n\t\t// width to be adjusted by this amount\r\n\t\t// because of the now-hidden main (body) scrollbar\r\n\r\n\t\t// Calculate the width of the dummy `<div/>`\r\n\t\t// after the main (body) scrollbar is deliberately hidden.\r\n\t\tconst width_adjustment = div.clientWidth - width_before\r\n\r\n\t\tdocument.body.removeChild(div)\r\n\r\n\t\t// \"full-width\" elements include `document.body`\r\n\t\t// and all `position: fixed` elements\r\n\t\t// which should be marked with this special CSS class.\r\n\t\t//\r\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\r\n\t\t// to all full-width `position: fixed` elements.\r\n\t\t// Such elements must not be `width: 100%`\r\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\r\n\t\t//\r\n\t\t// Adjusts the width of all \"full-width\" elements\r\n\t\t// so that they don't expand by the width of the (now absent) scrollbar\r\n\t\t//\r\n\t\tfor (const element of get_full_width_elements())\r\n\t\t{\r\n\t\t\telement.style.marginRight = width_adjustment + 'px'\r\n\t\t}\r\n\r\n\t\tthis.reset_content_scroll()\r\n\t}\r\n\r\n\ton_after_open = () =>\r\n\t{\r\n\t\tconst { afterOpen } = this.props\r\n\r\n\t\tthis.adjust_scrollbar_after_open()\r\n\r\n\t\tif (afterOpen)\r\n\t\t{\r\n\t\t\tafterOpen()\r\n\t\t}\r\n\t}\r\n\r\n\t// Restores original `document` scrollbar.\r\n\tadjust_scrollbar_after_close()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tbodyOverflowX,\r\n\t\t\tbodyOverflowY\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// All \"full-width\" elements will need their\r\n\t\t// width to be restored back to the original value\r\n\t\t// now that the main (body) scrollbar is being restored.\r\n\r\n\t\t// \"full-width\" elements include `document.body`\r\n\t\t// and all `position: fixed` elements\r\n\t\t// which should be marked with this special CSS class.\r\n\t\t//\r\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\r\n\t\t// to all full-width `position: fixed` elements.\r\n\t\t// Such elements must not be `width: 100%`\r\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\r\n\t\t//\r\n\t\t// Adjusts the width of all \"full-width\" elements back to their original value\r\n\t\t// now that the main (body) scrollbar is being restored.\r\n\t\t//\r\n\t\tfor (const element of get_full_width_elements())\r\n\t\t{\r\n\t\t\telement.style.marginRight = 0\r\n\t\t}\r\n\r\n\t\t// Restore the main (body) scrollbar.\r\n\t\tdocument.body.style.overflowX = bodyOverflowX\r\n\t\tdocument.body.style.overflowY = bodyOverflowY\r\n\t}\r\n\r\n\t// Restores original `document` scrollbar\r\n\t// and resets the modal content (e.g. a form)\r\n\ton_after_close = () =>\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tafterClose,\r\n\t\t\treset\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (reset)\r\n\t\t{\r\n\t\t\treset()\r\n\t\t}\r\n\r\n\t\tif (afterClose)\r\n\t\t{\r\n\t\t\tafterClose()\r\n\t\t}\r\n\r\n\t\tthis.adjust_scrollbar_after_close()\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state)\r\n\t{\r\n\t\tif (props.closeLabel !== state.context.closeLabel)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontext:\r\n\t\t\t\t{\r\n\t\t\t\t\t...state.context,\r\n\t\t\t\t\tcloseLabel : props.closeLabel\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nclass ModalContent extends Component\r\n{\r\n\tfocus()\r\n\t{\r\n\t\tthis.node.focus()\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { reset } = this.props\r\n\r\n\t\tif (reset) {\r\n\t\t\treset()\r\n\t\t}\r\n\t}\r\n\r\n\ttransformChildren()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcloseLabel,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tclose,\r\n\t\t\tcontainsForm,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet closeButtonAdded = false\r\n\t\treturn React.Children.map(children, (element) =>\r\n\t\t{\r\n\t\t\tif (closeButtonIcon && !closeButtonAdded)\r\n\t\t\t{\r\n\t\t\t\tif (element.type === ModalTitleType || element.type === ModalContentType)\r\n\t\t\t\t{\r\n\t\t\t\t\tcloseButtonAdded = true\r\n\t\t\t\t\treturn React.cloneElement(element,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcloseButton : this.render_close_button()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!closeButtonIcon && closeLabel && !containsForm && element.type === Modal.Actions)\r\n\t\t\t{\r\n\t\t\t\treturn React.cloneElement(element,\r\n\t\t\t\t{\r\n\t\t\t\t\tcloseButton: (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--bottom') }\r\n\t\t\t\t\t\t\taction={ close }>\r\n\t\t\t\t\t\t\t{ closeLabel }\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\treturn element\r\n\t\t})\r\n\t}\r\n\r\n\tstoreNode = (ref) => this.node = ref\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tfullscreen,\r\n\t\t\tclassName,\r\n\t\t\tstyle,\r\n\t\t\tcould_not_close_because_busy\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ this.storeNode }\r\n\t\t\t\tclassName={ classNames('rrui__modal__contents',\r\n\t\t\t\t{\r\n\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t'rrui__modal__contents--fullscreen' : fullscreen,\r\n\r\n\t\t\t\t\t// Strictly speaking it's not `.rrui__modal` but this CSS class name will do\r\n\t\t\t\t\t'rrui__modal--could-not-close-because-busy': could_not_close_because_busy\r\n\t\t\t\t},\r\n\t\t\t\tclassName) }\r\n\t\t\t\tstyle={ style }>\r\n\r\n\t\t\t\t{ this.transformChildren() }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_close_button()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcloseLabel,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tclose,\r\n\t\t\twait\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst CloseButtonIcon = closeButtonIcon === true ? CloseIcon : closeButtonIcon;\r\n\r\n\t\tif (!CloseButtonIcon)\r\n\t\t{\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Close\r\n\t\t\t\tonClick={ close }\r\n\t\t\t\tcloseLabel={ closeLabel }\r\n\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--top',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__close--busy' : wait\r\n\t\t\t\t}) }>\r\n\t\t\t\t<CloseButtonIcon/>\r\n\t\t\t</Close>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst react_modal_style =\r\n{\r\n\toverlay:\r\n\t{\r\n\t\tposition : 'fixed',\r\n\t\tleft     : 0,\r\n\t\ttop      : 0,\r\n\t\tright    : 0,\r\n\t\tbottom   : 0,\r\n\t\t// Will show a scrollbar in case of modal content overflowing viewport height\r\n\t\toverflow : 'auto'\r\n\t}\r\n}\r\n\r\n// \"full-width\" elements include `document.body`\r\n// and all `position: fixed` elements\r\n// which should be marked with this special CSS class.\r\n//\r\n// Make sure to add `.rrui__fixed-full-width` CSS class\r\n// to all full-width `position: fixed` elements.\r\n// Such elements must not be `width: 100%`\r\n// but rather `width: auto` or `left: 0; right: 0;`.\r\n//\r\nfunction get_full_width_elements()\r\n{\r\n\t// `Array.from` requires ES6 polyfill.\r\n\t// const full_width_elements = Array.from(document.querySelectorAll('.rrui__fixed-full-width'))\r\n\tconst full_width_elements = [].slice.call(document.querySelectorAll('.rrui__fixed-full-width'))\r\n\tfull_width_elements.push(document.body)\r\n\treturn full_width_elements\r\n}\r\n\r\nconst Title = ({ closeButton, className, children, ...rest }) => (\r\n\t<h2\r\n\t\tclassName={classNames('rrui__modal__title', className, {\r\n\t\t\t'rrui__modal__title--close-button' : closeButton\r\n\t\t})}\r\n\t\t{...rest}>\r\n\t\t{closeButton && <span className=\"rrui__modal__title-itself\">{children}</span>}\r\n\t\t{!closeButton && children}\r\n\t\t{closeButton}\r\n\t</h2>\r\n)\r\n\r\nconst Content = ({ closeButton, className, children, ...rest }) => (\r\n\t<div\r\n\t\tclassName={classNames('rrui__modal__content', className, {\r\n\t\t\t'rrui__modal__content--close-button' : closeButton\r\n\t\t})}\r\n\t\t{...rest}>\r\n\t\t{closeButton && <div className=\"rrui__modal__content-itself\">{children}</div>}\r\n\t\t{!closeButton && children}\r\n\t\t{closeButton}\r\n\t</div>\r\n)\r\n\r\nconst Actions = ({ closeButton, children }) => (\r\n\t<div className=\"rrui__modal__actions\">\r\n\t\t{closeButton}\r\n\t\t{children}\r\n\t</div>\r\n)\r\n\r\n// Workaround for `react-hot-loader`.\r\n// https://github.com/gaearon/react-hot-loader#checking-element-types\r\nconst ModalTitleType = <Title/>.type\r\nconst ModalContentType = <Content/>.type\r\n\r\nModal = reactLifecyclesCompat(Modal)\r\n\r\nModal.Title = Title\r\nModal.Content = Content\r\nModal.Actions = Actions\r\n\r\nexport default Modal"]}