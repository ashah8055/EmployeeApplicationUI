{"ast":null,"code":"import _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Types from \"../actions/types\";\nvar initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n};\n\nvar handleValidateUserServerResponseSuccess = function handleValidateUserServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  var userEmail = state.user.email;\n\n  if (action.response !== undefined) {\n    var ObjtValues = Object.values(action.response);\n\n    if (ObjtValues.length > 0 && state.user.email === ObjtValues[0][\"primaryEmailId\"]) {\n      newState = Object.assign({}, state, {\n        \"loggedIn\": true,\n        \"isValidToken\": true,\n        \"pending\": false,\n        \"empDetails\": Object.assign({}, ObjtValues[0])\n      });\n    } else {\n      if (state.signUpUsersList.length > 0) {\n        var ObjItem = state.signUpUsersList.find(function (i) {\n          return i.email === userEmail;\n        });\n\n        if (ObjItem && Object.values(ObjItem).length > 0) {\n          newState = Object.assign({}, state, {\n            \"loggedIn\": true,\n            \"isValidToken\": true,\n            \"pending\": false,\n            \"isBusiness\": true\n          });\n        }\n      } else {\n        newState = Object.assign({}, state, {\n          \"loggedIn\": false,\n          \"isValidToken\": true,\n          \"pending\": false,\n          \"isBusiness\": false\n        });\n      }\n    }\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleValidateUserServerResponseError = function handleValidateUserServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nvar handleBusinessUserListServerResponseSuccess = function handleBusinessUserListServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  var ObjtValues = Object.values(action.response);\n\n  if (action.response !== undefined) {\n    newState = Object.assign({}, state, {\n      signUpUsersList: Object.assign([], ObjtValues)\n    });\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleLoginServerResponseSuccess = function handleLoginServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"result\": Object.assign({}, state.user, action.result)\n    });\n    window.localStorage.userLoginToken = action.response.refreshToken;\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleLoginServerResponseError = function handleLoginServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nvar handleLogoutServerResponseSuccess = function handleLogoutServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  newState = Object.assign({}, state, {\n    \"user\": Object.assign({}, {}),\n    \"loggedIn\": false,\n    \"isValidToken\": false\n  });\n  window.localStorageremoveItem(\"userLoginToken\");\n  return _objectSpread({}, newState);\n};\n\nvar handleLogoutServerResponseError = function handleLogoutServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  newState = Object.assign({}, state, {\n    \"user\": Object.assign({}, {}),\n    \"loggedIn\": false,\n    \"isValidToken\": false\n  });\n  window.localStorageremoveItem(\"userLoginToken\");\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, {\n        \"loggedIn\": false,\n        \"isValidToken\": false,\n        \"pending\": true\n      });\n\n    case Types.LOGOUT_USER:\n      return _objectSpread({}, state);\n\n    case Types.GET_BUSINESS_USERS_LIST:\n      return _objectSpread({}, state);\n\n    case Types.GET_BUSINESS_USERS_LIST_SERVER_RESPONSE_SUCCESS:\n      return handleBusinessUserListServerResponseSuccess(state, action);\n\n    case Types.LOGOUT_USER_SERVER_RESPONSE_SUCCESS:\n      return _objectSpread({}, state);\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state, action);\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state, action);\n\n    case Types.VALIDATE_USER_SERVER_RESPONSE_ERROR:\n      return handleValidateUserServerResponseError(state, action);\n\n    case Types.VALIDATE_USER_SERVER_RESPONSE_SUCCESS:\n      return handleValidateUserServerResponseSuccess(state, action);\n\n    case Types.SERVER_CALL_FAILED:\n      return _objectSpread({}, state);\n\n    case Types.LOGOUT_USER_SERVER_REPONSE_ERROR:\n      return _objectSpread({}, state);\n\n    case Types.VALIDATE_TOKEN:\n      return _objectSpread({}, state);\n\n    case Types.IS_USER_LOGGED_IN:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/reducers/auth.js"],"names":["Types","initialUserObj","handleValidateUserServerResponseSuccess","state","action","newState","userEmail","user","email","response","undefined","ObjtValues","Object","values","length","assign","signUpUsersList","ObjItem","find","i","handleValidateUserServerResponseError","handleBusinessUserListServerResponseSuccess","handleLoginServerResponseSuccess","result","window","localStorage","userLoginToken","refreshToken","handleLoginServerResponseError","handleLogoutServerResponseSuccess","localStorageremoveItem","handleLogoutServerResponseError","type","LOGIN_USER","LOGOUT_USER","GET_BUSINESS_USERS_LIST","GET_BUSINESS_USERS_LIST_SERVER_RESPONSE_SUCCESS","LOGOUT_USER_SERVER_RESPONSE_SUCCESS","LOGIN_USER_SERVER_RESPONSE_ERROR","LOGIN_USER_SERVER_RESPONSE_SUCCESS","VALIDATE_USER_SERVER_RESPONSE_ERROR","VALIDATE_USER_SERVER_RESPONSE_SUCCESS","SERVER_CALL_FAILED","LOGOUT_USER_SERVER_REPONSE_ERROR","VALIDATE_TOKEN","IS_USER_LOGGED_IN"],"mappings":"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","sourcesContent":["import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n  \"signUpUsersList\":[],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\":{},\n  \"user\":{ \"email\": \"\",\n           \"displayName\": \"\",\n           \"registered\": false,\n           \"refreshToken\": \"\",\n           \"expiresIn\": \"\",\n           \"emailVerified\": false,\n           \"validSince\": \"\",\n           \"disabled\": false,\n           \"lastLoginAt\": \"\",\n           \"createdAt\": \"\"}\n\n};\n\nconst handleValidateUserServerResponseSuccess = (state, action) => {\n        let newState = {...state};\n        const userEmail = state.user.email;\n        if(action.response !== undefined ){                \n                const ObjtValues = Object.values(action.response);\n                if(ObjtValues.length > 0 && (state.user.email === ObjtValues[0][\"primaryEmailId\"])){\n                        newState = Object.assign({}, state, {\"loggedIn\" :true,\"isValidToken\":true, \"pending\":false, \"empDetails\": Object.assign({}, ObjtValues[0])})                \n                } else{\n\n                        if(state.signUpUsersList.length > 0){\n                                const ObjItem =  state.signUpUsersList.find((i) => {\n                                                return i.email === userEmail;\n                                        });\n                                if(ObjItem && Object.values(ObjItem).length > 0){\n                                        newState = Object.assign({}, state, {\"loggedIn\" :true,\"isValidToken\":true, \"pending\":false, \"isBusiness\":true })                \n                                }                                \n                        } else{\n                                newState = Object.assign({}, state, {\"loggedIn\" :false,\"isValidToken\":true, \"pending\":false, \"isBusiness\":false })                \n                        }                 \n                }                \n        }\n        return {...newState};\n}\nconst handleValidateUserServerResponseError = (state, action) => {\n        let newState = {...state};\n        return {...newState};\n}\n\nconst handleBusinessUserListServerResponseSuccess = (state, action) => {\n        let newState = {...state};\n        const ObjtValues = Object.values(action.response);\n        if(action.response !== undefined ){          \n                newState = Object.assign({}, state, {signUpUsersList:Object.assign([], ObjtValues)});\n        }\n        return {...newState};\n}\n\nconst handleLoginServerResponseSuccess = (state, action) => {\n  let newState = {...state};\n  if(action.result !== undefined){\n    newState = Object.assign({}, state, {\"result\" : Object.assign({}, state.user, action.result)})\n    window.localStorage.userLoginToken = action.response.refreshToken;\n  }\n  return {...newState};\n}\nconst handleLoginServerResponseError = (state, action) => {\n  let newState = {...state};\n  return {...newState};\n}\nconst handleLogoutServerResponseSuccess = (state, action) => {\n  let newState = {...state};\n  newState = Object.assign({}, state, {\"user\" : Object.assign({},{}),\"loggedIn\" :false,\"isValidToken\":false })\n  window.localStorageremoveItem(\"userLoginToken\");\n  return {...newState};\n}\nconst handleLogoutServerResponseError = (state, action) => {\n  let newState = {...state};\n  newState = Object.assign({}, state, {\"user\" : Object.assign({},{}),\"loggedIn\" :false,\"isValidToken\":false })\n  window.localStorageremoveItem(\"userLoginToken\");\n  return {...newState};\n}\n\nexport default (state = initialUserObj, action) => {\n    switch(action.type){\n        case Types.LOGIN_USER :\n            return Object.assign({}, state,{ \"loggedIn\" :false,\"isValidToken\":false, \"pending\":true});\n        case Types.LOGOUT_USER :\n                return {...state};\n        case Types.GET_BUSINESS_USERS_LIST :\n                return {...state};\n        case Types.GET_BUSINESS_USERS_LIST_SERVER_RESPONSE_SUCCESS:\n                return handleBusinessUserListServerResponseSuccess(state, action);\n        case Types.LOGOUT_USER_SERVER_RESPONSE_SUCCESS :\n                return {...state};\n        case Types.LOGIN_USER_SERVER_RESPONSE_ERROR :\n                return handleLoginServerResponseError(state, action);\n        case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS :\n                return handleLoginServerResponseSuccess(state, action);\n        case Types.VALIDATE_USER_SERVER_RESPONSE_ERROR :\n                return handleValidateUserServerResponseError(state, action);\n        case Types.VALIDATE_USER_SERVER_RESPONSE_SUCCESS :\n                return handleValidateUserServerResponseSuccess(state, action);\n        case Types.SERVER_CALL_FAILED :\n                return {...state};\n        case Types.LOGOUT_USER_SERVER_REPONSE_ERROR :\n                return {...state};\n        case Types.VALIDATE_TOKEN :\n            return { ...state};\n        case Types.IS_USER_LOGGED_IN :\n            return { ...state};\n        default :\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}