"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.onBlurForReduxForm = onBlurForReduxForm;
// This `onBlur` interceptor is a workaround for `redux-form`,
// so that it gets the right (parsed, not the formatted one)
// `event.target.value` in its `onBlur` handler.
function onBlurForReduxForm(onBlur, event, value) {
	var _event = _extends({}, event, {
		target: _extends({}, event.target, {
			value: value
		})

		// For `redux-form` event detection.
		// https://github.com/erikras/redux-form/blob/v5/src/events/isEvent.js
	});_event.stopPropagation = event.stopPropagation;
	_event.preventDefault = event.preventDefault;

	onBlur(_event);
}
//# sourceMappingURL=redux-form.js.map