{"ast":null,"code":"import _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Type from \"../actions/types\";\nvar initialUserObj = {\n  \"result\": []\n};\n\nvar handleProjectList = function handleProjectList(state, action) {\n  console.log(\"ListProject\" + JSON.stringify(action));\n\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"result\": action.result\n    });\n    console.log(\"New Poroj List\" + JSON.stringify(newState));\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleCreateProject = function handleCreateProject(state, action) {\n  console.log(\"CreateProkect\" + JSON.stringify(action.result));\n\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, action.result);\n    console.log(\"CreateProkect\" + JSON.stringify(newState));\n  }\n\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case Type.CREATE_PROJECT:\n      return _objectSpread({}, state, {\n        projectDetails: action.projectDetails\n      });\n\n    case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n      console.log(\"CREATE_SUCESS\" + state);\n      return _objectSpread({}, state);\n\n    case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR:\n      return _objectSpread({}, state);\n\n    case Type.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n      return handleProjectList(state, action);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/reducers/ProjectDetails.js"],"names":["Type","initialUserObj","handleProjectList","state","action","console","log","JSON","stringify","newState","result","undefined","Object","assign","handleCreateProject","type","CREATE_PROJECT","projectDetails","CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS","CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR","LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS"],"mappings":";AAAA,OAAO,KAAKA,IAAZ,MAAsB,kBAAtB;AACA,IAAMC,cAAc,GAAG;AAEnB,YAAU;AAFS,CAAvB;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA5B;;AACA,MAAIK,QAAQ,qBAAQN,KAAR,CAAZ;;AACA,MAAIC,MAAM,CAACM,MAAP,KAAkBC,SAAtB,EAAiC;AAC7BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAAE,gBAAUC,MAAM,CAACM;AAAnB,KAAzB,CAAX;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAA/B;AACH;;AACD,2BAAYA,QAAZ;AAEH,CATD;;AAWA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,KAAD,EAAQC,MAAR,EAAmB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACM,MAAtB,CAA9B;;AACA,MAAID,QAAQ,qBAAQN,KAAR,CAAZ;;AACA,MAAIC,MAAM,CAACM,MAAP,KAAkBC,SAAtB,EAAiC;AAC7BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyBC,MAAM,CAACM,MAAhC,CAAX;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAA9B;AACH;;AACD,2BAAYA,QAAZ;AAEH,CATD;;AAUA,gBAAe,YAAyC;AAAA,MAAxCN,KAAwC,uEAAhCF,cAAgC;AAAA,MAAhBG,MAAgB,uEAAP,EAAO;;AACpD,UAAQA,MAAM,CAACW,IAAf;AACI,SAAKf,IAAI,CAACgB,cAAV;AACI,+BAAYb,KAAZ;AAAmBc,QAAAA,cAAc,EAAEb,MAAM,CAACa;AAA1C;;AACJ,SAAKjB,IAAI,CAACkB,6CAAV;AACIb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,KAA9B;AACA,+BAAYA,KAAZ;;AACJ,SAAKH,IAAI,CAACmB,4CAAV;AACI,+BAAYhB,KAAZ;;AACJ,SAAKH,IAAI,CAACoB,2CAAV;AACI,aAAOlB,iBAAiB,CAACC,KAAD,EAAQC,MAAR,CAAxB;;AACJ;AACI,+BAAYD,KAAZ;AAXR;AAaH,CAdD","sourcesContent":["import * as Type from \"../actions/types\";\nconst initialUserObj = {\n\n    \"result\": []\n};\n\nconst handleProjectList = (state, action) => {\n    console.log(\"ListProject\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, { \"result\": action.result })\n        console.log(\"New Poroj List\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n\n}\n\nconst handleCreateProject = (state, action) => {\n    console.log(\"CreateProkect\" + JSON.stringify(action.result));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, action.result)\n        console.log(\"CreateProkect\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n\n}\nexport default (state = initialUserObj, action = {}) => {\n    switch (action.type) {\n        case Type.CREATE_PROJECT:\n            return { ...state, projectDetails: action.projectDetails }\n        case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            console.log(\"CREATE_SUCESS\" + state);\n            return { ...state }\n        case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR:\n            return { ...state }\n        case Type.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleProjectList(state, action);\n        default:\n            return { ...state };\n    }\n};"]},"metadata":{},"sourceType":"module"}