{"version":3,"sources":["../source/format.test.js"],"names":["describe","it","formatter","test_caret_position","digit_index","caret_in_formatted","to","deep","equal","text","caret","undefined"],"mappings":";;AAAA;;AAEA;;;;AACA;;;;;;AAEAA,mBAAmB,YACnB;AACCC,mCAAkC,YAClC;AACC,MAAMC,YAAY,iCAAmB,iBAAnB,CAAlB;;AAEA,MAAMC,sBAAsB,SAAtBA,mBAAsB,CAACC,WAAD,EAAcC,kBAAd,EAC5B;AACC,qBAAO,sBAEN,YAFM,EAGND,WAHM,EAINF,SAJM,CAAP,EAMCI,EAND,CAMIC,IANJ,CAMSC,KANT,CAOC;AACAC,UAAM,iBADN;AAEAC,WAAOL;AAFP,IAPD;AAWA,GAbD;;AAeAF,sBAAoB,CAApB,EAAuB,CAAvB;AACAA,sBAAoB,CAApB,EAAuB,CAAvB;AACAA,sBAAoB,CAApB,EAAuB,CAAvB;;AAEAA,sBAAoB,CAApB,EAAuB,CAAvB;AACAA,sBAAoB,CAApB,EAAuB,CAAvB;AACAA,sBAAoB,CAApB,EAAuB,CAAvB;;AAEAA,sBAAoB,CAApB,EAAuB,EAAvB;AACAA,sBAAoB,CAApB,EAAuB,EAAvB;;AAEAA,sBAAoB,CAApB,EAAuB,EAAvB;AACAA,sBAAoB,CAApB,EAAuB,EAAvB;;AAEA;AACAA,sBAAoB,EAApB,EAAwB,EAAxB;AACA,EAnCD;;AAqCAF,IAAG,yDAAH,EAA8D,YAC9D;AACC,oBAAO,sBAEN,YAFM,EAGN,CAHM,EAIN,iBAJM,CAAP,EAMCK,EAND,CAMIC,IANJ,CAMSC,KANT,CAOC;AACAC,SAAM,iBADN;AAEAC,UAAO;AAFP,GAPD;AAWA,EAbD;;AAeAT,IAAG,4CAAH,EAAiD,YACjD;AACC,oBAAO,sBAEN,YAFM,EAGNU,SAHM,EAIN,iBAJM,CAAP,EAMCL,EAND,CAMIC,IANJ,CAMSC,KANT,CAOC;AACAC,SAAM,iBADN;AAEAC,UAAO;AAFP,GAPD;AAWA,EAbD;;AAeAT,IAAG,gEAAH,EAAqE,YACrE;AACC,oBAAO,sBAEN,YAFM,EAGN,CAHM;AAIN;AACA,cAAM,CAAE,CALF,CAAP,EAOCK,EAPD,CAOIC,IAPJ,CAOSC,KAPT,CAQC;AACAC,SAAM,YADN;AAEAC,UAAO;AAFP,GARD;AAYA,EAdD;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5GD","file":"format.test.js","sourcesContent":["import { expect } from 'chai'\r\n\r\nimport format from '../source/format'\r\nimport template_formatter from '../source/template formatter'\r\n\r\ndescribe(`format`, function()\r\n{\r\n\tit(`should format phone numbers`, function()\r\n\t{\r\n\t\tconst formatter = template_formatter('(xxx) xxx-xx-xx')\r\n\r\n\t\tconst test_caret_position = (digit_index, caret_in_formatted) =>\r\n\t\t{\r\n\t\t\texpect(format\r\n\t\t\t(\r\n\t\t\t\t'8005553535',\r\n\t\t\t\tdigit_index,\r\n\t\t\t\tformatter\r\n\t\t\t))\r\n\t\t\t.to.deep.equal\r\n\t\t\t({\r\n\t\t\t\ttext: '(800) 555-35-35',\r\n\t\t\t\tcaret: caret_in_formatted\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\ttest_caret_position(0, 1)\r\n\t\ttest_caret_position(1, 2)\r\n\t\ttest_caret_position(2, 3)\r\n\r\n\t\ttest_caret_position(3, 6)\r\n\t\ttest_caret_position(4, 7)\r\n\t\ttest_caret_position(5, 8)\r\n\r\n\t\ttest_caret_position(6, 10)\r\n\t\ttest_caret_position(7, 11)\r\n\r\n\t\ttest_caret_position(8, 13)\r\n\t\ttest_caret_position(9, 14)\r\n\r\n\t\t// After the last digit\r\n\t\ttest_caret_position(10, 15)\r\n\t})\r\n\r\n\tit('should autoconstruct template formatter from a template', function()\r\n\t{\r\n\t\texpect(format\r\n\t\t(\r\n\t\t\t'8005553535',\r\n\t\t\t0,\r\n\t\t\t'(xxx) xxx-xx-xx'\r\n\t\t))\r\n\t\t.to.deep.equal\r\n\t\t({\r\n\t\t\ttext: '(800) 555-35-35',\r\n\t\t\tcaret: 1\r\n\t\t})\r\n\t})\r\n\r\n\tit('should format value with no caret position', function()\r\n\t{\r\n\t\texpect(format\r\n\t\t(\r\n\t\t\t'8005553535',\r\n\t\t\tundefined,\r\n\t\t\t'(xxx) xxx-xx-xx'\r\n\t\t))\r\n\t\t.to.deep.equal\r\n\t\t({\r\n\t\t\ttext: '(800) 555-35-35',\r\n\t\t\tcaret: 15\r\n\t\t})\r\n\t})\r\n\r\n\tit('should format value with no template preserving caret position', function()\r\n\t{\r\n\t\texpect(format\r\n\t\t(\r\n\t\t\t'8005553535',\r\n\t\t\t2,\r\n\t\t\t// () => { text: '8005553535' }\r\n\t\t\t() => {}\r\n\t\t))\r\n\t\t.to.deep.equal\r\n\t\t({\r\n\t\t\ttext: '8005553535',\r\n\t\t\tcaret: 2\r\n\t\t})\r\n\t})\r\n\r\n\t// it('should position caret correctly with partially filled templates using spacers', function()\r\n\t// {\r\n\t// \texpect(format\r\n\t// \t({\r\n\t// \t\t'88005',\r\n\t// \t\t0\r\n\t// \t},\r\n\t// \t(value) =>\r\n\t// \t{\r\n\t// \t\tconst result =\r\n\t// \t\t{\r\n\t// \t\t\t'8 (800) 5  -  -  ',\r\n\t// \t\t\ttemplate: 'x (xxx) xxx-xx-xx'\r\n\t// \t\t}\r\n\t//\r\n\t// \t\treturn result\r\n\t// \t})\r\n\t// \t.to.deep.equal\r\n\t// \t({\r\n\t// \t\ttext: '(800) 555-35-35',\r\n\t// \t\tcaret: 1\r\n\t// \t})\r\n\t// })\r\n})"]}