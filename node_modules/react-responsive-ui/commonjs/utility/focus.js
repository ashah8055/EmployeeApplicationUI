'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.onBlur = onBlur;
exports.focus = focus;

var _dom = require('./dom');

function onBlur(event, onFocusOut, getComponentNode, getComponentNode2, preventBlur) {
	function _onBlur(focusedNode) {
		if (preventBlur) {
			if (preventBlur() === true) {
				return false;
			}
		}

		// If the currently focused element is inside the expandable
		// then don't collapse it.
		if (focusedNode && (getComponentNode().contains(focusedNode) || getComponentNode2 && getComponentNode2().contains(focusedNode))) {
			return false;
		}

		// Collapse the expandable.
		// (clicked/tapped outside or tabbed-out)
		onFocusOut(event);
		return true;
	}

	// Blur `event.relatedTarget` doesn't work in Internet Explorer (in React).
	// https://github.com/gpbl/react-day-picker/issues/668
	// https://github.com/facebook/react/issues/3751
	//
	// Therefore, using a 30ms timeout hack in `onBlur` handler
	// to get the new currently focused page element
	// and check if that element is inside the component.
	// https://github.com/mui-org/material-ui/blob/v1-beta/packages/material-ui/src/Menu/MenuList.js
	// Until Internet Explorer is no longer a supported browser.
	//
	if ((0, _dom.isInternetExplorer)()) {
		return setTimeout(function () {
			return getComponentNode() && _onBlur(document.activeElement);
		}, 30);
	}

	// There was an error in Firefox 52:
	// "Argument 1 of Node.contains does not implement interface Node".
	// To prevent such errors `event.relatedTarget` is validated manually here.
	return _onBlur((0, _dom.isElement)(event.relatedTarget) ? event.relatedTarget : undefined);
}

/**
 * Focuses on a React component (if any).
 * @param  {?object} component
 */
function focus(component) {
	// If the component has been already unmounted.
	// (safety)
	if (!component) {
		return;
	}

	if (typeof component.focus === 'function') {
		return component.focus();
	}
}
//# sourceMappingURL=focus.js.map