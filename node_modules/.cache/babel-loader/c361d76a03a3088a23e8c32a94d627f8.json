{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Amar/emp/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchLoginUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service';\n\nfunction fetchLoginUser(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.firstname = \"asdfg\"; //action.code;\n\n          formBody.lastname = \"zxcvbb\"; //action.provider;\n\n          formBody.age = \"34\"; //const reqMethod = \"POST\";\n\n          reqMethod = \"GET\";\n          loginUrl = 'http://localhost:8080/employee?firstname=\"test\"&lastname=\"test\"&age=34';\n          _context.next = 10;\n          return call(GetDataFromServer, loginUrl, '', '');\n\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return response.json();\n\n        case 13:\n          result = _context.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 18;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 18:\n          _context.next = 22;\n          break;\n\n        case 20:\n          _context.next = 22;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 22:\n          _context.next = 27;\n          break;\n\n        case 24:\n          _context.prev = 24;\n          _context.t0 = _context[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context.t0);\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 24]]);\n}\n\nexport default function rootSaga(params) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(Types.LOGIN_USER, fetchLoginUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/store/sagas.js"],"names":["fetchLoginUser","rootSaga","takeEvery","call","put","select","take","fork","all","takeLatest","Types","GetDataFromServer","action","console","log","JSON","stringify","formBody","firstname","lastname","age","reqMethod","loginUrl","response","json","result","error","type","LOGIN_USER_SERVER_RESPONSE_SUCCESS","params","LOGIN_USER"],"mappings":";;;;yBAMUA,c;;;yBAwBeC,Q;;AA9BzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,GAAnD,EAAwDC,UAAxD,QAA0E,oBAA1E;AACA,OAAO,KAAKC,KAAZ,MAAuB,kBAAvB;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAIA,SAAUX,cAAV,CAAyBY,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAzB;AACIK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACC,SAAT,GAAqB,OAArB,CAJJ,CAIiC;;AAC7BD,UAAAA,QAAQ,CAACE,QAAT,GAAoB,QAApB,CALJ,CAKkC;;AAC9BF,UAAAA,QAAQ,CAACG,GAAT,GAAe,IAAf,CANJ,CAOI;;AACMC,UAAAA,SARV,GAQsB,KARtB;AASUC,UAAAA,QATV,GASqB,wEATrB;AAAA;AAUqB,iBAAMnB,IAAI,CAACQ,iBAAD,EAAoBW,QAApB,EAA8B,EAA9B,EAAkC,EAAlC,CAAV;;AAVrB;AAUUC,UAAAA,QAVV;AAAA;AAWmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAXnB;AAWUC,UAAAA,MAXV;AAYIZ,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBW,MAA5B;;AAZJ,eAaQA,MAAM,CAACC,KAbf;AAAA;AAAA;AAAA;;AAAA;AAcM,iBAAMtB,GAAG,CAAC;AAAEuB,YAAAA,IAAI,EAAE,iCAAR;AAA2CD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAAzD,WAAD,CAAT;;AAdN;AAAA;AAAA;;AAAA;AAAA;AAgBM,iBAAMtB,GAAG,CAAC;AAAEuB,YAAAA,IAAI,EAAEjB,KAAK,CAACkB,kCAAd;AAAkDH,YAAAA,MAAM,EAANA;AAAlD,WAAD,CAAT;;AAhBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBI;AACAZ,UAAAA,OAAO,CAACC,GAAR;;AApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBA,eAAe,SAAUb,QAAV,CAAmB4B,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAM3B,SAAS,CAACQ,KAAK,CAACoB,UAAP,EAAmB9B,cAAnB,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service';\n\n\n\nfunction* fetchLoginUser(action) {\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.firstname = \"asdfg\";//action.code;\n    formBody.lastname = \"zxcvbb\"; //action.provider;\n    formBody.age = \"34\"\n    //const reqMethod = \"POST\";\n    const reqMethod = \"GET\";\n    const loginUrl = 'http://localhost:8080/employee?firstname=\"test\"&lastname=\"test\"&age=34';\n    const response = yield call(GetDataFromServer, loginUrl, '', '');\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\n\nexport default function* rootSaga(params) {\n  yield takeEvery(Types.LOGIN_USER, fetchLoginUser);\n}\n"]},"metadata":{},"sourceType":"module"}