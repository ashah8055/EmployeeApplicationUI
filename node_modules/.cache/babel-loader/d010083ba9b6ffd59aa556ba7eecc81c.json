{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchLoginUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheet),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheetCalander),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchSaveTimeSheetCalander),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUpUser),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saveEmployee),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(searchEmployee),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport * as Types from \"../actions/types\";\nimport { GetDataFromServer } from \"../service\";\n\nfunction fetchLoginUser(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"LogIn Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.firstName = action.firstName; //action.code;\n\n          formBody.password = action.password; //action.provider;\n\n          reqMethod = \"POST\";\n          console.log(formBody);\n          loginUrl = \"http://localhost:8080/get?firstName=formBody.firstName\";\n          _context.next = 10;\n          return call(GetDataFromServer, loginUrl, \"GET\", formBody);\n\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return response.json();\n\n        case 13:\n          result = _context.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 18;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 18:\n          _context.next = 22;\n          break;\n\n        case 20:\n          _context.next = 22;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 22:\n          _context.next = 27;\n          break;\n\n        case 24:\n          _context.prev = 24;\n          _context.t0 = _context[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context.t0);\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 24]]);\n}\n\nfunction fetchTimeSheet(action) {\n  var formBody, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n          _context2.prev = 1;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.selectWeek = action.selectWeek; //action.provider;\n\n          formBody.jobTitle = action.jobTitle;\n          formBody.approver = action.approver;\n          formBody.client = action.client;\n          formBody.endDate = action.endDate;\n          formBody.projectId = action.projectId;\n          loginUrl = \"http://localhost:8080/create\";\n          _context2.next = 13;\n          return call(GetDataFromServer, loginUrl, \"POST\", formBody);\n\n        case 13:\n          response = _context2.sent;\n          _context2.next = 16;\n          return response.json();\n\n        case 16:\n          result = _context2.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context2.next = 23;\n            break;\n          }\n\n          _context2.next = 21;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 21:\n          _context2.next = 25;\n          break;\n\n        case 23:\n          _context2.next = 25;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 25:\n          _context2.next = 30;\n          break;\n\n        case 27:\n          _context2.prev = 27;\n          _context2.t0 = _context2[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context2.t0);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 27]]);\n}\n\nfunction fetchTimeSheetCalander(action) {\n  var formBody, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheetCalander$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"Submit Action->\" + JSON.stringify(action));\n          _context3.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          loginUrl = \"http://localhost:8080/submit\";\n          _context3.next = 7;\n          return call(GetDataFromServer, loginUrl, \"POST\", formBody);\n\n        case 7:\n          response = _context3.sent;\n          _context3.next = 10;\n          return response.json();\n\n        case 10:\n          result = _context3.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context3.next = 17;\n            break;\n          }\n\n          _context3.next = 15;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 15:\n          _context3.next = 19;\n          break;\n\n        case 17:\n          _context3.next = 19;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 19:\n          _context3.next = 24;\n          break;\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context3.t0);\n\n        case 24:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[1, 21]]);\n}\n\nfunction fetchSaveTimeSheetCalander(action) {\n  var formBody, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchSaveTimeSheetCalander$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n          _context4.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          loginUrl = \"http://localhost:8080/timesheet/save\";\n          _context4.next = 7;\n          return call(GetDataFromServer, loginUrl, \"POST\", formBody);\n\n        case 7:\n          response = _context4.sent;\n          _context4.next = 10;\n          return response.json();\n\n        case 10:\n          result = _context4.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context4.next = 17;\n            break;\n          }\n\n          _context4.next = 15;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 15:\n          _context4.next = 19;\n          break;\n\n        case 17:\n          _context4.next = 19;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 19:\n          _context4.next = 24;\n          break;\n\n        case 21:\n          _context4.prev = 21;\n          _context4.t0 = _context4[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context4.t0);\n\n        case 24:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[1, 21]]);\n}\n\nfunction signUpUser(action) {\n  var formBody, signUpUrl, response, result;\n  return _regeneratorRuntime.wrap(function signUpUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log(\"Submit Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.user = action.user;\n          signUpUrl = \"http://localhost:8080/create\";\n          _context5.next = 7;\n          return call(GetDataFromServer, signUpUrl, \"POST\", formBody.user);\n\n        case 7:\n          response = _context5.sent;\n          _context5.next = 10;\n          return response.json();\n\n        case 10:\n          result = _context5.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context5.next = 17;\n            break;\n          }\n\n          _context5.next = 15;\n          return put({\n            type: \"SIGNUP_USER_SERVER_RESPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 15:\n          _context5.next = 19;\n          break;\n\n        case 17:\n          _context5.next = 19;\n          return put({\n            type: Types.SIGNUP_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 19:\n          _context5.next = 24;\n          break;\n\n        case 21:\n          _context5.prev = 21;\n          _context5.t0 = _context5[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context5.t0);\n\n        case 24:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this, [[0, 21]]);\n}\n\nfunction saveEmployee(action) {\n  var formBody, AddEmpUrl, response, result;\n  return _regeneratorRuntime.wrap(function saveEmployee$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          console.log(\"Submit Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.user = action.user; //const reqMethod = \"POST\";\n\n          AddEmpUrl = \"http://localhost:8080/employee\";\n          _context6.next = 7;\n          return call(GetDataFromServer, AddEmpUrl, \"POST\", formBody.user);\n\n        case 7:\n          response = _context6.sent;\n          _context6.next = 10;\n          return response.json();\n\n        case 10:\n          result = _context6.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context6.next = 17;\n            break;\n          }\n\n          _context6.next = 15;\n          return put({\n            type: \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 15:\n          _context6.next = 19;\n          break;\n\n        case 17:\n          _context6.next = 19;\n          return put({\n            type: Types.EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 19:\n          _context6.next = 24;\n          break;\n\n        case 21:\n          _context6.prev = 21;\n          _context6.t0 = _context6[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context6.t0);\n\n        case 24:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this, [[0, 21]]);\n}\n\nfunction searchEmployee(action) {\n  var formBody, searchEmpUrl, response, result;\n  return _regeneratorRuntime.wrap(function searchEmployee$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log(\"Search Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.firstName = action.user.firstName;\n          console.log(\"Name= \" + formBody.firstName);\n          searchEmpUrl = \"http://localhost:8080/search/{{formBody.firstName}}\";\n          _context7.next = 8;\n          return call(GetDataFromServer, searchEmpUrl, \"GET\", formBody);\n\n        case 8:\n          response = _context7.sent;\n          _context7.next = 11;\n          return response.json();\n\n        case 11:\n          result = _context7.sent;\n          console.log(\"Result Json\" + result);\n\n          if (!result.error) {\n            _context7.next = 18;\n            break;\n          }\n\n          _context7.next = 16;\n          return put({\n            type: \"GET_EMPLOYEE_LIST_ERROR_RESPONSE\",\n            error: result.error\n          });\n\n        case 16:\n          _context7.next = 20;\n          break;\n\n        case 18:\n          _context7.next = 20;\n          return put({\n            type: Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE,\n            result: result\n          });\n\n        case 20:\n          _context7.next = 25;\n          break;\n\n        case 22:\n          _context7.prev = 22;\n          _context7.t0 = _context7[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context7.t0);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, this, [[0, 22]]);\n}\n\nexport default function rootSaga(params) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(Types.LOGIN_USER, fetchLoginUser);\n\n        case 2:\n          _context8.next = 4;\n          return takeEvery(Types.CREATE_TIMESHEET, fetchTimeSheet);\n\n        case 4:\n          _context8.next = 6;\n          return takeEvery(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n\n        case 6:\n          _context8.next = 8;\n          return takeEvery(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n\n        case 8:\n          _context8.next = 10;\n          return takeEvery(Types.SIGNUP_USER, signUpUser);\n\n        case 10:\n          _context8.next = 12;\n          return takeEvery(Types.EMPLOYEE_SAVE_DATABASE, saveEmployee);\n\n        case 12:\n          _context8.next = 14;\n          return takeEvery(Types.GET_EMPLOYEE_LIST, searchEmployee);\n\n        case 14:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, this);\n}","map":{"version":3,"sources":["C:\\React\\EmployeeApplicationUI\\src\\redux\\store\\sagas.js"],"names":["fetchLoginUser","fetchTimeSheet","fetchTimeSheetCalander","fetchSaveTimeSheetCalander","signUpUser","saveEmployee","searchEmployee","rootSaga","takeEvery","call","put","Types","GetDataFromServer","action","console","log","JSON","stringify","formBody","firstName","password","reqMethod","loginUrl","response","json","result","error","type","LOGIN_USER_SERVER_RESPONSE_SUCCESS","selectWeek","jobTitle","approver","client","endDate","projectId","workingdetails","submitTimeSheet","user","signUpUrl","SIGNUP_USER_SERVER_RESPONSE_SUCCESS","AddEmpUrl","EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS","searchEmpUrl","GET_EMPLOYEE_LIST_SUCCESS_RESPONSE","params","LOGIN_USER","CREATE_TIMESHEET","CREATE_TIMESHEET_WORKINGHOUR","CREATE_TIMESHEET_SAVE_WORKINGHOUR","SIGNUP_USER","EMPLOYEE_SAVE_DATABASE","GET_EMPLOYEE_LIST"],"mappings":";;;;yBAIUA,c;;;yBAyBAC,c;;;yBA6BAC,sB;;;yBAsBAC,0B;;;yBAuBAC,U;;;yBA6BAC,Y;;;yBAiCAC,c;;;yBAgCeC,Q;;AArMzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,kBAAvB;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,SAAUZ,cAAV,CAAyBa,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA/B;AACIK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACC,SAAT,GAAqBN,MAAM,CAACM,SAA5B,CAJJ,CAI2C;;AACvCD,UAAAA,QAAQ,CAACE,QAAT,GAAoBP,MAAM,CAACO,QAA3B,CALJ,CAKyC;;AAC/BC,UAAAA,SANV,GAMsB,MANtB;AAOIP,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACMI,UAAAA,QARV,GAQqB,wDARrB;AAAA;AASqB,iBAAMb,IAAI,CAACG,iBAAD,EAAoBU,QAApB,EAA8B,KAA9B,EAAqCJ,QAArC,CAAV;;AATrB;AASUK,UAAAA,QATV;AAAA;AAUmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAVnB;AAUUC,UAAAA,MAVV;AAWIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AAXJ,eAYQA,MAAM,CAACC,KAZf;AAAA;AAAA;AAAA;;AAAA;AAaM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,iCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAbN;AAAA;AAAA;;AAAA;AAAA;AAkBM,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEhB,KAAK,CAACiB,kCAAd;AAAkDH,YAAAA,MAAM,EAANA;AAAlD,WAAD,CAAT;;AAlBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBA,SAAUd,cAAV,CAAyBY,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAnC;AADF;AAGIC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAzB;AACIK,UAAAA,QAJR,GAImB,EAJnB;AAKIA,UAAAA,QAAQ,CAACW,UAAT,GAAsBhB,MAAM,CAACgB,UAA7B,CALJ,CAK6C;;AACzCX,UAAAA,QAAQ,CAACY,QAAT,GAAoBjB,MAAM,CAACiB,QAA3B;AACAZ,UAAAA,QAAQ,CAACa,QAAT,GAAoBlB,MAAM,CAACkB,QAA3B;AACAb,UAAAA,QAAQ,CAACc,MAAT,GAAkBnB,MAAM,CAACmB,MAAzB;AACAd,UAAAA,QAAQ,CAACe,OAAT,GAAmBpB,MAAM,CAACoB,OAA1B;AACAf,UAAAA,QAAQ,CAACgB,SAAT,GAAqBrB,MAAM,CAACqB,SAA5B;AAEMZ,UAAAA,QAZV,GAYqB,8BAZrB;AAAA;AAaqB,iBAAMb,IAAI,CAACG,iBAAD,EAAoBU,QAApB,EAA8B,MAA9B,EAAsCJ,QAAtC,CAAV;;AAbrB;AAaUK,UAAAA,QAbV;AAAA;AAcmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAdnB;AAcUC,UAAAA,MAdV;AAeIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AAfJ,eAgBQA,MAAM,CAACC,KAhBf;AAAA;AAAA;AAAA;;AAAA;AAiBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,iCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAjBN;AAAA;AAAA;;AAAA;AAAA;AAsBM,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEhB,KAAK,CAACiB,kCAAd;AAAkDH,YAAAA,MAAM,EAANA;AAAlD,WAAD,CAAT;;AAtBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BA,SAAUb,sBAAV,CAAiCW,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AADF;AAGQK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACiB,cAAT,GAA0BtB,MAAM,CAACuB,eAAP,CAAuBD,cAAjD;AACMb,UAAAA,QALV,GAKqB,8BALrB;AAAA;AAMqB,iBAAMb,IAAI,CAACG,iBAAD,EAAoBU,QAApB,EAA8B,MAA9B,EAAsCJ,QAAtC,CAAV;;AANrB;AAMUK,UAAAA,QANV;AAAA;AAOmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAPnB;AAOUC,UAAAA,MAPV;AAQIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AARJ,eASQA,MAAM,CAACC,KATf;AAAA;AAAA;AAAA;;AAAA;AAUM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,iCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAVN;AAAA;AAAA;;AAAA;AAAA;AAeM,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEhB,KAAK,CAACiB,kCAAd;AAAkDH,YAAAA,MAAM,EAANA;AAAlD,WAAD,CAAT;;AAfN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,SAAUZ,0BAAV,CAAqCU,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAzC;AADF;AAGQK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACiB,cAAT,GAA0BtB,MAAM,CAACuB,eAAP,CAAuBD,cAAjD;AACMb,UAAAA,QALV,GAKqB,sCALrB;AAAA;AAMqB,iBAAMb,IAAI,CAACG,iBAAD,EAAoBU,QAApB,EAA8B,MAA9B,EAAsCJ,QAAtC,CAAV;;AANrB;AAMUK,UAAAA,QANV;AAAA;AAOmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAPnB;AAOUC,UAAAA,MAPV;AAQIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AARJ,eASQA,MAAM,CAACC,KATf;AAAA;AAAA;AAAA;;AAAA;AAUM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,iCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAVN;AAAA;AAAA;;AAAA;AAAA;AAeM,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEhB,KAAK,CAACiB,kCAAd;AAAkDH,YAAAA,MAAM,EAANA;AAAlD,WAAD,CAAT;;AAfN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,SAAUX,UAAV,CAAqBS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AACIK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACmB,IAAT,GAAgBxB,MAAM,CAACwB,IAAvB;AAEMC,UAAAA,SANV,GAMsB,8BANtB;AAAA;AAOqB,iBAAM7B,IAAI,CACzBG,iBADyB,EAEzB0B,SAFyB,EAGzB,MAHyB,EAIzBpB,QAAQ,CAACmB,IAJgB,CAAV;;AAPrB;AAOUd,UAAAA,QAPV;AAAA;AAamB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAbnB;AAaUC,UAAAA,MAbV;AAcIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AAdJ,eAeQA,MAAM,CAACC,KAff;AAAA;AAAA;AAAA;;AAAA;AAgBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,mCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAhBN;AAAA;AAAA;;AAAA;AAAA;AAqBM,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEhB,KAAK,CAAC4B,mCAAd;AAAmDd,YAAAA,MAAM,EAANA;AAAnD,WAAD,CAAT;;AArBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BA,SAAUV,YAAV,CAAuBQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AACIK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACmB,IAAT,GAAgBxB,MAAM,CAACwB,IAAvB,CAJJ,CAMI;;AACMG,UAAAA,SAPV,GAOsB,gCAPtB;AAAA;AAQqB,iBAAM/B,IAAI,CACzBG,iBADyB,EAEzB4B,SAFyB,EAGzB,MAHyB,EAIzBtB,QAAQ,CAACmB,IAJgB,CAAV;;AARrB;AAQUd,UAAAA,QARV;AAAA;AAcmB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAdnB;AAcUC,UAAAA,MAdV;AAeIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AAfJ,eAgBQA,MAAM,CAACC,KAhBf;AAAA;AAAA;AAAA;;AAAA;AAiBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,8CADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAjBN;AAAA;AAAA;;AAAA;AAAA;AAsBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAEhB,KAAK,CAAC8B,8CADJ;AAERhB,YAAAA,MAAM,EAANA;AAFQ,WAAD,CAAT;;AAtBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiCA,SAAUT,cAAV,CAAyBO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAhC;AACIK,UAAAA,QAHR,GAGmB,EAHnB;AAIIA,UAAAA,QAAQ,CAACC,SAAT,GAAqBN,MAAM,CAACwB,IAAP,CAAYlB,SAAjC;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAWG,QAAQ,CAACC,SAAhC;AACMuB,UAAAA,YANV,GAMyB,qDANzB;AAAA;AAOqB,iBAAMjC,IAAI,CACzBG,iBADyB,EAEzB8B,YAFyB,EAGzB,KAHyB,EAIzBxB,QAJyB,CAAV;;AAPrB;AAOUK,UAAAA,QAPV;AAAA;AAamB,iBAAMA,QAAQ,CAACC,IAAT,EAAN;;AAbnB;AAaUC,UAAAA,MAbV;AAcIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBU,MAA5B;;AAdJ,eAeQA,MAAM,CAACC,KAff;AAAA;AAAA;AAAA;;AAAA;AAgBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAE,kCADE;AAERD,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFN,WAAD,CAAT;;AAhBN;AAAA;AAAA;;AAAA;AAAA;AAqBM,iBAAMhB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAEhB,KAAK,CAACgC,kCADJ;AAERlB,YAAAA,MAAM,EAANA;AAFQ,WAAD,CAAT;;AArBN;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BI;AACAX,UAAAA,OAAO,CAACC,GAAR;;AA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCA,eAAe,SAAUR,QAAV,CAAmBqC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMpC,SAAS,CAACG,KAAK,CAACkC,UAAP,EAAmB7C,cAAnB,CAAf;;AADa;AAAA;AAEb,iBAAMQ,SAAS,CAACG,KAAK,CAACmC,gBAAP,EAAyB7C,cAAzB,CAAf;;AAFa;AAAA;AAGb,iBAAMO,SAAS,CAACG,KAAK,CAACoC,4BAAP,EAAqC7C,sBAArC,CAAf;;AAHa;AAAA;AAIb,iBAAMM,SAAS,CACbG,KAAK,CAACqC,iCADO,EAEb7C,0BAFa,CAAf;;AAJa;AAAA;AAQb,iBAAMK,SAAS,CAACG,KAAK,CAACsC,WAAP,EAAoB7C,UAApB,CAAf;;AARa;AAAA;AASb,iBAAMI,SAAS,CAACG,KAAK,CAACuC,sBAAP,EAA+B7C,YAA/B,CAAf;;AATa;AAAA;AAUb,iBAAMG,SAAS,CAACG,KAAK,CAACwC,iBAAP,EAA0B7C,cAA1B,CAAf;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport * as Types from \"../actions/types\";\r\nimport { GetDataFromServer } from \"../service\";\r\n\r\nfunction* fetchLoginUser(action) {\r\n  try {\r\n    console.log(\"LogIn Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.firstName = action.firstName; //action.code;\r\n    formBody.password = action.password; //action.provider;\r\n    const reqMethod = \"POST\";\r\n    console.log(formBody);\r\n    const loginUrl = \"http://localhost:8080/get?firstName=formBody.firstName\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"GET\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchTimeSheet(action) {\r\n  console.log(\"TimeSheet Action->\" + JSON.stringify(action));\r\n  try {\r\n    console.log(\"Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.selectWeek = action.selectWeek; //action.provider;\r\n    formBody.jobTitle = action.jobTitle;\r\n    formBody.approver = action.approver;\r\n    formBody.client = action.client;\r\n    formBody.endDate = action.endDate;\r\n    formBody.projectId = action.projectId;\r\n\r\n    const loginUrl = \"http://localhost:8080/create\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchTimeSheetCalander(action) {\r\n  console.log(\"Submit Action->\" + JSON.stringify(action));\r\n  try {\r\n    let formBody = {};\r\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\r\n    const loginUrl = \"http://localhost:8080/submit\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchSaveTimeSheetCalander(action) {\r\n  console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\r\n  try {\r\n    let formBody = {};\r\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\r\n    const loginUrl = \"http://localhost:8080/timesheet/save\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* signUpUser(action) {\r\n  try {\r\n    console.log(\"Submit Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.user = action.user;\r\n\r\n    const signUpUrl = \"http://localhost:8080/create\";\r\n    const response = yield call(\r\n      GetDataFromServer,\r\n      signUpUrl,\r\n      \"POST\",\r\n      formBody.user\r\n    );\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"SIGNUP_USER_SERVER_RESPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.SIGNUP_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* saveEmployee(action) {\r\n  try {\r\n    console.log(\"Submit Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.user = action.user;\r\n\r\n    //const reqMethod = \"POST\";\r\n    const AddEmpUrl = \"http://localhost:8080/employee\";\r\n    const response = yield call(\r\n      GetDataFromServer,\r\n      AddEmpUrl,\r\n      \"POST\",\r\n      formBody.user\r\n    );\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: Types.EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS,\r\n        result\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* searchEmployee(action) {\r\n  try {\r\n    console.log(\"Search Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.firstName = action.user.firstName;\r\n    console.log(\"Name= \" + formBody.firstName);\r\n    const searchEmpUrl = \"http://localhost:8080/search/{{formBody.firstName}}\";\r\n    const response = yield call(\r\n      GetDataFromServer,\r\n      searchEmpUrl,\r\n      \"GET\",\r\n      formBody\r\n    );\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"GET_EMPLOYEE_LIST_ERROR_RESPONSE\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE,\r\n        result\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default function* rootSaga(params) {\r\n  yield takeEvery(Types.LOGIN_USER, fetchLoginUser);\r\n  yield takeEvery(Types.CREATE_TIMESHEET, fetchTimeSheet);\r\n  yield takeEvery(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\r\n  yield takeEvery(\r\n    Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR,\r\n    fetchSaveTimeSheetCalander\r\n  );\r\n  yield takeEvery(Types.SIGNUP_USER, signUpUser);\r\n  yield takeEvery(Types.EMPLOYEE_SAVE_DATABASE, saveEmployee);\r\n  yield takeEvery(Types.GET_EMPLOYEE_LIST, searchEmployee);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}