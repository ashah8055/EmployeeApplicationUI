{"version":3,"sources":["../source/ScrollableList.js"],"names":["PureComponent","Component","ScrollableList","state","verticalPadding","focusItem","index","list","focus","unfocus","onListItemsChanged","onKeyDown","event","getFocusedItemIndex","onFocusItem","showItem","getListNode","storeListRef","ref","edge","children","props","itemElement","itemRefs","isFirstItem","isLastItem","Children","count","showTopLine","showBottomLine","topLine","offsetTop","scrollTop","bottomLine","offsetHeight","value","expandable","collapse","then","setValue","height","scrollHeight","parseInt","window","getComputedStyle","paddingTop","isOverflown","maxHeight","calculateScrollableListHeight","setState","scrollMaxItems","calculateHeight","scrollBarPadding","className","rest","listStyle","undefined","propTypes","number","isRequired","bool","string","defaultProps"],"mappings":"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","file":"ScrollableList.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport List from './List'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ScrollableList extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// // A list of items.\r\n\t\t// items : PropTypes.arrayOf\r\n\t\t// (\r\n\t\t// \tPropTypes.shape\r\n\t\t// \t({\r\n\t\t// \t\t// Item value (may be `undefined`).\r\n\t\t// \t\tvalue : PropTypes.any,\r\n\t\t// \t\t// Item label (may be `undefined`).\r\n\t\t// \t\tlabel : PropTypes.string,\r\n\t\t// \t\t// Item icon component.\r\n\t\t// \t\ticon  : PropTypes.func,\r\n\t\t// \t\t// Render custom content (a React component).\r\n\t\t// \t\t// Receives `{ value, label }` properties.\r\n\t\t// \t\tcontent : PropTypes.func\r\n\t\t// \t})\r\n\t\t// ),\r\n\r\n\t\t// Maximum items fitting the list height (scrollable).\r\n\t\t// Set to `0` to disable overflow.\r\n\t\t// Is `6` by default.\r\n\t\tscrollMaxItems : PropTypes.number.isRequired,\r\n\r\n\t\t// Whether should add `margin-right` for scrollbar width on overflow.\r\n\t\t// Is `true` by default.\r\n\t\tscrollBarPadding : PropTypes.bool,\r\n\r\n\t\tclassName : PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tscrollMaxItems : 6,\r\n\t\tscrollBarPadding : true\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\t// Is initialized during the first `componentDidUpdate()` call.\r\n\t\tverticalPadding : 0\r\n\t}\r\n\r\n\t// Proxy `<List/>` methods.\r\n\tfocusItem = (index) => this.list.focusItem(index)\r\n\tfocus = () => this.list.focus()\r\n\tunfocus = () => this.list.unfocus()\r\n\tonListItemsChanged = () => this.list.onListItemsChanged()\r\n\tonKeyDown = (event) => this.list.onKeyDown(event)\r\n\tgetFocusedItemIndex = () => this.list.getFocusedItemIndex()\r\n\tfocusItem = (index) => this.list.focusItem(index)\r\n\r\n\tonFocusItem = (index) => this.showItem(index)\r\n\r\n\tgetListNode = () => this.list.list\r\n\r\n\t// Fully shows an option having the `value` (scrolls to it if neccessary)\r\n\tshowItem(index, edge = 'top')\r\n\t{\r\n\t\tconst { children } = this.props\r\n\r\n\t\tconst itemElement = this.list.itemRefs[index]\r\n\r\n\t\tconst isFirstItem = index === 0\r\n\t\tconst isLastItem  = index === React.Children.count(children) - 1\r\n\r\n\t\tif (isFirstItem) {\r\n\t\t\treturn this.showTopLine(itemElement, true)\r\n\t\t} else if (isLastItem) {\r\n\t\t\treturn this.showBottomLine(itemElement, true)\r\n\t\t}\r\n\r\n\t\tswitch (edge)\r\n\t\t{\r\n\t\t\tcase 'top':\r\n\t\t\t\treturn this.showTopLine(itemElement)\r\n\t\t\tcase 'bottom':\r\n\t\t\t\treturn this.showBottomLine(itemElement)\r\n\t\t}\r\n\t}\r\n\r\n\tshowTopLine(itemElement, isFirstItem)\r\n\t{\r\n\t\tconst { verticalPadding } = this.state\r\n\r\n\t\tlet topLine = itemElement.offsetTop\r\n\r\n\t\tif (isFirstItem) {\r\n\t\t\ttopLine -= verticalPadding\r\n\t\t}\r\n\r\n\t\tif (topLine < this.getListNode().scrollTop) {\r\n\t\t\tthis.getListNode().scrollTop = topLine\r\n\t\t}\r\n\t}\r\n\r\n\tshowBottomLine(itemElement, isLastItem)\r\n\t{\r\n\t\tconst { verticalPadding } = this.state\r\n\r\n\t\tlet bottomLine = itemElement.offsetTop + itemElement.offsetHeight\r\n\r\n\t\tif (isLastItem) {\r\n\t\t\tbottomLine += verticalPadding\r\n\t\t}\r\n\r\n\t\tif (bottomLine > this.getListNode().scrollTop + this.getListNode().offsetHeight) {\r\n\t\t\tthis.getListNode().scrollTop = bottomLine - this.getListNode().offsetHeight\r\n\t\t}\r\n\t}\r\n\r\n\tstoreListRef = (ref) => this.list = ref\r\n\r\n\titemOnClick(value, event)\r\n\t{\r\n\t\t// Collapse the `<Select/>`.\r\n\t\t// Doing `setValue` in a callback\r\n\t\t// because otherwise `setValue()` would result in\r\n\t\t// updating props and calling `getDerivedStateFromProps()`\r\n\t\t// which reads `autocomplete_value` which is being reset inside `.toggle()`.\r\n\t\tthis.expandable.collapse().then(() => this.setValue(value))\r\n\t}\r\n\r\n\t// Calculates height of the item list.\r\n\tcalculateHeight()\r\n\t{\r\n\t\tconst { children } = this.props\r\n\r\n\t\tconst height = this.getListNode().scrollHeight\r\n\t\tconst verticalPadding = parseInt(window.getComputedStyle(this.getListNode()).paddingTop)\r\n\r\n\t\tconst state = { height, verticalPadding }\r\n\r\n\t\t// Calculate the appropriate list height.\r\n\t\tif (this.isOverflown()) {\r\n\t\t\tstate.maxHeight = this.calculateScrollableListHeight(height, verticalPadding)\r\n\t\t}\r\n\r\n\t\tthis.setState(state)\r\n\t}\r\n\r\n\tcalculateScrollableListHeight(height, verticalPadding)\r\n\t{\r\n\t\tconst { scrollMaxItems, children } = this.props\r\n\r\n\t\t// Adding vertical padding here so that it shows `scrollMaxItems` items fully.\r\n\t\t// Also gives a peek on the `scrollMaxItems + 1`th item by showing a half of it.\r\n\t\treturn (height - 2 * verticalPadding) * ((scrollMaxItems + 0.5) / React.Children.count(children)) + verticalPadding\r\n\t}\r\n\r\n\tisOverflown()\r\n\t{\r\n\t\tconst { scrollMaxItems, children } = this.props\r\n\t\treturn scrollMaxItems > 0 && React.Children.count(children) > scrollMaxItems\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tthis.calculateHeight()\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tscrollBarPadding,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst { maxHeight } = this.state\r\n\r\n\t\tlet listStyle\r\n\r\n\t\t// Makes the list scrollable if it's max height is constrained.\r\n\t\tif (maxHeight !== undefined)\r\n\t\t{\r\n\t\t\tlistStyle = { maxHeight: `${maxHeight}px` }\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<List\r\n\t\t\t\tref={ this.storeListRef }\r\n\t\t\t\tonFocusItem={ this.onFocusItem }\r\n\t\t\t\tstyle={ listStyle }\r\n\t\t\t\tclassName={ classNames(className,\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__scrollable' : this.isOverflown()\r\n\t\t\t\t}) }\r\n\t\t\t\t{...rest}>\r\n\t\t\t\t{ children }\r\n\t\t\t</List>\r\n\t\t)\r\n\t}\r\n}"]}