{"version":3,"sources":["logo.svg","../node_modules/typescript/lib sync","redux/actions/types.js","redux/actions/auth.js","components/Login/index.js","components/Home/index.js","components/TimeSheet_Calander/index.js","redux/actions/CreateNewRequest.js","components/TimeSheet/index.js","components/CreateNewRequest/index.js","components/Employee/List.js","redux/actions/Employee_list.js","redux/actions/ProjectDetails.js","components/ProjectDetails/list.js","components/messages/InlineError.js","redux/actions/Get_List.js","components/Search/index.js","components/ProjectDetails/index.js","redux/actions/home.js","components/Sign Up/index.js","components/AddEmployee/index.js","components/MTSA/index.js","routes/index.js","App.js","serviceWorker.js","redux/service/index.js","redux/store/sagas.js","redux/reducers/CreateNewRequest.js","redux/reducers/auth.js","redux/reducers/Employee_list.js","redux/reducers/Get_List.js","redux/reducers/ProjectDetails.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","LOGIN_USER","LOGIN_USER_SERVER_RESPONSE_SUCCESS","CREATE_TIMESHEET","CREATE_TIMESHEET_WORKINGHOUR","CREATE_TIMESHEET_SAVE_WORKINGHOUR","LIST_EMPLOYEE_DETAILS","LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS","LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR","CREATE_PROJECT","CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS","CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR","DELETE_PROJECT","DELETE_PROJECT_SUCESS","LIST_PROJECT_DETAILS","LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS","LIST_PROJECT_DETAILS_SERVER_RESPONSE_ERROR","SIGNUP_USER","SIGNUP_USER_SERVER_RESPONSE_SUCCESS","EMPLOYEE_SAVE_DATABASE","EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS","GET_EMPLOYEE_LIST","GET_EMPLOYEE_LIST_SUCCESS_RESPONSE","GET_EMPLOYEE_LIST_ERROR_RESPONSE","SEARCH_EMP","SEARCH_EMP_SUCCESS","SEARCH_EMP_ERROR","PROJECT_LIST","loginUser","username","password","type","Types","FormItem","Form","Item","Login","Select","Option","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","preventDefault","dispatch","state","data","email","form","validateFields","err","values","console","log","history","push","alert","message","isBusiness","role","loading","errors","getFieldDecorator","react_default","a","createElement","es_form","onSubmit","className","src","width","height","Login_FormItem","rules","required","input","prefix","icon","style","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Link","to","result","Component","WrappedNormalLoginForm","create","connect","auth","Header","Layout","Content","Sider","Footer","Home","handleClick","setState","current","key","layout","Home_Header","row","col","xs","sm","md","lg","xl","menu","onClick","selectedKeys","mode","pathname","size","Home_Content","margin","padding","background","minHeight","span","Home_Footer","JSON","stringify","TimeSheet_Calander","calendar","onPanelChange","value","createRequestSubmit","timesheet","createWorkingHourTimeSheet","submitTimeSheet","createSaveTimeSheet","handlenum1Change","evt","Workingdetails","assign","timeSheetId","Math","floor","random","day","daySheet","monday","tuesday","wednesday","thursday","friday","saturday","sunday","target","name","workHours","Number","totalWeekWorkHours","totalWeekBillableHours","totalWeekHours","totalWeekTimeoffHours","billableHours","totalHour","timeOffHour","handlenum2Change","validateFieldsAndScroll","das","workingdetails","onSave","status","onReset","baseState","employeeId","TimeSheetDetails","comments","date","notes","_this2","TextArea","Input","formItemLayout","labelCol","wrapperCol","dt","moment","selectWeek","day2","startOf","format","add","day3","day4","day5","day6","day7","items","map","n","totalHr","billableHr","react","readOnly","getValueFromEvent","convertedValue","currentTarget","isNaN","getFieldValue","min","max","pattern","onChange","colSpan","rows","WrappedRegistrationForm","Collapse","Panel","CreateNewRequest","onDropdownChange","i","jobTitle","viewTimesheet","onSelectWeekChange","valueOf","error","endClient","client","approver","endDate","projectId","WeekPicker","DatePicker","CreateNewRequest_Header","CreateNewRequest_Content","card","CreateNewRequest_FormItem","label","hasFeedback","es_select","CreateNewRequest_Option","defaultValue","s","TimeSheet","EmployeeList","Array","from","empList","es_list","header","bordered","dataSource","renderItem","item","createProjcetDetailsSubmit","projectDetails","listProjectDetails","listProject","Search","list","prevProps","projList","proj","_id","list_Search","onSearch","pagination","clientProjectName","handleDelete","handleEdit","projcetDetails","InlineError","_ref","text","getEmp","searchEmp","getPro","getEmpInfo","objectSpread","defineProperty","handleOk","visible","selEmployees","searchList","filter","check","handleCancel","validate","firstName","onShow","_this$state$data","lastName","primaryEmail","onFilter","length","_this$state$data2","concat","checked","data1","modal","title","onOk","onCancel","messages_InlineError","Search_Content","onCheck","RangePicker","onChangeId","onChangeRangePicker","onChangeActiveRangePicker","onChangeFreezeDatePicker","onChanegeActivetimeSheet","createdById","clientProjectId","vendorId","vendorName","clientId","clientName","startDate","activeTimesheetStartDate","activeTimesheetEndDate","activeTimesheetFreezeDate","isActiveTimesheet","listOfEmployees","ProjectDetails_Header","ProjectDetails_Content","gutter","justify","onChangeRanePickerSubmit","onChangeActiveRanePickerSubmit","date_picker","components_Search","es_switch","defaultChecked","ProjectDetails_list","signupUser","user","addEmployee","Signup","phoneNumber","confirmPassword","Validator","isEmail","_this$state","userObject","AddEmployee","secondaryEmail","address","jobCode","vendor","projectName","managerName","approverName","SecondaryEmail","AddEmployee_Header","size1","size2","MTSA","onList","_this$state$data2$lis2","slicedToArray","employeeName","onDetails","_this$state$data3","MTSA_Header","MTSA_Content","badge","count","dist_default","item2","MTSA_Footer","routes","BrowserRouter","Switch","Route","exact","path","render","components_Login","Sign_Up","components_Home","components_CreateNewRequest","TimeSheet_Calander_TimeSheet_Calander","ProjectDetails","List","components_AddEmployee","components_MTSA","Redirect","App","Boolean","window","location","hostname","match","GetDataFromServer","apiPath","reqMethod","formBody","myHeaders","Headers","append","fetch","method","headers","fetchData","body","deleteTodoAPI","then","res","json","fetchLoginUser","fetchTimeSheet","fetchTimeSheetCalander","fetchSaveTimeSheetCalander","fetchListOfEmployee","fetchCreateProjectDetails","signUpUser","saveEmployee","getEmployee","searchEmployee","saveProjectDetails","fetchListOfProjectDetails","deleteProjectDetails","listProjects","rootSaga","baseUrl","baseUrl2","aws","action","loginUrl","response","regenerator_default","wrap","_context","prev","next","firstname","lastname","age","sent","put","t0","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","signUpUrl","_context7","_marked7","AddEmpUrl","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","newData","_context13","_marked13","_context14","_marked14","params","_context15","takeLatest","takeEvery","_marked15","initialUserObj","signUpUsersList","pending","loggedIn","isValidToken","empDetails","displayName","registered","refreshToken","expiresIn","emailVerified","validSince","disabled","lastLoginAt","createdAt","listOfProject","combineReducers","arguments","undefined","newState","handleLoginServerResponseError","handleLoginServerResponseSuccess","Type","parse","handleEmployeeList","handleEmployeeListError","handleCreateProject","eachProj","handleProjectList","getEmployeeList","getEmployeeListError","getProjectList","getProjectListError","handleSearchEmp","searchError","projctName","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","reducers","applyMiddleware","apply","run","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.588098b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 512;","export const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SERVER_RESPONSE_ERROR = 'LOGIN_USER_SERVER_RESPONSE_ERROR';\nexport const LOGIN_USER_SERVER_RESPONSE_SUCCESS = 'LOGIN_USER_SERVER_RESPONSE_SUCCESS';\n\n\nexport const CREATE_TIMESHEET = \"CREATE_TIMESHEET\";\nexport const CREATE_TIMESHEET_WORKINGHOUR = \"CREATE_TIMESHEET_WORKINGHOUR\";\nexport const CREATE_TIMESHEET_SAVE_WORKINGHOUR = \"CREATE_TIMESHEET_SAVE_WORKINGHOUR\";\n\n\n\nexport const LIST_EMPLOYEE_DETAILS = \"LIST_EMPLOYEE_DETAILS\";\nexport const LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS = \"LIST_EMPLOYEE_DETAILS_RESPONSE_SUCESS\";\nexport const LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR = \"LIST_EMPLOYEE_DETAILS_RESPONSE_ERROR\";\n\nexport const CREATE_PROJECT = \"CREATE_PROJECT\";\nexport const CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS = \"CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS\";\nexport const CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR = \"CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR\";\n\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\nexport const DELETE_PROJECT_SUCESS = \"DELETE_PROJECT_SUCESS\";\n\nexport const EDIT_PROJECT_GET_DETAILS = \"EDIT_PROJECT_GET_DETAILS\";\nexport const EDIT_PROJECT_GET_DETAILS_SUCESS = \"EDIT_PROJECT_GET_DETAILS_SUCESS\";\nexport const EDIT_PROJECT_GET_DETAILS_ERROR = \"EDIT_PROJECT_GET_DETAILS_ERROR\";\n\n\n\nexport const LIST_PROJECT_DETAILS = \"LIST_PROJECT_DETAILS\"\nexport const LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS = \"LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS\";\nexport const LIST_PROJECT_DETAILS_SERVER_RESPONSE_ERROR = \"LIST_PROJECT_DETAILS_SERVER_RESPONSE_ERROR\";\n\nexport const SIGNUP_USER = \"SIGNUP_USER\";\nexport const SIGNUP_USER_SERVER_RESPONSE_ERROR = \"SIGNUP_USER_SERVER_RESPONSE_ERROR\";\nexport const SIGNUP_USER_SERVER_RESPONSE_SUCCESS = \"SIGNUP_USER_SERVER_RESPONSE_SUCCESS\";\n\nexport const GET_USERS_LIST = \"GET_USERS_LIST\";\nexport const GET_USERS_LIST_SUCCESS_RESPONSE = \"GET_USERS_LIST_SUCCESS_RESPONSE\";\nexport const GET_USERS_LIST_ERROR_RESPONSE = \"GET_USERS_LIST_ERROR_RESPONSE\";\n\nexport const GET_USERS_LIST_SERVER_RESPONSE_SUCCESS = \"GET_USERS_LIST_SERVER_RESPONSE_SUCCESS\";\nexport const SIGNUP_SAVE_DATABASE = \"SIGNUP_SAVE_DATABASE\";\nexport const SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS = \"SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS\";\nexport const SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_ERROR = \"SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_ERROR\";\n\nexport const EMPLOYEE_SAVE_DATABASE = \"EMPLOYEE_SAVE_DATABASE\";\nexport const EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS = \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS\";\nexport const EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR = \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\";\n\nexport const GET_EMPLOYEE_LIST = \"GET_EMPLOYEE_LIST\";\nexport const GET_EMPLOYEE_SELECTED_LIST = \"GET_EMPLOYEE_SELECTED_LIST\";\nexport const GET_EMPLOYEE_LIST_SUCCESS_RESPONSE = \"GET_EMPLOYEE_LIST_SUCCESS_RESPONSE\";\nexport const GET_EMPLOYEE_LIST_ERROR_RESPONSE = \"GET_EMPLOYEE_LIST_ERROR_RESPONSE\";\n\nexport const SEARCH_EMP = \"SEARCH_EMP\";\nexport const SEARCH_EMP_SUCCESS = \"SEARCH_EMP_SUCCESS\";\nexport const SEARCH_EMP_ERROR = \"SEARCH_EMP_ERROR\";\n\nexport const PROJECT_LIST = \"PROJECT_LIST\";\nexport const PROJECT_LIST_SUCCESS_RESPONSE = \"PROJECT_LIST_SUCCESS_RESPONSE\";\nexport const PROJECT_LIST_ERROR_RESPONSE = \"PROJECT_LIST_ERROR_RESPONSE\";\n\n\n","import * as Types from './types';\n\n\nexport const loginUser = (username, password) => {\n\n  return {\n    type: Types.LOGIN_USER,\n    username,\n    password\n\n  }\n\n}\n\n\n\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, Button, Select, Checkbox, Icon } from \"antd\";\nimport { loginUser } from \"../../redux/actions/auth\";\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            data: {\n                email: \"\",\n                password: \"\",\n                isBusiness: true,\n                role: \"3\"\n            },\n            loading: false,\n            errors: {}\n        };\n    }\n\n    componentDidMount() { }\n\n    static getDerivedStateFromProps(props, state) {\n        console.log(props.result);\n\n        return null;\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.dispatch(\n            loginUser(this.state.data.email, this.state.data.password)\n        );\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(\"Received values of form: \", values);\n            }\n\n            try {\n                this.props.history.push(\"/home\");\n            } catch (e) {\n                alert(e.message);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <centre>\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <div>\n                        <img\n                            src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\n                            width=\"200px\"\n                            height=\"60px\"\n                        />\n                        <br />\n                    </div>\n                    <FormItem>\n                        {getFieldDecorator(\"userName\", {\n                            rules: [\n                                { required: true, message: \"Please input your username!\" }\n                            ]\n                        })(\n                            <Input\n                                prefix={\n                                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                                }\n                                placeholder=\"Username\"\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        {getFieldDecorator(\"password\", {\n                            rules: [\n                                { required: true, message: \"Please input your Password!\" }\n                            ]\n                        })(\n                            <Input\n                                prefix={\n                                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                                }\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        )}\n                    </FormItem>\n\n                    <FormItem>\n                        {getFieldDecorator(\"remember\", {\n                            valuePropName: \"checked\",\n                            initialValue: true\n                        })(<Checkbox>Remember me</Checkbox>)}\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n            </a>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"login-form-button\"\n                        >\n                            Log in\n            </Button>\n                        Or <Link to=\"/signup\">Sign Up</Link>\n                    </FormItem>\n                </Form>\n            </centre>\n        );\n    }\n}\n\nLogin.propTypes = {};\n\nconst mapStateToProps = state => {\n    return {\n        result: state.auth.result\n    };\n};\nconst WrappedNormalLoginForm = Form.create()(Login);\n\n//ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\n\nexport default connect(mapStateToProps)(WrappedNormalLoginForm);\n\n//export default WrappedNormalLoginForm;","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport { Menu, Icon, Card, List, Button, Tabs, Row, Col, Badge } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { listEmployee } from \"../../redux/actions/Employee_list\";\n\n\n\nconst { Header, Sider, Content, Footer } = Layout;\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            current: 'home'\n        }\n\n    }\n\n\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n    render() {\n\n        return (\n            <div>\n\n                <Layout>\n                    <Header>\n\n                        {/* <img src={require('../../images/reliable.png')} width=\"200px\" height=\"60px\"></img> */}\n\n                        <Row>\n\n\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n                                    <Menu.Item >\n                                        <Link to={{ pathname: \"/home\" }}> <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img></Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"home\">\n                                        <Link to={{ pathname: \"/home\" }}><Icon type=\"home\" />Home</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}><Icon type=\"clock-circle\" />TimeSheet</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"project\">\n                                        <Link to={{ pathname: \"/Project\" }}><Icon type=\"project\" />Project</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"Manager Approval\">\n                                        <Link to={{ pathname: \"/mTSA\" }}>\n                                            <Icon type=\"clock-circle\" />\n                                            Manager TimeSheet Approval\n                    </Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                {/* <p>{this.props.auth}</p> */}\n\n                                <Link to={{ pathname: \"/login\" }}> <Button size='large'><Icon type=\"logout\" />Logout</Button></Link>\n                            </Col>\n\n                        </Row>\n\n                    </Header>\n                    <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 580 }}>\n\n                        <Row>\n                            <Col span={8}> <Link to={{ pathname: \"/TimeSheetCalander\" }}>Monthly Timesheet </Link> </Col>\n                            <Col span={8}> <Link to={{ pathname: \"/Employee\" }}>Employee</Link> </Col>\n                            <Col span={8}> <Link to={{ pathname: \"/addEmployee\" }}>Add Employee</Link> </Col>\n\n                        </Row>\n\n                    </Content>\n                    <Footer><center><Icon type=\"copyright\" />Reliable Software 2018</center></Footer>\n                </Layout >\n\n            </div >\n\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"ggg\" + JSON.stringify(state.auth));\n    return {\n\n        auth: state.auth\n\n    };\n}\n// export default Home;\n\n\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react';\nimport { Calendar, Badge } from 'antd';\n\n\n\n\nexport default class TimeSheet_Calander extends Component {\n    render() {\n\n        function onPanelChange(value, mode) {\n            console.log(value, mode);\n        }\n\n        return (\n            <div>\n                <Calendar onPanelChange={onPanelChange} />\n            </div>\n        )\n    }\n}\n","import * as Types from './types';\n\nexport const createRequestSubmit = (timesheet) => {\n    return {\n        type: Types.CREATE_TIMESHEET,\n        timesheet\n    };\n};\n\nexport const createWorkingHourTimeSheet = (submitTimeSheet) => {\n\n    return {\n        type: Types.CREATE_TIMESHEET_WORKINGHOUR,\n        submitTimeSheet\n\n    };\n};\n\nexport const createSaveTimeSheet = (submitTimeSheet) => {\n\n    return {\n        type: Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR,\n        submitTimeSheet\n\n    };\n};\n\n","import * as React from \"react\";\nimport { Component } from 'react';\nimport { Collapse, Form, Button, Tabs, Layout, Input, TextArea, InputNumber, message } from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createWorkingHourTimeSheet } from \"../../redux/actions/CreateNewRequest\";\nimport { createSaveTimeSheet } from \"../../redux/actions/CreateNewRequest\";\n\nclass timesheet extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            Workingdetails: {\n                employeeId: this.props.timesheet.timesheet.TimeSheetDetails.employeeId,\n                timeSheetId: '',\n                totalWeekWorkHours: '0',\n                totalWeekBillableHours: '0',\n                totalWeekTimeoffHours: '0',\n                totalWeekHours: '0',\n                comments: '',\n                status: 'false',\n                \"daySheet\": [{\n                    \"day\": \"monday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"tuesday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"0\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"wednesday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"thursday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"friday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"saturday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                },\n                {\n                    \"day\": \"sunday\",\n                    \"workHours\": \"0\",\n                    \"timeOffHour\": \"0\",\n                    \"date\": \"Test\",\n                    \"billableHours\": \"0\",\n                    \"totalHour\": \"0\",\n                    \"notes\": \"Test\"\n                }]\n            }\n        };\n        this.baseState = this.state;\n    }\n\n    // componentDidMount() {\n    //     this.props.form.setFields({\n    //         testNumber: { value: 8 }\n    //     });\n    // }\n    handlenum1Change = (evt) => {\n\n\n\n        const dayArray = { \"monday\": 0, \"tuesday\": 1, \"wednesday\": 2, \"thursday\": 3, \"friday\": 4, \"saturday\": 5, \"sunday\": 6 };\n        let Workingdetails = Object.assign({}, this.state.Workingdetails);\n        Workingdetails.timeSheetId = Math.floor((Math.random() * 100) + 2);\n        //      let workinghours = Object.assign({}, this.state.workinghours);\n        //let day = workinghours[evt.target.name]\n        let day = Workingdetails.daySheet[dayArray[evt.target.name]];\n        //console.log(\"HA\" + JSON.stringify(day));\n\n        day.workHours = Number(evt.target.value);\n        Workingdetails.totalWeekWorkHours = Number(Workingdetails.totalWeekWorkHours) + Number(evt.target.value);\n        Workingdetails.totalWeekBillableHours = Workingdetails.totalWeekWorkHours;\n        Workingdetails.totalWeekHours = Number(Workingdetails.totalWeekWorkHours) + Number(Workingdetails.totalWeekTimeoffHours);\n        day.billableHours = Number(evt.target.value);\n        day.totalHour = Number(day.timeOffHour) + Number(evt.target.value);;\n\n        return this.setState({ Workingdetails });\n\n    }\n\n    handlenum2Change = (evt) => {\n        const dayArray = { \"monday\": 0, \"tuesday\": 1, \"wednesday\": 2, \"thursday\": 3, \"friday\": 4, \"saturday\": 5, \"sunday\": 6 };\n\n        let Workingdetails = Object.assign({}, this.state.Workingdetails);\n        //let workinghours = Object.assign({}, this.state.workinghours);\n        // let day = workinghours[evt.target.name];\n        let day = Workingdetails.daySheet[dayArray[evt.target.name]];\n        day.timeOffHour = Number(evt.target.value);\n        Workingdetails.totalWeekTimeoffHours = Number(Workingdetails.totalWeekTimeoffHours) + Number(evt.target.value);\n        day.totalHour = Number(day.workHours) + Number(evt.target.value);;\n        return this.setState({ Workingdetails });\n\n\n    }\n\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                console.log(\"dad\" + this.state.das);\n                let data = {};\n                //data.workinghours = this.state.workinghours;\n                data.workingdetails = this.state.Workingdetails;\n\n                this.props.dispatch(createWorkingHourTimeSheet(data));\n                console.log(\"Submit click\");\n            }\n\n        });\n\n    };\n    onSave = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                console.log(\"dad\" + this.state.das);\n                let data = {};\n                // data.workinghours = this.state.workinghours;\n                data.workingdetails = this.state.Workingdetails;\n\n                data.workingdetails.status = this.state.Workingdetails.status = \"true\";\n                this.props.dispatch(createSaveTimeSheet(data));\n                console.log(\"Save click\");\n            }\n\n        });\n\n\n    };\n    onReset = () => {\n        this.setState(this.baseState);\n    }\n\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     this.props.form.validateFieldsAndScroll((err, values) => {\n    //         if (!err) {\n    //             console.log('Received values of form: ', values);\n    //         }\n    //     });\n    // }\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        //const { Workingdetails, errors } = this.state;\n        const { TextArea } = Input;\n        const FormItem = Form.Item;\n        let employeeId = this.props.timesheet.timesheet.TimeSheetDetails.employeeId;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n\n\n        console.log(\"\" + JSON.stringify(this.props.auth));\n        console.log(\"Employee\" + employeeId);\n        let dt = moment(this.props.timesheet.timesheet.TimeSheetDetails.selectWeek);\n        let selectedDate = dt.startOf('week').format(\"MM/DD/YYYY\");\n        let day1 = dt.format(\"DD\");\n        let day2 = dt.add(1, 'days').format(\"DD-MMM\");\n        let day3 = dt.add(1, 'days').format(\"DD-MMM\");\n        let day4 = dt.add(1, 'days').format(\"DD-MMM\");\n        let day5 = dt.add(1, 'days').format(\"DD-MMM\");\n        let day6 = dt.add(1, 'days').format(\"DD-MMM\");\n        let day7 = dt.add(1, 'days').format(\"DD-MMM\");\n        const days = [\"mon\", \"tue\", \"wed\", \"thur\", \"fri\", \"sat\", \"sun\"];\n        const items = days.map(n => {\n            const obj = { totalHr: '0', billableHr: '0' };\n            return obj;\n        });\n\n\n        console.log(items)\n\n\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <table className=\"table table-hover\">\n                    <thead>\n\n                        <tr>\n                            <th>Week</th>\n                            <th>Mon <FormItem><input type='label' value={dt.startOf('week').format(\"DD-MMM\")} readOnly /> </FormItem></th>\n                            <th>Tue <FormItem><input type='label' value={day2} /></FormItem></th>\n                            <th>Wed <FormItem><input type='label' value={day3} /></FormItem></th>\n                            <th>Thur <FormItem><input type='label' value={day4} /></FormItem></th>\n                            <th>Fri <FormItem><input type='label' value={day5} /></FormItem></th>\n                            <th>Sat <FormItem><input type='label' value={day6} /></FormItem></th>\n                            <th>Sun <FormItem><input type='label' value={day7} /></FormItem></th>\n                            <th>TotalHr</th>\n                        </tr>\n\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Hour Claim</td>\n                            <td>\n\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('monday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"monday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"monday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('tuesday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"tuesday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"tuesday\" id=\"hTue\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('wednesday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"wednesday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"wednesday\" id=\"hWed\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('thursday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"thursday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"thursday\" id=\"hThur\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('friday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"friday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"friday\" id=\"hFri\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('saturday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"saturday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"saturday\" id=\"hSat\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('sunday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"sunday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Hr\" name=\"sunday\" id=\"hSun\" style={{ width: '100%' }} onChange={this.handlenum1Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem>\n                                    <input type='label' size=\"large\" value={this.state.Workingdetails.totalWeekWorkHours} />\n                                </FormItem>\n                            </td>\n\n                        </tr>\n                        <tr>\n                            <td>Time Off</td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('timeOffMonday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"timeOffMonday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your TimeOff Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"monday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                    )}\n                                </FormItem>\n\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('timeOfftuesday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"timeOfftuesday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your TimeOff Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"tuesday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('timeOffwednesday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"timeOffwednesday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your TimeOff Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"wednesday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                    )}\n                                </FormItem>\n\n\n                            </td>\n                            <td><FormItem\n                                {...formItemLayout}\n                            >\n                                {getFieldDecorator('timeOffthursday', {\n                                    getValueFromEvent: (e) => {\n                                        const convertedValue = Number(e.currentTarget.value);\n                                        if (isNaN(convertedValue)) {\n                                            return Number(this.props.form.getFieldValue(\"timeOffthursday\"));\n                                        } else {\n                                            return convertedValue;\n                                        }\n                                    },\n\n                                    rules: [\n                                        {\n                                            required: true, message: 'Please input your TimeOff Hours!',\n                                        },\n                                        {\n                                            type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                        }\n                                    ]\n                                })(\n                                    <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"thursday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                )}\n                            </FormItem>\n\n\n                            </td>\n                            <td><FormItem\n                                {...formItemLayout}\n                            >\n                                {getFieldDecorator('timeOfffriday', {\n                                    getValueFromEvent: (e) => {\n                                        const convertedValue = Number(e.currentTarget.value);\n                                        if (isNaN(convertedValue)) {\n                                            return Number(this.props.form.getFieldValue(\"timeOfffriday\"));\n                                        } else {\n                                            return convertedValue;\n                                        }\n                                    },\n\n                                    rules: [\n                                        {\n                                            required: true, message: 'Please input your TimeOff Hours!',\n                                        },\n                                        {\n                                            type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                        }\n                                    ]\n                                })(\n                                    <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"friday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                )}\n                            </FormItem>\n\n                            </td>\n                            <td><FormItem\n                                {...formItemLayout}\n                            >\n                                {getFieldDecorator('timeOffsaturday', {\n                                    getValueFromEvent: (e) => {\n                                        const convertedValue = Number(e.currentTarget.value);\n                                        if (isNaN(convertedValue)) {\n                                            return Number(this.props.form.getFieldValue(\"timeOffsaturday\"));\n                                        } else {\n                                            return convertedValue;\n                                        }\n                                    },\n\n                                    rules: [\n                                        {\n                                            required: true, message: 'Please input your TimeOff Hours!',\n                                        },\n                                        {\n                                            type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                        }\n                                    ]\n                                })(\n                                    <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"saturday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                )}\n                            </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem\n                                    {...formItemLayout}\n                                >\n                                    {getFieldDecorator('timeOffsunday', {\n                                        getValueFromEvent: (e) => {\n                                            const convertedValue = Number(e.currentTarget.value);\n                                            if (isNaN(convertedValue)) {\n                                                return Number(this.props.form.getFieldValue(\"timeOffsunday\"));\n                                            } else {\n                                                return convertedValue;\n                                            }\n                                        },\n\n                                        rules: [\n                                            {\n                                                required: true, message: 'Please input your TimeOff Hours!',\n                                            },\n                                            {\n                                                type: \"number\", min: 0, max: 24, message: \" Input Hours < 24\"\n                                            }\n                                        ]\n                                    })(\n                                        <Input size=\"large\" type=\"number\" pattern=\"[0-9]*\" placeholder=\"Enter Time Off\" name=\"sunday\" id=\"hMon\" style={{ width: '100%' }} onChange={this.handlenum2Change} />\n\n                                    )}\n                                </FormItem>\n\n                            </td>\n                            <td>\n                                <FormItem>\n                                    <input type='text' value={this.state.Workingdetails.totalWeekTimeoffHours} readOnly />\n                                </FormItem>\n                            </td>\n\n\n                        </tr>\n                        <tr>\n                            <td>Total Bill</td>\n                            <td>\n\n                                <FormItem><input type='text' value={this.state.Workingdetails.daySheet[0].billableHours} /></FormItem>\n                            </td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[1].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[2].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[3].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[4].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[5].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[6].billableHours} /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.totalWeekWorkHours} /></FormItem></td>\n\n\n                        </tr>\n                        <tr>\n                            <td>Total Hours</td>\n                            <td> <FormItem> <input type='text' value={this.state.Workingdetails.daySheet[0].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[1].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[2].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[3].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[4].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[5].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.daySheet[6].totalHour} readOnly /></FormItem></td>\n                            <td> <FormItem><input type='text' value={this.state.Workingdetails.totalWeekHours} readOnly /></FormItem></td>\n\n                        </tr>\n                        <tr>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Notes</td>\n                            <td width=\"400\" colSpan=\"8\">\n                                <FormItem>\n\n                                    <TextArea rows={4} />\n                                </FormItem>\n                            </td>\n                        </tr>\n                        <tr >\n                            <td colSpan=\"3\"></td>\n                            <td ><FormItem><Button type=\"primary\" onClick={this.onSave} >Save</Button></FormItem></td>\n                            <td ><FormItem ><Button type=\"primary\" htmlType=\"submit\" >Submit</Button></FormItem></td>\n                            <td ><FormItem><Button type=\"primary\" onClick={this.onReset}>Reset</Button></FormItem></td>\n\n                        </tr>\n\n                    </tbody>\n\n                </table>\n            </Form>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"ggg\" + state);\n    return {\n\n        timesheet: state.timesheet\n\n    };\n}\nconst WrappedRegistrationForm = Form.create()(timesheet);\n\n\nexport default connect(mapStateToProps)(WrappedRegistrationForm);\n\n//export default timesheet;","import React, { Component } from 'react';\nimport { Menu, Collapse, Form, Button, Tabs, Layout, Input, Row, Col, DatePicker, Radio, Card, Select, Upload, message, Icon } from 'antd';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\n\nimport { createRequestSubmit } from \"../../redux/actions/CreateNewRequest\";\n//import { createWorkingHourTimeSheet } from \"../../redux/actions/CreateNewRequest\";\nimport { connect } from \"react-redux\";\nimport TimeSheet from \"../TimeSheet/index\";\nconst { TextArea } = Input;\nconst Option = Select.Option;\nconst { Header, Sider, Content } = Layout;\nconst Panel = Collapse.Panel;\nconst FormItem = Form.Item;\n\n\n\n// function onChange(date, dateString) {\n//     console.log(date, dateString);\n// }\nclass CreateNewRequest extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewTimesheet: false,\n            error: \"\",\n            current: 'timesheet',\n            TimeSheetDetails: {\n\n                //  reqId: moment().valueOf(),\n                selectWeek: '',\n                jobTitle: 'Full Stack',\n                endClient: 'N/A',\n                client: 'Inhouse',\n                approver: 'Amar Shah',\n                endDate: '12/31/2018',\n                projectId: 'Test',\n                employeeId: '',\n            }\n        }\n\n    }\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    }\n    onDropdownChange = (e, i) => {\n        console.log(\"DDL\" + e);\n        let TimeSheetDetails = Object.assign({}, this.state.TimeSheetDetails);\n        TimeSheetDetails.jobTitle = e;\n        return this.setState({ TimeSheetDetails });\n    }\n\n    onSubmit = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                this.setState({ viewTimesheet: !this.state.viewTimesheet });\n                let data = {};\n                data.TimeSheetDetails = this.state.TimeSheetDetails;\n                data.TimeSheetDetails.employeeId = Math.floor((Math.random() * 100) + 1);\n                console.log(\"Details for time sheet details\", data.TimeSheetDetails);\n                //  data.reqId = this.state.TimeSheetDetails.reqId;\n                this.props.dispatch(createRequestSubmit(data));\n                //this.props.dispatch(createWorkingHourTimeSheet(data));\n                console.log(\"Submit click\");\n            }\n\n        });\n\n\n\n    };\n\n    onSelectWeekChange = (e, date) => {\n\n        console.log(\"select week change\", e);\n        console.log(\"date\" + date);\n        let TimeSheetDetails = Object.assign({}, this.state.TimeSheetDetails);\n        TimeSheetDetails[\"selectWeek\"] = moment(e).valueOf();\n        return this.setState({ TimeSheetDetails });\n\n\n    }\n\n    render() {\n        const { WeekPicker } = DatePicker;\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xl: { span: 24 },\n                lg: { span: 24 },\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xl: { span: 24 },\n                lg: { span: 24 },\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        // const weekpicker = DatePicker.WeekPicker;\n\n\n        return (\n            <div>\n                <Layout>\n                    <Header >\n                        <Row>\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n\n                                    <Menu.Item >\n                                        <Link to={{ pathname: \"/home\" }}> <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img></Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"home\">\n                                        <Link to={{ pathname: \"/home\" }}><Icon type=\"home\" />Home</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}><Icon type=\"clock-circle\" />TimeSheet</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"project\">\n                                        <Link to={{ pathname: \"/Project\" }}><Icon type=\"project\" />Project</Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                <Link to={{ pathname: \"/login\" }}> <Button size='large'><Icon type=\"logout\" />Logout</Button></Link>\n                            </Col>\n\n\n                        </Row>\n                    </Header>\n                    <Content>\n                        <Form layout=\"inline\">\n\n                            <Row>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n                                        CLIENT:\n                                        <div> {this.state.TimeSheetDetails.client}</div>\n                                    </Card>\n                                </Col>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n\n                                        APPROVER(S):\n                                        <div> {this.state.TimeSheetDetails.approver}</div>\n\n\n                                    </Card>\n                                </Col>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n\n\n                                        JOB END DATE:\n                                        <div> {this.state.TimeSheetDetails.endDate}</div>\n\n                                    </Card>\n                                </Col>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n\n\n                                        END CLIENT:\n                                        <div> {this.state.TimeSheetDetails.endClient}</div>\n\n                                    </Card>\n                                </Col>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n\n\n                                        PROJECT:\n                                        <div> {this.state.TimeSheetDetails.projectId}</div>\n\n                                    </Card>\n                                </Col>\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Card >\n\n\n\n                                    </Card>\n                                </Col>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                    <Card >\n\n                                        <FormItem\n                                            label=\"Job\"\n                                            hasFeedback\n                                        >\n                                            <Select id=\"jobTitle\" name=\"jobTitle\" value={this.state.TimeSheetDetails.jobTitle} onChange={this.onDropdownChange}>\n                                                <Option value=\"Java Developer\">Java Developer</Option>\n                                                <Option value=\"Full Stack\">Full Stack</Option>\n                                                <Option value=\"Data Analyst\">Data Analyst</Option>\n                                            </Select>\n                                        </FormItem>\n\n                                    </Card>\n                                </Col>\n\n\n\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                    <Card >\n\n                                        <FormItem\n                                            {...formItemLayout}\n                                        >\n                                            {getFieldDecorator('testNumber', {\n\n\n                                                rules: [\n                                                    {\n                                                        required: true, message: 'Please Select Week!',\n                                                    }\n\n                                                ]\n                                            })(\n                                                <WeekPicker onChange={this.onSelectWeekChange} defaultValue={this.state.TimeSheetDetails.selectWeek} placeholder=\"Select week\" />\n\n                                            )}\n                                        </FormItem>\n\n\n\n                                    </Card>\n                                </Col>\n\n                                <Col s={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Card >\n                                        <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                        <div>\n                            {this.state.viewTimesheet && (\n                                <TimeSheet />\n                            )}\n\n                        </div>\n                    </Content>\n                </Layout>\n\n            </div >\n\n        );\n    }\n\n}\n\n// const mapStateToProps = state => {\n//     return {\n\n//         isTaskCreated: state.createTask.isTaskCreated\n//     };\n// };\nconst mapStateToProps = state => {\n    return {\n\n\n\n\n    };\n};\nconst WrappedRegistrationForm = Form.create()(CreateNewRequest);\n\nexport default connect(mapStateToProps)(WrappedRegistrationForm);\n\n\n\n// <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n// <Card >\n//     <FormItem\n\n//         label=\" Start Date\"\n//         hasFeedback\n\n//     >\n\n\n//         <DatePicker onChange={this.onPlacementDateChange} placeholder=\"Select Date\" defaultValue={this.state.reqDetails.startDate} />\n\n//         {/* <RangePicker onChange={this.onPlacementDateChange} defaultValue={this.state.reqDetails.datepicker} /> */}\n//     </FormItem>\n\n// </Card>\n// </Col>\n// <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n// <Card >\n//     <FormItem\n\n//         label=\" End Date\"\n//         hasFeedback\n\n//     >\n//         <DatePicker onChange={this.onPlacementDateChange} placeholder=\"Select Date\" defaultValue={this.state.reqDetails.endDate} />\n\n//         {/* <RangePicker onChange={this.onPlacementDateChange} defaultValue={this.state.reqDetails.datepicker} /> */}\n//     </FormItem>\n\n// </Card>\n// </Col>\n","import React, { Component } from 'react'\nimport { listEmployee } from \"../../redux/actions/Employee_list\";\nimport { connect } from 'react-redux';\nimport { Collapse, Form, Button, Tabs, Layout, Input, TextArea, List, Divider, Row, Col, Menu, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass EmployeeList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = ({\n        });\n    }\n\n    componentDidMount() {\n\n        //this.setState({ this.props.products: Array.from(this.props.empList) })\n        this.props.dispatch(listEmployee())\n\n    }\n\n    // renderProducts() {\n    //     return this.props.empList.map(product => {\n    //         return (\n    //             <tr key={product.id}>\n    //                 <td>{product.name}</td>\n    //             </tr>\n    //         );\n    //     })\n    // }\n\n    render() {\n        const data = Array.from(this.props.empList);\n        const { Header, Sider, Content, Footer } = Layout;\n\n        console.log(\"ADDS\" + JSON.stringify(this.props.empList))\n        return (\n            <div>\n                <Layout>\n                    <Header>\n                        <Row>\n\n\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n                                    <Menu.Item >\n                                        <Link to={{ pathname: \"/home\" }}> <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img></Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"mail\">\n                                        <Link to={{ pathname: \"/home\" }}><Icon type=\"mail\" />Home</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}><Icon type=\"clock-circle\" />TimeSheet</Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                {/* <p>{this.props.auth}</p> */}\n\n                                <Link to={{ pathname: \"/login\" }}> <Button size='large'><Icon type=\"logout\" />Logout</Button></Link>\n                            </Col>\n\n                        </Row>\n                    </Header>\n                    <Content style={{ margin: '24px 16px', padding: 24, background: '#fff', minHeight: 580 }}>\n\n                        <List\n                            header={<div>Employee</div>}\n\n                            bordered\n                            dataSource={data}\n                            renderItem={item => (<List.Item>{item.name}</List.Item>)}\n                        />\n                    </Content>\n                </Layout>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    console.log(\"STATE\" + JSON.stringify(state.empList.result))\n    return {\n\n        empList: state.empList.result\n\n    };\n}\nexport default connect(mapStateToProps)(EmployeeList);\n//export default EmployeeList;\n\n\n{/* <table className=\"table\">\n<thead>\n    <tr>\n        <th>ID</th>\n        <th>Name</th>\n\n    </tr>\n</thead>\n\n<tbody>\n    {this.renderProducts()}\n</tbody>\n</table> */}","import * as Types from './types';\n\n\nexport const listEmployee = (result) => {\n\n    return {\n        type: Types.LIST_EMPLOYEE_DETAILS,\n        result\n\n    }\n\n}","import * as Types from './types';\n\nexport const createProjcetDetailsSubmit = (projectDetails) => {\n    return {\n        type: Types.CREATE_PROJECT,\n        projectDetails\n    };\n};\n\nexport const listProjectDetails = (listProject) => {\n    return {\n\n        type: Types.LIST_PROJECT_DETAILS,\n        listProject\n    };\n};\n\nexport const deleteProject = (_id) => {\n    console.log(\"Delete Id \" + _id)\n    return {\n        type: Types.DELETE_PROJECT,\n        _id\n\n    }\n}\n\nexport const deleteProjectSucess = (_id) => {\n    return {\n        type: Types.DELETE_PROJECT_SUCESS,\n        _id\n    }\n}\n\nexport const editProject = (_id) => {\n\n}","import React, { Component } from 'react'\nimport { Collapse, Form, Button, Tabs, Layout, Input, TextArea, List, Divider, Row, Col, Menu, Icon, Card } from 'antd';\nimport { listProjectDetails } from '../../redux/actions/ProjectDetails'\nimport { connect } from 'react-redux';\nimport { deleteProject, deleteProjectSucess } from '../../redux/actions/ProjectDetails'\nconst Search = Input.Search;\n\nclass list extends Component {\n\n    componentDidMount() {\n\n        //     this.setState({ this.props.products: Array.from(this.props.empList) })\n        this.props.dispatch(listProjectDetails())\n\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.projList !== prevProps.projList) {\n            this.props.dispatch(listProjectDetails())\n        }\n    }\n    handleDelete(proj) {\n        this.props.dispatch(deleteProject(proj._id))\n        console.log(\"DEL\" + proj._id);\n    }\n    handleEdit(proj) {\n        console.log(\"Edit Click\")\n    }\n\n    render() {\n\n        // const data = Array.from(this.props.projList);\n        const data = Array.from(this.props.projList);\n        // const data = ['ads', 'dda']\n\n        return (\n            <div>\n                <Row>\n                    <Card>\n                        <Search\n                            placeholder=\"input search text\"\n                            onSearch={value => console.log(value)}\n                            style={{ width: 200 }}\n                        />\n                    </Card>\n                    <Card>\n                        <List\n                            pagination=\"true\"\n                            size=\"large\"\n                            header={<div><b>Project Names</b></div>}\n                            bordered\n                            dataSource={data}\n                            renderItem={item => (<List.Item  >{item.clientProjectName}<input type=\"button\" value=\"Remove\" className=\"btn btn-danger\" onClick={() => this.handleDelete(item)} /><input type=\"button\" value=\"Edit\" className=\"btn btn-danger\" onClick={() => this.handleEdit(item)} /></List.Item>)}\n                        />\n                    </Card>\n                </Row>\n            </div >\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n\n        projList: state.projcetDetails.result\n\n    };\n}\nexport default connect(mapStateToProps)(list);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InlineError = ({ text }) => (\n    <span style={{ color: \"#ae5856\" }}>{text}</span>\n);\n\nInlineError.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default InlineError;","import * as Types from \"./types\";\n\nexport const getEmp = result => ({\n    type: Types.GET_EMPLOYEE_LIST,\n    result\n});\n\nexport const searchEmp = result => ({\n    type: Types.SEARCH_EMP,\n    result\n});\n\nexport const selectedEmp = selectedEmp => ({\n    type: Types.GET_EMPLOYEE_SELECTED_LIST,\n    selectedEmp\n});\n\nexport const getPro = result => ({\n    type: Types.PROJECT_LIST,\n    result\n});\n\nexport const getEmpInfo = result => ({\n    type: Types.PROJECT_LIST,\n    result\n});","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Modal, List, Form, Checkbox, Input, Menu, Button, Icon, Col, Layout } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport InlineError from \"../messages/InlineError\";\nimport { getEmp, searchEmp } from \"../../redux/actions/Get_List\";\n\nconst { Header, Content } = Layout;\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            current: \"mail\",\n            data: {\n                firstName: \"\",\n                lastName: \"\",\n                primaryEmail: \"\"\n\n            },\n            loading: false,\n            visible: false,\n            errors: {}\n        };\n    }\n\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    onCheck(e) {\n        console.log(`checked = ${e.target.checked}`);\n        console.log(e.target.value);\n        e.target.value.check = true;\n    }\n\n    handleClick = e => {\n        console.log(\"click \", e);\n        this.setState({\n            current: e.key\n        });\n    };\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false\n        });\n        let selEmpList = Array.from(this.props.searchList);\n        const selEmployees = selEmpList.filter(item => {\n            if (item.check) {\n\n                return item;\n            }\n        });\n\n        console.log(\"selected employees list\" + JSON.stringify(selEmployees));\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            visible: false\n        });\n    };\n\n    validate = data => {\n        const errors = {};\n        if (!data.firstName) errors.firstName = \"Can't be empty\";\n        return errors;\n    };\n\n    onShow = e => {\n        this.setState({\n            visible: true\n        });\n        const { firstName, lastName, primaryEmail } = this.state.data;\n        this.props.dispatch(\n            getEmp({\n                firstName: firstName,\n                lastName: lastName,\n                primaryEmail: primaryEmail,\n\n            })\n        );\n\n\n    };\n    onFilter = e => {\n        const errors = this.validate(this.state.data);\n        this.setState({\n            visible: true,\n            errors\n        });\n        if (Object.keys(errors).length === 0) {\n            const { firstName, lastName, primaryEmail } = this.state.data;\n            this.props.dispatch(\n                searchEmp({\n                    firstName: firstName,\n                    lastName: lastName,\n                    primaryEmail: primaryEmail\n                })\n            );\n        }\n    };\n\n    render() {\n        const { errors } = this.state;\n        const data1 = Array.from(this.props.searchList);\n        const { data } = this.state;\n\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.onShow}>\n                    Add Employee{\" \"}\n                </Button>\n                <Modal\n                    title=\"Employee Details\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    <Card title=\"Search Employee\">\n                        <Form>\n                            <Col span={18}>\n                                <Form.Item error={!!errors.firstName}>\n                                    <Input\n                                        id=\"firstName\"\n                                        type=\"text\"\n                                        name=\"firstName\"\n                                        value={data.firstName}\n                                        onChange={this.onChange}\n                                        placeholder=\"Enter Name\"\n                                    />\n                                    {errors.firstName && <InlineError text={errors.firstName} />}\n                                </Form.Item>\n                                <Button type=\"primary\" onClick={this.onFilter}>\n                                    Filter{\" \"}\n                                </Button>\n\n                                <Content\n                                    style={{\n                                        margin: \"24px 16px\",\n                                        padding: 24,\n                                        background: \"#fff\",\n                                        minHeight: 100\n                                    }}\n                                >\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item => (\n                                            <List.Item>\n                                                <Checkbox onChange={this.onCheck} value={item} />\n                                                {item.firstName}\n                                                {\"    ||    \"}\n                                                {item.lastName}\n                                                {\"    ||    \"}\n                                                {item.primaryEmail}\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Content>\n                            </Col>\n                        </Form>\n                    </Card>\n                </Modal>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    //console.log(\"STATE\" + JSON.stringify(state.empList.result));\n    return {\n        searchList: state.searchList.result\n    };\n}\nexport default connect(mapStateToProps)(Search);","import React, { Component } from 'react'\nimport { Menu, Collapse, Form, Button, Tabs, Layout, Input, Row, Col, DatePicker, Radio, Card, Select, Upload, message, Icon, Switch } from 'antd';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { isThisTypeNode } from 'typescript';\nimport { createProjcetDetailsSubmit } from '../../redux/actions/ProjectDetails';\nimport Projectlist from '../ProjectDetails/list';\nimport EmpModal from '../Search';\nconst { Header, Sider, Content, Footer } = Layout;\nconst { RangePicker } = DatePicker;\n\n\nclass projectDetails extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            current: 'project',\n            projectDetails: {\n                createdById: '1',\n                clientProjectId: '123',\n                clientProjectName: 'das',\n                vendorId: '1233',\n                vendorName: 'dsa',\n                clientId: '232',\n                clientName: 'ds',\n                startDate: '',\n                endDate: '',\n                notes: 'dsd',\n                activeTimesheetStartDate: '',\n                activeTimesheetEndDate: '',\n                activeTimesheetFreezeDate: '',\n                isActiveTimesheet: true,\n                \"listOfEmployees\": [{\n\n                }]\n            }\n\n\n\n        }\n\n    }\n    onChange = (e) => {\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[e.target.name] = e.target.value;\n        return this.setState({ projectDetails });\n    };\n    onChangeId = (e) => {\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[e.target.name] = Number(e.target.value);\n        return this.setState({ projectDetails });\n    };\n\n\n    onChangeRangePicker = (e, date) => {\n\n        // console.log(\"OnSelect\" + date[0])\n        // console.log(\"OnSelect\" + date[1])\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[\"startDate\"] = date[0];\n        projectDetails[\"endDate\"] = date[1];\n        //   console.log(projectDetails[\"projectStartDate\"]);\n\n        return this.setState({ projectDetails });\n    };\n\n\n    onChangeActiveRangePicker = (e, date) => {\n\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[\"activeTimesheetStartDate\"] = date[0];\n        projectDetails[\"activeTimesheetEndDate\"] = date[1];\n        //   console.log(projectDetails[\"projectStartDate\"]);\n\n        return this.setState({ projectDetails });\n\n\n    }\n\n    onChangeFreezeDatePicker = (e, date) => {\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[\"activeTimesheetFreezeDate\"] = date;\n        return this.setState({ projectDetails });\n\n    }\n\n    onChanegeActivetimeSheet = (checked) => {\n        let projectDetails = Object.assign({}, this.state.projectDetails);\n        projectDetails[\"isActiveTimesheet\"] = checked;\n\n        return this.setState({ projectDetails });\n\n    }\n\n    onSubmit = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                let data = {};\n                data.projectDetails = this.state.projectDetails;\n                data.projectDetails.createdById = Math.floor((Math.random() * 100) + 1);\n                console.log(\"Submit Details\" + data)\n                this.props.dispatch(createProjcetDetailsSubmit(data));\n\n                return this.setState({ projectDetails });\n            }\n\n        });\n\n    };\n\n    render() {\n        const { TextArea } = Input;\n        const { getFieldDecorator } = this.props.form;\n        const FormItem = Form.Item;\n        const formItemLayout = {\n            labelCol: {\n                xl: { span: 24 },\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xl: { span: 24 },\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        return (\n            <div>\n                <Layout>\n\n                    <Header >\n                        <Row>\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n                                    <Menu.Item >\n                                        <Link to={{ pathname: \"/home\" }}> <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img></Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"home\">\n                                        <Link to={{ pathname: \"/home\" }}><Icon type=\"home\" />Home</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}><Icon type=\"clock-circle\" />TimeSheet</Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"project\">\n                                        <Link to={{ pathname: \"/Project\" }}><Icon type=\"project\" />Project</Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                <Link to={{ pathname: \"/login\" }}> <Button size='large'><Icon type=\"logout\" />Logout</Button></Link>\n                            </Col>\n\n\n                        </Row>\n                    </Header>\n                    <Content>\n                        <Row gutter={24}>\n                            <Col span={16}>\n                                <Form >\n\n                                    <Row type=\"flex\" justify=\"start\" >\n\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>PROJECT ID:</label>\n                                                <label>{this.state.projectDetails.clientProjectId}</label>\n                                                <FormItem\n                                                    {...formItemLayout}\n                                                >{getFieldDecorator('clientProjectId', {\n\n\n                                                    rules: [\n                                                        {\n                                                            required: true, message: 'Please input Project id!',\n                                                        }\n\n                                                    ]\n                                                })(\n\n                                                    <Input type=\"text\" size=\"default\" name=\"clientProjectId\" onChange={this.onChangeId} value={this.state.projectDetails.clientProjectId} />\n\n                                                )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>PROJECT NAME:</label>\n                                                <FormItem\n                                                    {...formItemLayout}\n                                                >\n                                                    {getFieldDecorator('clientProjectName', {\n\n\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please input Project Name!',\n                                                            }\n\n                                                        ]\n                                                    })(\n                                                        <Input type=\"text\" size=\"default\" name=\"clientProjectName\" onChange={this.onChange} placeholder=\"Enter Project Name\" />\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>VENDOR ID:</label>\n                                                <FormItem\n                                                    {...formItemLayout}\n                                                >\n                                                    {getFieldDecorator('vendorId', {\n\n\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please input Vendor Id!',\n                                                            }\n\n                                                        ]\n                                                    })(\n                                                        <Input type=\"text\" size=\"default\" name=\"vendorId\" onChange={this.onChangeId} placeholder=\"Enter Vendor Id\" />\n\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n\n\n                                    </Row>\n                                    <Row type=\"flex\" justify=\"start\">\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>VENDOR NAME:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('vendorName', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please input Vendor Name!',\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input type=\"text\" size=\"default\" name=\"vendorName\" onChange={this.onChange} placeholder=\"Enter Vendor Name\" />\n\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>CLIENT ID:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('clientId', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please input Client Id!',\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input type=\"text\" size=\"default\" name=\"clientId\" onChange={this.onChangeId} placeholder=\"Enter Client Id\" />\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>CLIENT NAME:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('clientName', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please input Client Name!',\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input type=\"text\" size=\"default\" name=\"clientName\" onChange={this.onChange} placeholder=\"Enter Client Name\" />\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    <Row type=\"flex\" justify=\"start\">\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>PROJECT:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('projectRangePicker', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please Select Project Dates!',\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <RangePicker\n                                                            name=\"projectRangePicker\"\n                                                            format=\"YYYY-MM-DD\"\n                                                            placeholder={['Start Time', 'End Time']}\n                                                            onChange={this.onChangeRangePicker}\n                                                            onOk={this.onChangeRanePickerSubmit}\n                                                        />\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>ACTIVE PROJECT:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('activeProjectRangePicker', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please Select Active Project Dates!',\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <RangePicker\n                                                            name=\"activeProjectRangePicker\"\n                                                            format=\"YYYY-MM-DD\"\n                                                            placeholder={['Start Time', 'End Time']}\n                                                            onChange={this.onChangeActiveRangePicker}\n                                                            onOk={this.onChangeActiveRanePickerSubmit}\n                                                        />\n                                                    )}\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n\n                                        <Col span={8}>\n                                            <Card>\n                                                <label>FREEZE DATE:</label>\n                                                <FormItem {...formItemLayout}>\n                                                    {getFieldDecorator('freezeDate', {\n                                                        rules: [\n                                                            {\n                                                                required: true, message: 'Please Select Freeze  Dates!',\n                                                            }\n                                                        ]\n                                                    })(\n\n\n                                                        <DatePicker name=\"freezeDate\" format=\"YYYY-MM-DD\" onChange={this.onChangeFreezeDatePicker} />\n\n                                                    )}\n                                                </FormItem>\n\n                                            </Card>\n                                        </Col>\n\n                                    </Row>\n                                    <Row type=\"flex\" justify=\"start\">\n\n                                        <Col span={8}>\n                                            <Card>\n                                                <FormItem>\n                                                    <EmpModal></EmpModal>\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                        <Col span={8}>\n\n                                            <Card>\n                                                <label>ACTIVE TIMESHEET:</label>\n                                                <FormItem>\n\n                                                    <Switch defaultChecked onChange={this.onChanegeActivetimeSheet} />\n                                                </FormItem>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n\n                                    <Row type=\"flex\" justify=\"start\">\n                                        <Col span={24}>\n                                            <Card>\n                                                <div>\n                                                    Notes:\n\n\n                                                <TextArea rows={4} name=\"notes\" onChange={this.onChange} />\n\n                                                </div>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    <Row type=\"flex\" justify=\"start\">\n                                        <Col span={6}>\n                                            <Card>\n\n                                                <Button type=\"primary\" htmlType=\"submit\" onClick={this.onSubmit} >Submit</Button>\n\n\n                                            </Card>\n                                        </Col>\n                                        <Col span={6}>\n                                            <Card>\n                                                <Button type=\"primary\" >Reset</Button>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                            <Col span={8}>\n                                <Projectlist />\n                            </Col>\n                        </Row>\n                    </Content>\n                </Layout>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    console.log(\"Project\" + JSON.stringify(state.projcetDetails));\n    return {\n        projcetDetails: state.projectDetails\n\n    }\n\n};\n\nconst WrappedRegistrationForm = Form.create()(projectDetails);\n\n\nexport default connect(mapStateToProps)(WrappedRegistrationForm);\n","import * as Types from \"./types\";\n\nexport const signupUser = user => ({\n    type: Types.SIGNUP_USER,\n    user\n});\n\nexport const addEmployee = user => ({\n    type: Types.EMPLOYEE_SAVE_DATABASE,\n    user\n});","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Validator from \"validator\";\nimport { Form, Input, Row, Col, Button, Card } from \"antd\";\nimport InlineError from \"../messages/InlineError\";\nimport { signupUser } from \"../../redux/actions/home\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n            },\n            loading: false,\n            errors: {}\n        };\n    }\n\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    onSubmit = e => {\n        const errors = this.validate(this.state.data);\n        this.setState({ errors });\n        if (Object.keys(errors).length === 0) {\n            const {\n                firstName,\n                lastName,\n                phoneNumber,\n                email,\n                password,\n                confirmPassword\n            } = this.state.data;\n            this.props.dispatch(\n                signupUser({\n                    firstName: firstName,\n                    lastName: lastName,\n                    phoneNumber: phoneNumber,\n                    email: email,\n                    password: password,\n                    confirmPassword: confirmPassword\n                })\n            );\n            this.props.history.push(\"/login\");\n        }\n    };\n\n    validate = data => {\n        const errors = {};\n        if (!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n        if (!data.password) errors.password = \"Can't be empty\";\n        if (!data.firstName) errors.firstName = \"Can't be empty\";\n        if (!data.lastName) errors.lastName = \"Can't be empty\";\n        if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\n        if (data.password !== data.confirmPassword)\n            errors.confirmPassword = \"Write the same password\";\n        return errors;\n    };\n\n    render() {\n        const { data, errors } = this.state;\n        return (\n            <div>\n                <Card title=\"Signup\">\n                    <Form>\n                        <Row>\n                            <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                                <Form.Item error={!!errors.firstName}>\n                                    <Input\n                                        id=\"firstName\"\n                                        type=\"text\"\n                                        name=\"firstName\"\n                                        value={data.firstName}\n                                        onChange={this.onChange}\n                                        placeholder=\"First Name\"\n                                    />\n                                    {errors.firstName && <InlineError text={errors.firstName} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.lastName}>\n                                    <Input\n                                        id=\"lastName\"\n                                        type=\"text\"\n                                        name=\"lastName\"\n                                        value={data.lastName}\n                                        onChange={this.onChange}\n                                        placeholder=\"Last Name\"\n                                    />\n                                    {errors.lastName && <InlineError text={errors.lastName} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.phoneNumber}>\n                                    <Input\n                                        id=\"phoneNumber\"\n                                        name=\"phoneNumber\"\n                                        type=\"tel\"\n                                        placeholder=\"10 Digits Phone number\"\n                                        value={data.phoneNumber}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.phoneNumber && (\n                                        <InlineError text={errors.phoneNumber} />\n                                    )}\n                                </Form.Item>\n                                <Form.Item error={!!errors.email}>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"text\"\n                                        name=\"email\"\n                                        value={data.email}\n                                        onChange={this.onChange}\n                                        placeholder=\"email@rsrit.com\"\n                                    />\n                                    {errors.email && <InlineError text={errors.email} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.password}>\n                                    <Input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        value={data.password}\n                                        onChange={this.onChange}\n                                        placeholder=\"Password (Make it Secure)\"\n                                    />\n                                    {errors.password && <InlineError text={errors.password} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.confirmPassword}>\n                                    <Input\n                                        id=\"confirmPassword\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        value={data.confirmPassword}\n                                        onChange={this.onChange}\n                                        placeholder=\"Same as Password\"\n                                    />\n                                    {errors.confirmPassword && (\n                                        <InlineError text={errors.confirmPassword} />\n                                    )}\n                                </Form.Item>\n\n                                <br />\n                                <br />\n                                <Button type=\"primary\" onClick={this.onSubmit}>\n                                    Submit\n                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nSignup.propTypes = {};\n\nconst mapStateToProps = state => {\n    return {\n        userObject: state.auth.user\n    };\n};\n\nexport default connect(mapStateToProps)(Signup);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Validator from \"validator\";\nimport { Menu, Icon, Form, Layout, Row, Input, Button, Card, Col } from \"antd\";\nimport InlineError from \"../messages/InlineError\";\nimport { addEmployee } from \"../../redux/actions/home\";\nimport { Link } from \"react-router-dom\";\nconst { Header } = Layout;\n\nclass AddEmployee extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                primaryEmail: \"\",\n                SecondaryEmail: \"\",\n                address: \"\",\n                jobCode: \"\",\n                jobTitle: \"\",\n                endClient: \"\",\n                startDate: \"\",\n                vendor: \"\",\n                projectId: \"\",\n                projectName: \"\",\n                managerName: \"\",\n                approverName: \"\"\n            },\n            loading: false,\n            errors: {},\n            current: 'home'\n        };\n    }\n\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    onSubmit = e => {\n        const errors = this.validate(this.state.data);\n        this.setState({ errors });\n        if (Object.keys(errors).length === 0) {\n            const {\n                firstName,\n                lastName,\n                phoneNumber,\n                primaryEmail,\n                secondaryEmail,\n                address,\n                jobCode,\n                jobTitle,\n                endClient,\n                startDate,\n                vendor,\n                projectId,\n                projectName,\n                managerName,\n                approverName\n            } = this.state.data;\n            this.props.dispatch(\n                addEmployee({\n                    firstName: firstName,\n                    lastName: lastName,\n                    phoneNumber: phoneNumber,\n                    primaryEmail: primaryEmail,\n                    SecondaryEmail: secondaryEmail,\n                    address: address,\n                    jobCode: jobCode,\n                    jobTitle: jobTitle,\n                    endClient: endClient,\n                    startDate: startDate,\n                    vendor: vendor,\n                    projectId: projectId,\n                    projectName: projectName,\n                    managerName: managerName,\n                    approverName: approverName\n                })\n            );\n\n            this.props.history.push(\"/home\");\n        }\n    };\n\n    validate = data => {\n        const errors = {};\n        if (!Validator.isEmail(data.primaryEmail))\n            errors.primaryEmail = \"Invalid Email\";\n        if (!data.firstName) errors.firstName = \"Can't be empty\";\n        if (!data.lastName) errors.lastName = \"Can't be empty\";\n        if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\n        if (!data.approverName) errors.approverName = \"Can't be empty\";\n        if (!data.managerName) errors.managerName = \"Can't be empty\";\n        return errors;\n    };\n\n    render() {\n        const { data, errors } = this.state;\n        return (\n            <div>\n                <Header>\n                    <Row>\n                        <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                            <Menu\n                                onClick={this.handleClick}\n                                selectedKeys={[this.state.current]}\n                                mode=\"horizontal\"\n                            >\n                                <Menu.Item >\n                                    <Link to={{ pathname: \"/home\" }}> <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img></Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"home\">\n                                    <Link to={{ pathname: \"/home\" }}><Icon type=\"home\" />Home</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"timesheet\">\n                                    <Link to={{ pathname: \"/createNewRequest\" }}><Icon type=\"clock-circle\" />TimeSheet</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"project\">\n                                    <Link to={{ pathname: \"/Project\" }}><Icon type=\"project\" />Project</Link>\n                                </Menu.Item>\n                            </Menu>\n                        </Col>\n                        <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                            <Link to={{ pathname: \"/login\" }}>\n                                {\" \"}\n                                <Button size=\"large\">\n                                    <Icon type=\"logout\" />\n                                    Logout\n                </Button>\n                            </Link>\n                        </Col>\n                    </Row>\n                </Header>\n                <Card title=\"Add Employee\">\n                    <Form>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.firstName}>\n                                <h3>First Name</h3>\n                                <Input\n                                    id=\"firstName\"\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    value={data.firstName}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Name\"\n                                />\n                                {errors.firstName && <InlineError text={errors.firstName} />}\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.lastName}>\n                                <h3>Last Name</h3>\n                                <Input\n                                    id=\"lastName\"\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    value={data.lastName}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Last Name\"\n                                />\n                                {errors.lastName && <InlineError text={errors.lastName} />}\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.phoneNumber}>\n                                <h3>Phone Number</h3>\n                                <Input\n                                    id=\"phoneNumber\"\n                                    name=\"phoneNumber\"\n                                    type=\"tel\"\n                                    placeholder=\"10 Digits Phone number\"\n                                    value={data.phoneNumber}\n                                    onChange={this.onChange}\n                                />\n                                {errors.phoneNumber && (\n                                    <InlineError text={errors.phoneNumber} />\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.primaryEmail}>\n                                <h3>Primary Email</h3>\n                                <Input\n                                    id=\"primaryEmail\"\n                                    type=\"email\"\n                                    name=\"primaryEmail\"\n                                    value={data.primaryEmail}\n                                    onChange={this.onChange}\n                                    placeholder=\"email@rsrit.com\"\n                                />\n                                {errors.primaryEmail && <InlineError text={errors.email} />}\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Secondary Email</h3>\n                                <Input\n                                    id=\"secondaryEmail\"\n                                    type=\"email\"\n                                    name=\"secondaryEmail\"\n                                    value={data.secondaryEmail}\n                                    onChange={this.onChange}\n                                    placeholder=\"email@gmail.com\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Address</h3>\n                                <Input\n                                    id=\"address\"\n                                    type=\"text\"\n                                    name=\"address\"\n                                    value={data.address}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Current Address\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Job Code</h3>\n                                <Input\n                                    id=\"jobCode\"\n                                    type=\"text\"\n                                    name=\"jobCode\"\n                                    value={data.jobCode}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Job code\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Job Title</h3>\n                                <Input\n                                    id=\"jobTitle\"\n                                    type=\"text\"\n                                    name=\"jobTitle\"\n                                    value={data.jobTitle}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Job Title\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>End Client</h3>\n                                <Input\n                                    id=\"endClient\"\n                                    type=\"text\"\n                                    name=\"endClient\"\n                                    value={data.endClient}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter End Client Name\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Start Date</h3>\n                                <Input\n                                    id=\"startDate\"\n                                    type=\"date\"\n                                    name=\"startDate\"\n                                    value={data.startDate}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter the Date of Joining\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Vendor</h3>\n                                <Input\n                                    id=\"vendor\"\n                                    type=\"text\"\n                                    name=\"vendor\"\n                                    value={data.vendor}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Vendor Name\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Project ID</h3>\n                                <Input\n                                    id=\"projectId\"\n                                    type=\"text\"\n                                    name=\"projectId\"\n                                    value={data.projectId}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter ID of Project\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item>\n                                <h3>Project Name</h3>\n                                <Input\n                                    id=\"ProjectName\"\n                                    type=\"text\"\n                                    name=\"projectName\"\n                                    value={data.projectName}\n                                    onChange={this.onChange}\n                                    placeholder=\"Enter Name of Project\"\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.managerName}>\n                                <h3>Manager Name</h3>\n                                <Input\n                                    id=\"managerName\"\n                                    type=\"text\"\n                                    name=\"managerName\"\n                                    value={data.managerName}\n                                    onChange={this.onChange}\n                                    placeholder=\"Person who manages the Employee\"\n                                />\n                                {errors.managerName && (\n                                    <InlineError text={errors.managerName} />\n                                )}\n                            </Form.Item>\n                            <br />\n                            <Button type=\"primary\" onClick={this.onSubmit}>\n                                Submit\n              </Button>\n                        </Col>\n                        <Col span={6}>\n                            <Form.Item error={!!errors.approverName}>\n                                <h3>Approver Name</h3>\n                                <Input\n                                    id=\"approverName\"\n                                    type=\"text\"\n                                    name=\"approverName\"\n                                    value={data.approverName}\n                                    onChange={this.onChange}\n                                    placeholder=\"Person who approved the Employee\"\n                                />\n                                {errors.approverName && (\n                                    <InlineError text={errors.approverName} />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nAddEmployee.propTypes = {};\n\nconst mapStateToProps = state => {\n    return {\n        userObject: state.auth.user\n    };\n};\n\nexport default connect(mapStateToProps)(AddEmployee);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Menu,\n    List,\n    Form,\n    Icon,\n    Button,\n    Layout,\n    Row,\n    Col,\n    Card,\n    Badge\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getPro, getEmpInfo } from \"../../redux/actions/Get_List\";\nimport Moment from \"react-moment\";\n\nconst { Header, Content, Footer } = Layout;\nvar size1 = 0;\nvar size2 = 0;\nclass MTSA extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            current: \"mail\",\n            data: {\n                clientProjectName: \"\",\n                startDate: \"\",\n                endDate: \"\",\n                listOfEmployees: [{ employeeId: \"\", employeeName: \"\" }],\n                activeTimesheetStartDate: \"\",\n                activeTimesheetEndDate: \"\",\n                notes: \"\",\n                projectId: \"\",\n                clientProjectId: \"\",\n                vendorId: \"\",\n                vendorName: \"\"\n            },\n            loading: false\n        };\n    }\n    componentDidMount() {\n        this.onShow();\n    }\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    handleClick = e => {\n        console.log(\"click \", e);\n        this.setState({\n            current: e.key\n        });\n    };\n\n    onShow = e => {\n        const { clientProjectName, startDate, endDate } = this.state.data;\n        this.props.dispatch(\n            getPro({\n                clientProjectName: clientProjectName,\n                startDate: startDate,\n                endDate: endDate\n            })\n        );\n        this.props.history.push(\"/mTSA\");\n    };\n    onList = e => {\n        const {\n            listOfEmployees: [{ employeeId, employeeName }],\n            activeTimesheetStartDate,\n            activeTimesheetEndDate,\n            notes\n        } = this.state.data;\n        this.props.dispatch(\n            getEmpInfo({\n                listOfEmployees: [\n                    {\n                        employeeId: employeeId,\n                        employeeName: employeeName\n                    }\n                ],\n                activeTimesheetStartDate: activeTimesheetStartDate,\n                activeTimesheetEndDate: activeTimesheetEndDate,\n                notes: notes\n            })\n        );\n        size1 = 8;\n        this.props.history.push(\"/mTSA\");\n    };\n\n    onDetails = e => {\n        const {\n            listOfEmployees: [{ employeeId }],\n            projectId,\n            clientProjectId,\n            vendorId,\n            vendorName\n        } = this.state.data;\n        this.props.dispatch(\n            getEmpInfo({\n                listOfEmployees: [{ employeeId: employeeId }],\n                projectId: projectId,\n                clientProjectId: clientProjectId,\n                vendorId: vendorId,\n                vendorName: vendorName\n            })\n        );\n        size2 = 8;\n        this.props.history.push(\"/mTSA\");\n    };\n\n    render() {\n        const data1 = Array.from(this.props.empList);\n        const { data } = this.state;\n\n        return (\n            <div>\n                <Layout>\n                    <Header>\n                        <Row>\n                            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\n                                <Menu\n                                    onClick={this.handleClick}\n                                    selectedKeys={[this.state.current]}\n                                    mode=\"horizontal\"\n                                >\n                                    <Menu.Item>\n                                        <Link to={{ pathname: \"/home\" }}>\n                                            {\" \"}\n                                            <img\n                                                src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\n                                                width=\"200px\"\n                                                height=\"60px\"\n                                            />\n                                        </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"mail\">\n                                        <Link to={{ pathname: \"/home\" }}>\n                                            <Icon type=\"mail\" />\n                                            Home\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"timesheet\">\n                                        <Link to={{ pathname: \"/createNewRequest\" }}>\n                                            <Icon type=\"clock-circle\" />\n                                            Time Sheet\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"Manager Approval\">\n                                        <Link to={{ pathname: \"/mTSA\" }}>\n                                            <Icon type=\"ordered-list\" />\n                                            Manager TimeSheet Approval\n                    </Link>\n                                    </Menu.Item>\n                                    <Menu.Item key=\"project\">\n                                        <Link to={{ pathname: \"/project\" }}>\n                                            <Icon type=\"project\" />\n                                            Project\n                    </Link>\n                                    </Menu.Item>\n                                </Menu>\n                            </Col>\n                            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n                                <Link to={{ pathname: \"/login\" }}>\n                                    {\" \"}\n                                    <Button size=\"large\">\n                                        <Icon type=\"logout\" />\n                                        Logout\n                  </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Header>\n                    <Content\n                        style={{\n                            margin: \"24px 16px\",\n                            padding: 24,\n                            background: \"#fff\",\n                            minHeight: 500\n                        }}\n                    >\n                        <Col span={8}>\n                            <Card title=\"Project List\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item => (\n                                            <List.Item>\n                                                <Card onClick={this.onList} value={item.projectId}>\n                                                    <Badge count={item.listOfEmployees.length} />\n                                                    <b>\n                                                        {\"Project Name: \"}\n                                                        {item.clientProjectName}\n                                                    </b>\n                                                    <br />\n                                                    {\"Date: \"}\n                                                    <Moment format=\"MM/DD/YYYY\">{item.startDate}</Moment>\n                                                    {\" - \"}\n                                                    <Moment format=\"MM/DD/YYYY\">{item.endDate}</Moment>\n                                                    <br />\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>\n                        </Col>\n\n                        <Col xs={size1} sm={size1} md={size1} lg={size1} xl={size1}>\n                            <Card title=\"Employee List\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item2 => (\n                                            <List.Item>\n                                                <Card onClick={this.onDetails} value={data}>\n                                                    {\"Employee ID: \"}\n                                                    <Badge count={item2.listOfEmployees[0].employeeId} />\n                                                    <br />\n                                                    {\"Employee Name: \"}\n                                                    {item2.listOfEmployees[0].employeeName}\n                                                    <br />\n                                                    {\"Timesheet Date: \"}\n                                                    <Moment format=\"MM/DD/YYYY\">\n                                                        {item2.activeTimesheetStartDate}\n                                                    </Moment>\n                                                    {\" - \"}\n                                                    <Moment format=\"MM/DD/YYYY\">\n                                                        {item2.activeTimesheetEndDate}\n                                                    </Moment>\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>\n                        </Col>\n                        <Col xs={size2} sm={size2} md={size2} lg={size2} xl={size2}>\n                            <Card title=\"Employee Details\" span={4}>\n                                <Form span={4}>\n                                    <List\n                                        bordered\n                                        dataSource={data1}\n                                        renderItem={item2 => (\n                                            <List.Item>\n                                                <Card>\n                                                    {\"Employee Id: \"}\n                                                    <Badge count={item2.listOfEmployees[0].employeeId} />\n                                                    <br />\n                                                    {\"Project Id: \"}\n                                                    <Badge count={item2.listOfEmployees[0].projectId} />\n                                                    <br />\n                                                    {\"Client Id: \"}\n                                                    <Badge\n                                                        count={item2.listOfEmployees[0].clientProjectId}\n                                                    />\n                                                    <br />\n                                                    {\"Vendor Id: \"}\n                                                    {item2.vendorId}\n                                                    <br />\n                                                    {\"Vendor Name: \"}\n                                                    {item2.vendorName}\n                                                </Card>\n                                            </List.Item>\n                                        )}\n                                    />\n                                </Form>\n                            </Card>{\" \"}\n                        </Col>\n                    </Content>\n\n                    <Footer>\n                        <center>\n                            <Icon type=\"copyright\" />\n                            Reliable Software 2018\n            </center>\n                    </Footer>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    //console.log(\"STATE\" + JSON.stringify(state.empList.result));\n    return {\n        empList: state.searchList.result\n    };\n}\n\nexport default connect(mapStateToProps)(MTSA);","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Login from \"../components/Login\";\nimport Home from \"../components/Home\";\nimport TimeSheetCalander from \"../components/TimeSheet_Calander\"\nimport CreateNewRequest from \"../components/CreateNewRequest\";\nimport Employee from \"../components/Employee/List\";\nimport Project from \"../components/ProjectDetails\";\nimport Signup from \"../components/Sign Up\";\nimport Search from \"../components/Search\";\nimport AddEmployee from \"../components/AddEmployee\";\nimport MTSA from \"../components/MTSA\";\nexport default () => {\n  return (\n\n\n\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/login\" render={props => <Login {...props} />} />\n        <Route exact path=\"/signup\" render={props => <Signup {...props} />} />\n        <Route exact path=\"/home\" render={props => <Home {...props} />} />\n        <Route exact path=\"/createNewRequest\" render={props => <CreateNewRequest {...props} />} />\n        <Route exact path=\"/TimeSheetCalander\" render={props => <TimeSheetCalander {...props} />} />\n        <Route exact path=\"/Project\" render={props => <Project {...props} />} />\n        <Route exact path=\"/Employee\" render={props => <Employee {...props} />} />\n        <Route exact path=\"/search\" render={props => <Search {...props} />} />\n        <Route exact path=\"/addEmployee\" render={props => <AddEmployee {...props} />} />\n        <Route exact path=\"/mTSA\" render={props => <MTSA {...props} />} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from \"./routes\";\n\nclass App extends Component {\n  render() {\n    return (\n     <div>\n       <Routes/>\n     </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function GetDataFromServer(apiPath, reqMethod, formBody) {\n    let myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    // if(window.localStorage.userLoginToken !== undefined){\n    //   myHeaders.append('Authorization', 'Bearer '+window.localStorage.userLoginToken);\n    // }\n    // if(window.localStorage.bazruserid !== undefined){\n    //   myHeaders.append('bazruserid', window.localStorage.bazruserid);\n    // }\n\n\n    if (!reqMethod && reqMethod !== \"POST\") {\n        return fetch(apiPath, { method: 'GET', headers: myHeaders })\n\n    } else {\n        if (formBody) {\n            let fetchData = {\n                method: 'POST',\n                body: JSON.stringify(formBody),\n                headers: myHeaders\n            }\n            // Create our request constructor with all the parameters we need\n            // var request = new Request(apiPath, {\n            //     method: 'POST',\n            //     body: formBody,\n            //     headers: new Headers()\n            // });\n            //return fetch(request);\n            return fetch(apiPath, fetchData);\n        }\n    }\n}\n\n// below service call is used only for posting a new item,\n// for posting a new item we're using formData for whihc we should not send the headers\n// and the request body shoudl be form data.\nexport function GetDataFromServerToPost(apiPath, reqMethod, formBody) {\n    let myHeaders = new Headers();\n    // if(window.localStorage.userLoginToken !== undefined){\n    //   myHeaders.append('Authorization', 'Bearer '+window.localStorage.userLoginToken);\n    // }\n\n    myHeaders.append('Content-Type', 'application/json');\n    if (formBody) {\n        let fetchData = {\n            method: 'POST',\n            body: formBody,\n            headers: myHeaders\n        }\n        return fetch(apiPath, fetchData);\n    }\n}\n\nexport function deleteTodoAPI(formBody) {\n    console.log(\"FORM BODY\" + JSON.stringify(formBody))\n    let myHeaders = new Headers();\n\n\n    myHeaders.append('Content-Type', 'application/json');\n    return fetch('http://18.222.167.189:5000/delete-project', {\n        method: 'DELETE',\n        body: JSON.stringify(formBody),\n        headers: myHeaders\n    })\n        .then(res => res.json())\n\n}","import { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer, deleteTodoAPI } from '../service';\n\n//const baseUrl = 'http://localhost:8080';\nconst baseUrl = 'https://sleepy-basin-37644.herokuapp.com';\nconst baseUrl2 = 'https://fierce-crag-76882.herokuapp.com';\nconst aws = 'http://18.222.167.189:5000';\nfunction* fetchLoginUser(action) {\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.firstname = \"asdfg\";//action.code;\n    formBody.lastname = \"zxcvbb\"; //action.provider;\n    formBody.age = \"34\"\n    //const reqMethod = \"POST\";\n    const reqMethod = \"GET\";\n    const loginUrl = baseUrl + '/view';\n    const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n    const result = yield response.json();\n    console.log(\"ADS\" + result.workingdetails);\n    console.log(\"Result ->\" + JSON.stringify(result))\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\nfunction* fetchTimeSheet(action) {\n  console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.selectWeek = action.selectWeek; //action.provider;\n    formBody.jobTitle = action.jobTitle;\n    formBody.approver = action.approver;\n    formBody.client = action.client;\n    formBody.endDate = action.endDate;\n    formBody.projectId = action.projectId;\n\n    //const reqMethod = \"POST\";\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/create';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n}\nfunction* fetchTimeSheetCalander(action) {\n  console.log(\"Submit Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/submit';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\nfunction* fetchSaveTimeSheetCalander(action) {\n  console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/save';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\n\nfunction* fetchListOfEmployee() {\n\n  let formBody = {};\n  const reqMethod = \"GET\";\n  const loginUrl = baseUrl + '/view';\n  const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n  const result = yield response.json();\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR, result });\n  } else {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS, result });\n  }\n}\nfunction* fetchCreateProjectDetails(action) {\n\n  let formBody = {};\n  formBody.projectDetails = action.projectDetails;\n  yield put({ type: Types.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS, formBody })\n  // let formBody = {};\n  // const reqMethod = \"POST\";\n  // const loginUrl = baseUrl + '/view';\n  // const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n  // const result = yield response.json();\n  // console.log(\"Result->\" + JSON.stringify(result));\n  // if (result.error) {\n  //   yield put({ type: Types.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR, result });\n  // } else {\n  //   yield put({ type: Types.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS, result });\n  // }\n}\nfunction* signUpUser(action) {\n  try {\n    console.log(\"Submit Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.user = action.user;\n\n    const signUpUrl = baseUrl2 + \"/user/create\";\n    const response = yield call(\n      GetDataFromServer,\n      signUpUrl,\n      \"POST\",\n      formBody.user\n    );\n    const result = yield response.json();\n    console.log(\"Result Json\" + result);\n    if (result.error) {\n      yield put({\n        type: \"SIGNUP_USER_SERVER_RESPONSE_ERROR\",\n        error: result.error\n      });\n    } else {\n      yield put({ type: Types.SIGNUP_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\n\nfunction* saveEmployee(action) {\n  try {\n    console.log(\"Submit Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.user = action.user;\n\n    //const reqMethod = \"POST\";\n    const AddEmpUrl = baseUrl2 + \"/employee/create\";\n    const response = yield call(\n      GetDataFromServer,\n      AddEmpUrl,\n      \"POST\",\n      formBody.user\n    );\n    const result = yield response.json();\n    console.log(\"Result Json\" + result);\n    if (result.error) {\n      yield put({\n        type: \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\",\n        error: result.error\n      });\n    } else {\n      yield put({\n        type: Types.EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS,\n        result\n      });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\n\nfunction* getEmployee(action) {\n  console.log(\"Get Action->\" + JSON.stringify(action));\n\n  const reqMethod = \"GET\";\n  const loginUrl = baseUrl2 + \"/employee/listEmployees\";\n\n  const response = yield call(GetDataFromServer, loginUrl, \"\", \"\");\n\n  const result = yield response.json();\n\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE, result });\n  } else {\n    yield put({ type: Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE, result });\n  }\n}\n\nfunction* searchEmployee(action) {\n  console.log(\"Search Action->\" + JSON.stringify(action));\n\n  let firstName = {};\n  firstName = action.result.firstName;\n\n  const reqMethod = \"GET\";\n  const loginUrl = baseUrl2 + `/employee/search/${firstName}`;\n\n  const response = yield call(GetDataFromServer, loginUrl, \"\", \"\");\n\n  const result = yield response.json();\n\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.SEARCH_EMP_ERROR, result });\n  } else {\n    yield put({ type: Types.SEARCH_EMP_SUCCESS, result });\n  }\n}\n\nfunction* saveProjectDetails(action) {\n  try {\n    console.log(\"CREATE PROJECT Action->\" + JSON.stringify(action.projectDetails.projectDetails));\n\n    let formBody = {};\n    formBody = action.projectDetails.projectDetails;\n    console.log(\"FormBody\" + JSON.stringify(formBody));\n\n    const reqMethod = \"POST\";\n    // const loginUrl = baseUrl + '/project/create';\n    const loginUrl = aws + '/save-project';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + JSON.stringify(result));\n    if (result.error) {\n      yield put({ type: Types.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR, error: result.error });\n    } else {\n      yield put({ type: Types.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS, result });\n      console.log(\"PROJECT DETAILS\" + JSON.stringify(result));\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\nfunction* fetchListOfProjectDetails() {\n\n  let formBody = {};\n  const reqMethod = \"GET\";\n  const loginUrl = aws + '/get-all-projects';\n  const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n  const result = yield response.json();\n  if (result.error) {\n    yield put({ type: Types.LIST_PROJECT_DETAILS_SERVER_RESPONSE_ERROR, result });\n  } else {\n    yield put({ type: Types.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS, result });\n  }\n}\nfunction* deleteProjectDetails(action) {\n  console.log(\"DELETE ACTIO\" + JSON.stringify(action))\n  try {\n    // Ensure that your API returns the data of the updated todo\n    let formBody = {};\n    formBody._id = action._id\n    const newData = yield call(deleteTodoAPI, formBody); // Refer sample to api calls in remote.js file\n    yield put({ type: Types.DELETE_PROJECT_SUCESS, newData }); // pass in the id you updated and the newData returned from the API\n    /// Other things can go here depending on what you want\n  } catch (e) {\n    console.log(\"SAGA ERROR\")\n  }\n}\nfunction* listProjects(action) {\n  console.log(\"Get Action->\" + JSON.stringify(action));\n\n  const reqMethod = \"GET\";\n  const loginUrl = \"https://18.222.167.189:5000/get-all-projects\";\n\n  const response = yield call(GetDataFromServer, loginUrl, \"\", \"\");\n\n  const result = yield response.json();\n\n\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE, result });\n  } else {\n    yield put({ type: Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE, result });\n  }\n}\nexport default function* rootSaga(params) {\n  yield takeLatest(Types.LOGIN_USER, fetchLoginUser);\n  yield takeLatest(Types.CREATE_TIMESHEET, fetchTimeSheet);\n  yield takeLatest(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n  yield takeLatest(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n  yield takeLatest(Types.LIST_EMPLOYEE_DETAILS, fetchListOfEmployee);\n  yield takeLatest(Types.CREATE_PROJECT, fetchCreateProjectDetails);\n  yield takeEvery(Types.SIGNUP_USER, signUpUser);\n  yield takeEvery(Types.EMPLOYEE_SAVE_DATABASE, saveEmployee);\n  yield takeEvery(Types.GET_EMPLOYEE_LIST, getEmployee);\n  yield takeEvery(Types.SEARCH_EMP, searchEmployee);\n  yield takeEvery(Types.CREATE_PROJECT, saveProjectDetails)\n  yield takeLatest(Types.LIST_PROJECT_DETAILS, fetchListOfProjectDetails)\n  yield takeLatest(Types.DELETE_PROJECT, deleteProjectDetails)\n  yield takeEvery(Types.PROJECT_LIST, listProjects);\n\n  console.log(\"ROOT SAGA\");\n\n}\n","import * as Type from \"../actions/types\";\n\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case Type.CREATE_TIMESHEET:\n            // return Object.assign({}, state);\n            return { ...state, timesheet: action.timesheet }\n        case Type.CREATE_TIMESHEET_WORKINGHOUR:\n            return { ...state }\n        case Type.CREATE_TIMESHEET_SAVE_WORKINGHOUR:\n            return { ...state }\n        default:\n            return { ...state };\n    }\n};\n","import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n\n};\n\n\nconst handleLoginServerResponseSuccess = (state, action) => {\n  console.log(\"REdux\" + JSON.stringify(action));\n  let newState = { ...state };\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, { \"result\": Object.assign({}, action.result) })\n\n  }\n  console.log(\"STATE->\" + JSON.stringify(newState));\n  return { ...newState };\n\n}\nconst handleLoginServerResponseError = (state, action) => {\n  let newState = { ...state };\n  return { ...newState };\n}\n\nexport default (state = initialUserObj, action) => {\n\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, { \"loggedIn\": false, \"isValidToken\": false, \"pending\": true });\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state);\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state, action);\n\n    default:\n      return state;\n  }\n}\n","import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n    \"result\": []\n};\n\nconst handleEmployeeListError = (state, action) => {\n    let newState = { ...state };\n    return { ...newState };\n}\n\nconst handleEmployeeList = (state, action) => {\n    console.log(\"REdux\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, { \"result\": JSON.parse(JSON.stringify(action.result)) })\n        console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n\n}\n\nexport default (state = initialUserObj, action = {}) => {\n    switch (action.type) {\n        case Types.LIST_EMPLOYEE_DETAILS:\n            return { ...state }\n        case Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleEmployeeList(state, action);\n        case Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR:\n            return handleEmployeeListError(state);\n        default:\n            return state;\n\n    }\n\n}\n\n\n","import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n    result: [],\n    listOfProject: []\n};\n\nconst getEmployeeListError = state => {\n    let newState = { ...state };\n    return { ...newState };\n};\n\nconst getEmployeeList = (state, action) => {\n    //console.log(\"REdux\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, {\n            result: JSON.parse(JSON.stringify(action.result))\n        });\n        //  console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n};\n\nconst getProjectListError = state => {\n    let newState = { ...state };\n    return { ...newState };\n};\n\nconst getProjectList = (state, action) => {\n    //console.log(\"REdux\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, {\n            result: JSON.parse(JSON.stringify(action.result))\n        });\n        //  console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n};\n\nconst handleSearchEmp = (state, action) => {\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, {\n            result: JSON.parse(JSON.stringify(action.result))\n        });\n    }\n    return { ...newState };\n};\n\nconst searchError = state => {\n    let newState = { ...state };\n    return { ...newState };\n};\n\nconst handleProjectList = (state, action) => {\n    console.log(\"ListProject\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.formBody !== undefined) {\n        newState = Object.assign({}, state, {\n            listOfProject: action.formBody.projectDetails.projectDetails.projctName\n        });\n        console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n};\n\nexport default (state = initialUserObj, action = {}) => {\n    switch (action.type) {\n        case Types.GET_EMPLOYEE_LIST:\n            return { ...state };\n        case Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE:\n            return getEmployeeList(state, action);\n        case Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE:\n            return getEmployeeListError(state);\n        case Types.PROJECT_LIST:\n            return { ...state };\n        case Types.PROJECT_LIST_SUCCESS_RESPONSE:\n            return getProjectList(state, action);\n        case Types.PROJECT_LIST_ERROR_RESPONSE:\n            return getProjectListError(state);\n        case Types.SEARCH_EMP:\n            return { ...state };\n        case Types.SEARCH_EMP_SUCCESS:\n            return handleSearchEmp(state, action);\n        case Types.SEARCH_EMP_ERROR:\n            return searchError(state);\n        case Types.CREATE_PROJECT:\n            return { ...state, projectDetails: action.projectDetails };\n        case Types.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleProjectList(state, action);\n        default:\n            return state;\n    }\n};","import * as Type from \"../actions/types\";\nconst initialUserObj = {\n\n    \"result\": []\n};\n\nconst handleProjectList = (state, action) => {\n    console.log(\"ListProject\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, { \"result\": action.result })\n    }\n    return { ...newState };\n\n}\n\nconst handleCreateProject = (state, action) => {\n    //console.log(\"CreateProkect\" + JSON.stringify(action.result));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, action.result)\n    }\n    return { ...newState };\n\n}\nexport default (state = initialUserObj, action = {}) => {\n    switch (action.type) {\n        case Type.CREATE_PROJECT:\n            return { ...state, projectDetails: action.projectDetails }\n        case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleCreateProject(state, action);\n        case Type.CREATE_PROJECT_DETAILS_SERVER_RESPONSE_ERROR:\n            return { ...state }\n        case Type.DELETE_PROJECT_SUCESS:\n            const newState = state.result.filter(eachProj => eachProj._id !== action._id); // Use filter method to remoreove the item that has been deleted from the st\n            console.log(\"DELETE\" + JSON.stringify(state.result));\n            console.log(\"REducer DELETE\" + JSON.stringify(action._id));\n            console.log(\"sds\" + newState)\n            return { newState }\n        case Type.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleProjectList(state, action);\n        default:\n            return { ...state };\n    }\n};","import { combineReducers } from 'redux';\nimport CreatTimeSheet from './CreateNewRequest';\nimport auth from './auth';\nimport empList from './Employee_list';\nimport searchList from \"./Get_List\";\nimport projcetDetails from './ProjectDetails'\n// cont rootReducer = combineReducers({auth})\nexport default combineReducers({\n  auth,\n  timesheet: CreatTimeSheet,\n  empList,\n  projcetDetails,\n  searchList\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport reducers from \"../reducers/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n    middleware.push(logger);\n}\n\nconst store = createStore(reducers, applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n<BrowserRouter>\n<Provider store={store}>\n    < App />\n</Provider>\n</BrowserRouter>\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}