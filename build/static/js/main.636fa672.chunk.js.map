{"version":3,"sources":["redux/actions/types.js","redux/actions/auth.js","components/Login/index.js","components/Home/index.js","redux/actions/CreateNewRequest.js","components/TimeSheet/index.js","components/CreateNewRequest/index.js","components/messages/InlineError.js","redux/actions/home.js","components/Signup/index.js","components/AddEmployee/index.js","components/ListEmployees/index.js","components/TimeSheet_Calender/index.js","redux/actions/Get_List.js","components/Search/index.js","routes/index.js","App.js","serviceWorker.js","redux/service/index.js","redux/store/sagas.js","redux/reducers/CreateNewRequest.js","redux/reducers/auth.js","redux/reducers/Get_List.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["LOGIN_USER","LOGIN_USER_SERVER_RESPONSE_SUCCESS","SIGNUP_USER","SIGNUP_USER_SERVER_RESPONSE_SUCCESS","CREATE_TIMESHEET","CREATE_TIMESHEET_WORKINGHOUR","CREATE_TIMESHEET_SAVE_WORKINGHOUR","EMPLOYEE_SAVE_DATABASE","EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS","GET_EMPLOYEE_LIST","GET_EMPLOYEE_LIST_SUCCESS_RESPONSE","GET_EMPLOYEE_LIST_ERROR_RESPONSE","loginUser","username","password","type","Types","FormItem","Form","Item","Login","Select","Option","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","dispatch","state","data","email","form","validateFields","err","values","console","log","history","push","alert","message","isBusiness","role","loading","errors","getFieldDecorator","react_default","a","createElement","es_form","onSubmit","className","src","width","height","rules","required","input","prefix","icon","style","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Link","to","result","Component","WrappedNormalLoginForm","create","connect","auth","Header","Layout","Content","Footer","Home","handleClick","setState","current","key","layout","row","col","xs","sm","md","lg","xl","menu","onClick","selectedKeys","mode","pathname","size","margin","padding","background","minHeight","span","createRequestSubmit","timesheet","createWorkingHourTimeSheet","submitTimeSheet","createSaveTimeSheet","handlenum1Change","evt","Workingdetails","assign","timeSheetId","Math","floor","random","day","daySheet","monday","tuesday","wednesday","thursday","friday","saturday","sunday","target","name","workHours","Number","value","totalWeekWorkHours","totalWeekBillableHours","totalWeekHours","totalWeekTimeoffHours","billableHours","totalHour","timeOffHour","handlenum2Change","das","workingdetails","onSave","status","onReset","baseState","employeeId","TimeSheetDetails","comments","date","notes","TextArea","Input","dt","moment","selectWeek","day2","add","format","day3","day4","day5","day6","day7","items","map","n","totalHr","billableHr","startOf","readOnly","id","onChange","colSpan","rows","CreateNewRequest","onDropdownChange","i","jobTitle","viewTimesheet","onSelectWeekChange","valueOf","error","endClient","client","approver","endDate","projectId","WeekPicker","DatePicker","CreateNewRequest_Header","CreateNewRequest_Content","card","CreateNewRequest_FormItem","label","hasFeedback","es_select","CreateNewRequest_Option","defaultValue","s","TimeSheet","InlineError","_ref","text","signupUser","user","addEmployee","Signup","objectSpread","defineProperty","validate","keys","length","_this$state$data","firstName","lastName","phoneNumber","confirmPassword","Validator","isEmail","_this$state","title","messages_InlineError","userObject","AddEmployee","primaryEmail","secondaryEmail","address","jobCode","startDate","vendor","projectName","managerName","approverName","SecondaryEmail","AddEmployee_Header","ListEmployees","ListEmployees_Header","TimeSheet_Calander","calendar","onPanelChange","searchEmp","Search","onSearch","data1","Array","from","empList","Search_Header","Search_Content","list","header","bordered","dataSource","renderItem","item","routes","BrowserRouter","Switch","Route","exact","path","render","components_Login","components_Home","components_Signup","components_AddEmployee","TimeSheet_Calender_TimeSheet_Calander","components_ListEmployees","components_CreateNewRequest","components_Search","Redirect","App","userHasAuthenticated","authenticated","isAuthenticated","childProps","Boolean","window","location","hostname","match","GetDataFromServer","apiPath","reqMethod","formBody","myHeaders","Headers","append","fetch","method","headers","fetchData","body","JSON","stringify","fetchLoginUser","fetchTimeSheet","fetchTimeSheetCalander","fetchSaveTimeSheetCalander","signUpUser","saveEmployee","searchEmployee","rootSaga","action","response","regenerator_default","wrap","_context","prev","next","sent","json","put","t0","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","loginUrl","_context7","concat","_marked7","params","_context8","takeEvery","_marked8","initialUserObj","signUpUsersList","pending","loggedIn","isValidToken","empDetails","displayName","registered","refreshToken","expiresIn","emailVerified","validSince","disabled","lastLoginAt","createdAt","combineReducers","arguments","undefined","newState","handleLoginServerResponseError","handleLoginServerResponseSuccess","Type","parse","getEmployeeList","getEmployeeListError","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","reducers","applyMiddleware","apply","run","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.636fa672.chunk.js","sourcesContent":["export const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_USER_SERVER_RESPONSE_ERROR =\r\n  \"LOGIN_USER_SERVER_RESPONSE_ERROR\";\r\nexport const LOGIN_USER_SERVER_RESPONSE_SUCCESS =\r\n  \"LOGIN_USER_SERVER_RESPONSE_SUCCESS\";\r\nexport const VALIDATE_USER_SERVER_RESPONSE_ERROR =\r\n  \"VALIDATE_USER_SERVER_RESPONSE_ERROR\";\r\nexport const VALIDATE_USER_SERVER_RESPONSE_SUCCESS =\r\n  \"VALIDATE_USER_SERVER_RESPONSE_SUCCESS\";\r\n\r\nexport const SERVER_CALL_FAILED = \"SERVER_CALL_FAILED\";\r\n\r\nexport const SIGNUP_USER = \"SIGNUP_USER\";\r\nexport const SIGNUP_USER_SERVER_RESPONSE_ERROR =\r\n  \"SIGNUP_USER_SERVER_RESPONSE_ERROR\";\r\nexport const SIGNUP_USER_SERVER_RESPONSE_SUCCESS =\r\n  \"SIGNUP_USER_SERVER_RESPONSE_SUCCESS\";\r\n\r\nexport const GET_USERS_LIST = \"GET_USERS_LIST\";\r\nexport const GET_USERS_LIST_SUCCESS_RESPONSE =\r\n  \"GET_USERS_LIST_SUCCESS_RESPONSE\";\r\nexport const GET_USERS_LIST_ERROR_RESPONSE = \"GET_USERS_LIST_ERROR_RESPONSE\";\r\n\r\nexport const GET_USERS_LIST_SERVER_RESPONSE_SUCCESS =\r\n  \"GET_USERS_LIST_SERVER_RESPONSE_SUCCESS\";\r\n\r\nexport const CREATE_TIMESHEET = \"CREATE_TIMESHEET\";\r\nexport const CREATE_TIMESHEET_WORKINGHOUR = \"CREATE_TIMESHEET_WORKINGHOUR\";\r\nexport const CREATE_TIMESHEET_SAVE_WORKINGHOUR =\r\n  \"CREATE_TIMESHEET_SAVE_WORKINGHOUR\";\r\n\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const LOGOUT_USER_SERVER_RESPONSE_SUCCESS =\r\n  \"LOGOUT_USER_SERVER_RESPONSE_SUCCESS\";\r\nexport const LOGOUT_USER_SERVER_REPONSE_ERROR =\r\n  \"LOGOUT_USER_SERVER_REPONSE_ERROR\";\r\n\r\nexport const IS_USER_LOGGED_IN = \"IS_USER_LOGGED_IN\";\r\nexport const VALIDATE_TOKEN_SERVER_RESPONSE_SUCCESS =\r\n  \"VALIDATE_TOKEN_SERVER_RESPONSE_SUCCESS\";\r\nexport const VALIDATE_TOKEN_SERVER_REPONSE_ERROR =\r\n  \"VALIDATE_TOKEN_SERVER_REPONSE_ERROR\";\r\n\r\nexport const SIGNUP_SAVE_DATABASE = \"SIGNUP_SAVE_DATABASE\";\r\nexport const SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS =\r\n  \"SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS\";\r\nexport const SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_ERROR =\r\n  \"SIGNUP_SAVE_DATABASE_SERVER_RESPONSE_ERROR\";\r\n\r\nexport const EMPLOYEE_SAVE_DATABASE = \"EMPLOYEE_SAVE_DATABASE\";\r\nexport const EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS =\r\n  \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS\";\r\nexport const EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR =\r\n  \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\";\r\n\r\nexport const GET_EMPLOYEE_LIST = \"GET_EMPLOYEE_LIST\";\r\nexport const GET_EMPLOYEE_LIST_SUCCESS_RESPONSE =\r\n  \"GET_EMPLOYEE_LIST_SUCCESS_RESPONSE\";\r\nexport const GET_EMPLOYEE_LIST_ERROR_RESPONSE =\r\n  \"GET_EMPLOYEE_LIST_ERROR_RESPONSE\";\r\n","import * as Types from \"./types\";\r\n\r\nconst initialUserObj = {\r\n  \"signUpUsersList\":[],\r\n  \"pending\": false,\r\n  \"loggedIn\": false,\r\n  \"isValidToken\": false,\r\n  \"isBusiness\": false,\r\n  \"empDetails\": {},\r\n  \"result\":{},\r\n  \"user\":{ \"email\": \"\",\r\n           \"displayName\": \"\",\r\n           \"registered\": false,\r\n           \"refreshToken\": \"\",\r\n           \"expiresIn\": \"\",\r\n           \"emailVerified\": false,\r\n           \"validSince\": \"\",\r\n           \"disabled\": false,\r\n           \"lastLoginAt\": \"\",\r\n           \"createdAt\": \"\"}\r\n\r\n};\r\n\r\n\r\nconst handleLoginServerResponseSuccess = (state, action) => {\r\n  let newState = {...state};\r\n  if(action.result !== undefined){\r\n    newState = Object.assign({}, state, {\"result\" : Object.assign({}, action.result)})\r\n    \r\n  }\r\n  return {...newState};\r\n}\r\nconst handleLoginServerResponseError = (state, action) => {\r\n  let newState = {...state};\r\n  return {...newState};\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n\r\n  return {\r\n    type: Types.LOGIN_USER,\r\n    username,\r\n    password\r\n  }\r\n}\r\n\r\nexport default (state = initialUserObj, action) => {\r\n    switch(action.type){\r\n        case Types.LOGIN_USER :\r\n            return Object.assign({}, state,{ \"loggedIn\" :false,\"isValidToken\":false, \"pending\":true});\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_ERROR :\r\n                return handleLoginServerResponseError(state, action);\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS :\r\n                return handleLoginServerResponseSuccess(state, action);       \r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport const validateUserSuccess = response => ({\r\n  type: Types.VALIDATE_USER_SERVER_RESPONSE_SUCCESS,\r\n  response\r\n});\r\n\r\nexport const validateUserFailure = response => ({\r\n  type: Types.VALIDATE_USER_SERVER_RESPONSE_ERROR,\r\n  response\r\n});\r\n\r\nexport const getUsersList = () => ({\r\n  type:Types.GET_USERS_LIST  \r\n});\r\n\r\nexport const getUsersListSuccessResponse = (response) => ({\r\n  type:Types.GET_USERS_LIST_SERVER_RESPONSE_SUCCESS,\r\n  response  \r\n})\r\n\r\n\r\nexport const logoutUserSuccess = response => ({\r\n  type: Types.LOGOUT_USER_SERVER_RESPONSE_SUCCESS,\r\n  response\r\n});\r\n\r\nexport const logoutUserFailure = response => ({\r\n  type: Types.LOGOUT_USER_SERVER_REPONSE_ERROR,\r\n  response\r\n});\r\n\r\n\r\nexport const isUserLoggedIn = () => ({\r\n  type: Types.IS_USER_LOGGED_IN\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button, Select, Checkbox, Icon } from \"antd\";\r\nimport { loginUser } from \"../../redux/actions/auth\";\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // defining the state to the component\r\n    this.state = {\r\n      data: {\r\n        email: \"\",\r\n        password: \"\",\r\n        isBusiness: true,\r\n        role: \"3\"\r\n      },\r\n      loading: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(props.result);\r\n\r\n    return null;\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.dispatch(\r\n      loginUser(this.state.data.email, this.state.data.password)\r\n    );\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n\r\n      try {\r\n        this.props.history.push(\"/home\");\r\n      } catch (e) {\r\n        alert(e.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <centre>\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <div>\r\n            <img\r\n              src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\r\n              width=\"200px\"\r\n              height=\"60px\"\r\n            />\r\n            <br />\r\n          </div>\r\n          <FormItem>\r\n            {getFieldDecorator(\"userName\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your username!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"Username\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [\r\n                { required: true, message: \"Please input your Password!\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem>\r\n            {getFieldDecorator(\"remember\", {\r\n              valuePropName: \"checked\",\r\n              initialValue: true\r\n            })(<Checkbox>Remember me</Checkbox>)}\r\n            <a className=\"login-form-forgot\" href=\"\">\r\n              Forgot password\r\n            </a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            Or <Link to=\"/signup\">Sign Up</Link>\r\n          </FormItem>\r\n        </Form>\r\n      </centre>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    result: state.auth.result\r\n  };\r\n};\r\nconst WrappedNormalLoginForm = Form.create()(Login);\r\n\r\n//ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\r\n\r\nexport default connect(mapStateToProps)(WrappedNormalLoginForm);\r\n\r\n//export default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button, Layout, Row, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: \"mail\"\r\n    };\r\n  }\r\n  handleClick = e => {\r\n    console.log(\"click \", e);\r\n    this.setState({\r\n      current: e.key\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Header>\r\n            <Row>\r\n              <Col xs={22} sm={22} md={22} lg={22} xl={22}>\r\n                <Menu\r\n                  onClick={this.handleClick}\r\n                  selectedKeys={[this.state.current]}\r\n                  mode=\"horizontal\"\r\n                >\r\n                  <Menu.Item>\r\n                    <Link to={{ pathname: \"/home\" }}>\r\n                      {\" \"}\r\n                      <img\r\n                        src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\r\n                        width=\"200px\"\r\n                        height=\"60px\"\r\n                      />\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"mail\">\r\n                    <Link to={{ pathname: \"/home\" }}>\r\n                      <Icon type=\"mail\" />\r\n                      Home\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"timesheet\">\r\n                    <Link to={{ pathname: \"/createNewRequest\" }}>\r\n                      <Icon type=\"clock-circle\" />\r\n                      Time Sheet\r\n                    </Link>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Col>\r\n              <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n                <Link to={{ pathname: \"/login\" }}>\r\n                  {\" \"}\r\n                  <Button size=\"large\">\r\n                    <Icon type=\"logout\" />\r\n                    Logout\r\n                  </Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              background: \"#fff\",\r\n              minHeight: 580\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col span={8}>\r\n                {\" \"}\r\n                <Link to={{ pathname: \"/TimeSheetCalander\" }}>\r\n                  Monthly Timesheet{\" \"}\r\n                </Link>{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col span={8}>\r\n                {\" \"}\r\n                <Link to={{ pathname: \"/addEmployee\" }}>Add Employee</Link>{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col span={8}>\r\n                {\" \"}\r\n                <Link to={{ pathname: \"/listEmployees\" }}>\r\n                  List of SignUp Employees\r\n                </Link>{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col span={8}>\r\n                {\" \"}\r\n                <Link to={{ pathname: \"/search\" }}>\r\n                  Search Employee\r\n                </Link>{\" \"}\r\n              </Col>\r\n            </Row>\r\n          </Content>\r\n\r\n          <Footer>\r\n            <center>\r\n              <Icon type=\"copyright\" />\r\n              Reliable Software 2018\r\n            </center>\r\n          </Footer>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as Types from \"./types\";\r\n\r\nexport const createRequestSubmit = timesheet => {\r\n  return {\r\n    type: Types.CREATE_TIMESHEET,\r\n    timesheet\r\n  };\r\n};\r\nexport const createWorkingHourTimeSheet = submitTimeSheet => {\r\n  return {\r\n    type: Types.CREATE_TIMESHEET_WORKINGHOUR,\r\n    submitTimeSheet\r\n  };\r\n};\r\n\r\nexport const createSaveTimeSheet = submitTimeSheet => {\r\n  return {\r\n    type: Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR,\r\n    submitTimeSheet\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { createWorkingHourTimeSheet } from \"../../redux/actions/CreateNewRequest\";\r\nimport { createSaveTimeSheet } from \"../../redux/actions/CreateNewRequest\";\r\n\r\nclass timesheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Workingdetails: {\r\n        employeeId: this.props.timesheet.timesheet.TimeSheetDetails.employeeId,\r\n        timeSheetId: \"\",\r\n        totalWeekWorkHours: \"0\",\r\n        totalWeekBillableHours: \"0\",\r\n        totalWeekTimeoffHours: \"0\",\r\n        totalWeekHours: \"0\",\r\n        comments: \"\",\r\n        status: \"false\",\r\n        daySheet: [\r\n          {\r\n            day: \"monday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"tuesday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"0\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"wednesday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"thursday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"friday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"saturday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          },\r\n          {\r\n            day: \"sunday\",\r\n            workHours: \"0\",\r\n            timeOffHour: \"0\",\r\n            date: \"Test\",\r\n            billableHours: \"0\",\r\n            totalHour: \"0\",\r\n            notes: \"Test\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handlenum1Change = evt => {\r\n    const dayArray = {\r\n      monday: 0,\r\n      tuesday: 1,\r\n      wednesday: 2,\r\n      thursday: 3,\r\n      friday: 4,\r\n      saturday: 5,\r\n      sunday: 6\r\n    };\r\n    let Workingdetails = Object.assign({}, this.state.Workingdetails);\r\n    Workingdetails.timeSheetId = Math.floor(Math.random() * 100 + 2);\r\n    //      let workinghours = Object.assign({}, this.state.workinghours);\r\n    //let day = workinghours[evt.target.name]\r\n    let day = Workingdetails.daySheet[dayArray[evt.target.name]];\r\n    //console.log(\"HA\" + JSON.stringify(day));\r\n\r\n    day.workHours = Number(evt.target.value);\r\n    Workingdetails.totalWeekWorkHours =\r\n      Number(Workingdetails.totalWeekWorkHours) + Number(evt.target.value);\r\n    Workingdetails.totalWeekBillableHours = Workingdetails.totalWeekWorkHours;\r\n    Workingdetails.totalWeekHours =\r\n      Number(Workingdetails.totalWeekWorkHours) +\r\n      Number(Workingdetails.totalWeekTimeoffHours);\r\n    day.billableHours = Number(evt.target.value);\r\n    day.totalHour = Number(day.timeOffHour) + Number(evt.target.value);\r\n\r\n    return this.setState({ Workingdetails });\r\n    // let Workingdetails = Object.assign({}, this.state.Workingdetails);\r\n    // let workinghours = Object.assign({}, this.state.workinghours);\r\n    // let day = workinghours[evt.target.name]\r\n    // day.workHours = Number(evt.target.value);\r\n    // Workingdetails.totalWeekWorkHours = Number(Workingdetails.totalWeekWorkHours) + Number(evt.target.value);\r\n    // Workingdetails.totalWeekBillableHours = Workingdetails.totalWeekWorkHours;\r\n    // Workingdetails.totalWeekHours = Number(Workingdetails.totalWeekWorkHours) + Number(Workingdetails.totalWeekTimeoffHours);\r\n    // day.billableHours = Number(evt.target.value);\r\n    // day.totalHour = Number(day.timeOffHour) + Number(evt.target.value);;\r\n\r\n    // return this.setState({ workinghours, Workingdetails });\r\n  };\r\n\r\n  handlenum2Change = evt => {\r\n    const dayArray = {\r\n      monday: 0,\r\n      tuesday: 1,\r\n      wednesday: 2,\r\n      thursday: 3,\r\n      friday: 4,\r\n      saturday: 5,\r\n      sunday: 6\r\n    };\r\n\r\n    let Workingdetails = Object.assign({}, this.state.Workingdetails);\r\n    //let workinghours = Object.assign({}, this.state.workinghours);\r\n    // let day = workinghours[evt.target.name];\r\n    let day = Workingdetails.daySheet[dayArray[evt.target.name]];\r\n    day.timeOffHour = Number(evt.target.value);\r\n    Workingdetails.totalWeekTimeoffHours =\r\n      Number(Workingdetails.totalWeekTimeoffHours) + Number(evt.target.value);\r\n    day.totalHour = Number(day.workHours) + Number(evt.target.value);\r\n    return this.setState({ Workingdetails });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    console.log(\"dad\" + this.state.das);\r\n    let data = {};\r\n    //data.workinghours = this.state.workinghours;\r\n    data.workingdetails = this.state.Workingdetails;\r\n\r\n    this.props.dispatch(createWorkingHourTimeSheet(data));\r\n    console.log(\"Submit click\");\r\n  };\r\n  onSave = () => {\r\n    console.log(\"dad\" + this.state.das);\r\n    let data = {};\r\n    // data.workinghours = this.state.workinghours;\r\n    data.workingdetails = this.state.Workingdetails;\r\n\r\n    data.workingdetails.status = this.state.Workingdetails.status = \"true\";\r\n    this.props.dispatch(createSaveTimeSheet(data));\r\n    console.log(\"Save click\");\r\n  };\r\n  onReset = () => {\r\n    this.setState(this.baseState);\r\n  };\r\n\r\n  render() {\r\n    const { TextArea } = Input;\r\n    let employeeId = this.props.timesheet.timesheet.TimeSheetDetails.employeeId;\r\n    console.log(\"Employee\" + employeeId);\r\n    let dt = moment(this.props.timesheet.timesheet.TimeSheetDetails.selectWeek);\r\n    let day2 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    let day3 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    let day4 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    let day5 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    let day6 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    let day7 = dt.add(1, \"days\").format(\"DD-MMM\");\r\n    const days = [\"mon\", \"tue\", \"wed\", \"thur\", \"fri\", \"sat\", \"sun\"];\r\n    const items = days.map(n => {\r\n      const obj = { totalHr: \"0\", billableHr: \"0\" };\r\n      return obj;\r\n    });\r\n\r\n    console.log(items);\r\n\r\n    return (\r\n      <Form>\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Week</th>\r\n              <th>\r\n                Mon{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  value={dt.startOf(\"week\").format(\"DD-MMM\")}\r\n                  readOnly\r\n                />{\" \"}\r\n              </th>\r\n              <th>\r\n                Tue <input type=\"text\" value={day2} readOnly />\r\n              </th>\r\n              <th>\r\n                Wed <input type=\"text\" value={day3} readOnly />\r\n              </th>\r\n              <th>\r\n                Thur <input type=\"text\" value={day4} readOnly />\r\n              </th>\r\n              <th>\r\n                Fri <input type=\"text\" value={day5} readOnly />\r\n              </th>\r\n              <th>\r\n                Sat <input type=\"text\" value={day6} readOnly />\r\n              </th>\r\n              <th>\r\n                Sun <input type=\"text\" value={day7} readOnly />\r\n              </th>\r\n              <th>TotalHr</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Hour Claim</td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"monday\"\r\n                  id=\"hMon\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"tuesday\"\r\n                  id=\"hTue\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"wednesday\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"thursday\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"friday\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"saturday\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Hr\"\r\n                  name=\"sunday\"\r\n                  onChange={this.handlenum1Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.totalWeekWorkHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Time Off</td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"monday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"tuesday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"wednesday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"thursday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"friday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"saturday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Input\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Time Off\"\r\n                  name=\"sunday\"\r\n                  onChange={this.handlenum2Change}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.totalWeekTimeoffHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Bill</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[0].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[1].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[2].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[3].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[4].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[5].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[6].billableHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.totalWeekWorkHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Hours</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[0].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[1].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[2].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[3].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[4].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[5].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.daySheet[6].totalHour}\r\n                  readOnly\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={this.state.Workingdetails.totalWeekHours}\r\n                  readOnly\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td />\r\n            </tr>\r\n            <tr>\r\n              <td>Notes</td>\r\n              <td width=\"400\" colSpan=\"8\">\r\n                <TextArea rows={4} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"3\" />\r\n              <td>\r\n                <Button type=\"primary\" onClick={this.onSave}>\r\n                  Save\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button type=\"primary\" onClick={this.onSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button type=\"primary\" onClick={this.onReset}>\r\n                  Reset\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state);\r\n  return {\r\n    timesheet: state.timesheet\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(timesheet);\r\n\r\n//export default timesheet;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  Card,\r\n  Select\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { createRequestSubmit } from \"../../redux/actions/CreateNewRequest\";\r\n//import { createWorkingHourTimeSheet } from \"../../redux/actions/CreateNewRequest\";\r\nimport { connect } from \"react-redux\";\r\nimport TimeSheet from \"../TimeSheet/index\";\r\nconst Option = Select.Option;\r\nconst { Header, Content } = Layout;\r\nconst FormItem = Form.Item;\r\n\r\n// function onChange(date, dateString) {\r\n//     console.log(date, dateString);\r\n// }\r\nclass CreateNewRequest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewTimesheet: false,\r\n      error: \"\",\r\n\r\n      TimeSheetDetails: {\r\n        //  reqId: moment().valueOf(),\r\n        selectWeek: \"\",\r\n        jobTitle: \"Full Stack\",\r\n        endClient: \"N/A\",\r\n        client: \"Inhouse\",\r\n        approver: \"Amar Shah\",\r\n        endDate: \"12/31/2018\",\r\n        projectId: \"Test\",\r\n        employeeId: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  onDropdownChange = (e, i) => {\r\n    console.log(\"DDL\" + e);\r\n    let TimeSheetDetails = Object.assign({}, this.state.TimeSheetDetails);\r\n    TimeSheetDetails.jobTitle = e;\r\n    return this.setState({ TimeSheetDetails });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState({ viewTimesheet: !this.state.viewTimesheet });\r\n    let data = {};\r\n    data.TimeSheetDetails = this.state.TimeSheetDetails;\r\n    data.TimeSheetDetails.employeeId = Math.floor(Math.random() * 100 + 1);\r\n    console.log(\"Details for time sheet details\", data.TimeSheetDetails);\r\n    //  data.reqId = this.state.TimeSheetDetails.reqId;\r\n    this.props.dispatch(createRequestSubmit(data));\r\n    //this.props.dispatch(createWorkingHourTimeSheet(data));\r\n    console.log(\"Submit click\");\r\n  };\r\n\r\n  onSelectWeekChange = (e, date) => {\r\n    console.log(\"select week change\", e);\r\n    console.log(\"date\" + date);\r\n    let TimeSheetDetails = Object.assign({}, this.state.TimeSheetDetails);\r\n    TimeSheetDetails[\"selectWeek\"] = moment(e).valueOf();\r\n    return this.setState({ TimeSheetDetails });\r\n  };\r\n\r\n  render() {\r\n    const { WeekPicker } = DatePicker;\r\n    // const weekpicker = DatePicker.WeekPicker;\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Header>\r\n            <Row>\r\n              <Col xs={6} sm={6} md={6} lg={6} xl={6} />\r\n              <Col xs={14} sm={14} md={14} lg={14} xl={14}>\r\n                <h3>CREATE NEW REQUEST</h3>\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content>\r\n            <Form layout=\"inline\">\r\n              <Row>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card>\r\n                    CLIENT:\r\n                    <div> {this.state.TimeSheetDetails.client}</div>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card>\r\n                    APPROVER(S):\r\n                    <div> {this.state.TimeSheetDetails.approver}</div>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card>\r\n                    JOB END DATE:\r\n                    <div> {this.state.TimeSheetDetails.endDate}</div>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card>\r\n                    END CLIENT:\r\n                    <div> {this.state.TimeSheetDetails.endClient}</div>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card>\r\n                    PROJECT:\r\n                    <div> {this.state.TimeSheetDetails.projectId}</div>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\r\n                  <Card />\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                  <Card>\r\n                    <FormItem label=\"Job\" hasFeedback>\r\n                      <Select\r\n                        id=\"jobTitle\"\r\n                        name=\"jobTitle\"\r\n                        value={this.state.TimeSheetDetails.jobTitle}\r\n                        onChange={this.onDropdownChange}\r\n                      >\r\n                        <Option value=\"Java Developer\">Java Developer</Option>\r\n                        <Option value=\"Full Stack\">Full Stack</Option>\r\n                        <Option value=\"Data Analyst\">Data Analyst</Option>\r\n                      </Select>\r\n                    </FormItem>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                  <Card>\r\n                    <FormItem label=\"Week Picker\" hasFeedback>\r\n                      <WeekPicker\r\n                        onChange={this.onSelectWeekChange}\r\n                        defaultValue={this.state.TimeSheetDetails.selectWeek}\r\n                        placeholder=\"Select week\"\r\n                      />\r\n                    </FormItem>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col s={24} sm={24} md={24} lg={24} xl={24}>\r\n                  <Card>\r\n                    <Button type=\"primary\" onClick={this.onSubmit}>\r\n                      Submit\r\n                    </Button>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n\r\n            <div>{this.state.viewTimesheet && <TimeSheet />}</div>\r\n          </Content>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n\r\n//         isTaskCreated: state.createTask.isTaskCreated\r\n//     };\r\n// };\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(CreateNewRequest);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InlineError = ({ text }) => (\r\n  <span style={{ color: \"#ae5856\" }}>{text}</span>\r\n);\r\n\r\nInlineError.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InlineError;\r\n","import * as Types from \"./types\";\r\n\r\nexport const signupUser = user => ({\r\n  type: Types.SIGNUP_USER,\r\n  user\r\n});\r\n\r\nexport const addEmployee = user => ({\r\n  type: Types.EMPLOYEE_SAVE_DATABASE,\r\n  user\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Validator from \"validator\";\r\nimport { Form, Input, Row, Col, Button, Card } from \"antd\";\r\nimport InlineError from \"../messages/InlineError\";\r\nimport { signupUser } from \"../../redux/actions/home\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      },\r\n      loading: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  onSubmit = e => {\r\n    const errors = this.validate(this.state.data);\r\n    this.setState({ errors });\r\n    if (Object.keys(errors).length === 0) {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        email,\r\n        password,\r\n        confirmPassword\r\n      } = this.state.data;\r\n      this.props.dispatch(\r\n        signupUser({\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          phoneNumber: phoneNumber,\r\n          email: email,\r\n          password: password,\r\n          confirmPassword: confirmPassword\r\n        })\r\n      );\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  validate = data => {\r\n    const errors = {};\r\n    if (!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\r\n    if (!data.password) errors.password = \"Can't be empty\";\r\n    if (!data.firstName) errors.firstName = \"Can't be empty\";\r\n    if (!data.lastName) errors.lastName = \"Can't be empty\";\r\n    if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\r\n    if (data.password !== data.confirmPassword)\r\n      errors.confirmPassword = \"Write the same password\";\r\n    return errors;\r\n  };\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <Card title=\"Signup\">\r\n          <Form>\r\n            <Row>\r\n              <Col xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                <Form.Item error={!!errors.firstName}>\r\n                  <Input\r\n                    id=\"firstName\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={data.firstName}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                  {errors.firstName && <InlineError text={errors.firstName} />}\r\n                </Form.Item>\r\n                <Form.Item error={!!errors.lastName}>\r\n                  <Input\r\n                    id=\"lastName\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={data.lastName}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                  {errors.lastName && <InlineError text={errors.lastName} />}\r\n                </Form.Item>\r\n                <Form.Item error={!!errors.phoneNumber}>\r\n                  <Input\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    type=\"tel\"\r\n                    placeholder=\"10 Digits Phone number\"\r\n                    value={data.phoneNumber}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.phoneNumber && (\r\n                    <InlineError text={errors.phoneNumber} />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item error={!!errors.email}>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"email@rsrit.com\"\r\n                  />\r\n                  {errors.email && <InlineError text={errors.email} />}\r\n                </Form.Item>\r\n                <Form.Item error={!!errors.password}>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Password (Make it Secure)\"\r\n                  />\r\n                  {errors.password && <InlineError text={errors.password} />}\r\n                </Form.Item>\r\n                <Form.Item error={!!errors.confirmPassword}>\r\n                  <Input\r\n                    id=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={data.confirmPassword}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Same as Password\"\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <InlineError text={errors.confirmPassword} />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <br />\r\n                <br />\r\n                <Button type=\"primary\" onClick={this.onSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignup.propTypes = {};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userObject: state.auth.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Validator from \"validator\";\r\nimport { Menu, Icon, Form, Layout, Row, Input, Button, Card, Col } from \"antd\";\r\nimport InlineError from \"../messages/InlineError\";\r\nimport { addEmployee } from \"../../redux/actions/home\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Header } = Layout;\r\n\r\nclass AddEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        primaryEmail: \"\",\r\n        SecondaryEmail: \"\",\r\n        address: \"\",\r\n        jobCode: \"\",\r\n        jobTitle: \"\",\r\n        endClient: \"\",\r\n        startDate: \"\",\r\n        vendor: \"\",\r\n        projectId: \"\",\r\n        projectName: \"\",\r\n        managerName: \"\",\r\n        approverName: \"\"\r\n      },\r\n      loading: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  onSubmit = e => {\r\n    const errors = this.validate(this.state.data);\r\n    this.setState({ errors });\r\n    if (Object.keys(errors).length === 0) {\r\n      const {\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        primaryEmail,\r\n        secondaryEmail,\r\n        address,\r\n        jobCode,\r\n        jobTitle,\r\n        endClient,\r\n        startDate,\r\n        vendor,\r\n        projectId,\r\n        projectName,\r\n        managerName,\r\n        approverName\r\n      } = this.state.data;\r\n      this.props.dispatch(\r\n        addEmployee({\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          phoneNumber: phoneNumber,\r\n          primaryEmail: primaryEmail,\r\n          SecondaryEmail: secondaryEmail,\r\n          address: address,\r\n          jobCode: jobCode,\r\n          jobTitle: jobTitle,\r\n          endClient: endClient,\r\n          startDate: startDate,\r\n          vendor: vendor,\r\n          projectId: projectId,\r\n          projectName: projectName,\r\n          managerName: managerName,\r\n          approverName: approverName\r\n        })\r\n      );\r\n\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  validate = data => {\r\n    const errors = {};\r\n    if (!Validator.isEmail(data.primaryEmail))\r\n      errors.primaryEmail = \"Invalid Email\";\r\n    if (!data.firstName) errors.firstName = \"Can't be empty\";\r\n    if (!data.lastName) errors.lastName = \"Can't be empty\";\r\n    if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\r\n    if (!data.approverName) errors.approverName = \"Can't be empty\";\r\n    if (!data.managerName) errors.managerName = \"Can't be empty\";\r\n    return errors;\r\n  };\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Row>\r\n            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\r\n              <Menu\r\n                onClick={this.handleClick}\r\n                selectedKeys={[this.state.current]}\r\n                mode=\"horizontal\"\r\n              >\r\n                <Menu.Item>\r\n                  <Link to={{ pathname: \"/home\" }}>\r\n                    {\" \"}\r\n                    <img\r\n                      src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\r\n                      width=\"200px\"\r\n                      height=\"60px\"\r\n                    />\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"mail\">\r\n                  <Link to={{ pathname: \"/home\" }}>\r\n                    <Icon type=\"mail\" />\r\n                    Home\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"timesheet\">\r\n                  <Link to={{ pathname: \"/createNewRequest\" }}>\r\n                    <Icon type=\"clock-circle\" />\r\n                    Time Sheet\r\n                  </Link>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Col>\r\n            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Link to={{ pathname: \"/login\" }}>\r\n                {\" \"}\r\n                <Button size=\"large\">\r\n                  <Icon type=\"logout\" />\r\n                  Logout\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n        <Card title=\"Add Employee\">\r\n          <Form>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.firstName}>\r\n                <h3>First Name</h3>\r\n                <Input\r\n                  id=\"firstName\"\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={data.firstName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Name\"\r\n                />\r\n                {errors.firstName && <InlineError text={errors.firstName} />}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.lastName}>\r\n                <h3>Last Name</h3>\r\n                <Input\r\n                  id=\"lastName\"\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={data.lastName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Last Name\"\r\n                />\r\n                {errors.lastName && <InlineError text={errors.lastName} />}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.phoneNumber}>\r\n                <h3>Phone Number</h3>\r\n                <Input\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  type=\"tel\"\r\n                  placeholder=\"10 Digits Phone number\"\r\n                  value={data.phoneNumber}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.phoneNumber && (\r\n                  <InlineError text={errors.phoneNumber} />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.primaryEmail}>\r\n                <h3>Primary Email</h3>\r\n                <Input\r\n                  id=\"primaryEmail\"\r\n                  type=\"email\"\r\n                  name=\"primaryEmail\"\r\n                  value={data.primaryEmail}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"email@rsrit.com\"\r\n                />\r\n                {errors.primaryEmail && <InlineError text={errors.email} />}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Secondary Email</h3>\r\n                <Input\r\n                  id=\"secondaryEmail\"\r\n                  type=\"email\"\r\n                  name=\"secondaryEmail\"\r\n                  value={data.secondaryEmail}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"email@gmail.com\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Address</h3>\r\n                <Input\r\n                  id=\"address\"\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  value={data.address}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Current Address\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Job Code</h3>\r\n                <Input\r\n                  id=\"jobCode\"\r\n                  type=\"text\"\r\n                  name=\"jobCode\"\r\n                  value={data.jobCode}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Job code\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Job Title</h3>\r\n                <Input\r\n                  id=\"jobTitle\"\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  value={data.jobTitle}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Job Title\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>End Client</h3>\r\n                <Input\r\n                  id=\"endClient\"\r\n                  type=\"text\"\r\n                  name=\"endClient\"\r\n                  value={data.endClient}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter End Client Name\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Start Date</h3>\r\n                <Input\r\n                  id=\"startDate\"\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  value={data.startDate}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter the Date of Joining\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Vendor</h3>\r\n                <Input\r\n                  id=\"vendor\"\r\n                  type=\"text\"\r\n                  name=\"vendor\"\r\n                  value={data.vendor}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Vendor Name\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Project ID</h3>\r\n                <Input\r\n                  id=\"projectId\"\r\n                  type=\"text\"\r\n                  name=\"projectId\"\r\n                  value={data.projectId}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter ID of Project\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item>\r\n                <h3>Project Name</h3>\r\n                <Input\r\n                  id=\"ProjectName\"\r\n                  type=\"text\"\r\n                  name=\"projectName\"\r\n                  value={data.projectName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Name of Project\"\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.managerName}>\r\n                <h3>Manager Name</h3>\r\n                <Input\r\n                  id=\"managerName\"\r\n                  type=\"text\"\r\n                  name=\"managerName\"\r\n                  value={data.managerName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Person who manages the Employee\"\r\n                />\r\n                {errors.managerName && (\r\n                  <InlineError text={errors.managerName} />\r\n                )}\r\n              </Form.Item>\r\n              <br />\r\n              <Button type=\"primary\" onClick={this.onSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n            <Col span={6}>\r\n              <Form.Item error={!!errors.approverName}>\r\n                <h3>Approver Name</h3>\r\n                <Input\r\n                  id=\"approverName\"\r\n                  type=\"text\"\r\n                  name=\"approverName\"\r\n                  value={data.approverName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Person who approved the Employee\"\r\n                />\r\n                {errors.approverName && (\r\n                  <InlineError text={errors.approverName} />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEmployee.propTypes = {};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userObject: state.auth.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddEmployee);\r\n","import React, { Component } from \"react\";\r\nimport { Menu, Button, Icon, Col, Layout } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Header } = Layout;\r\n\r\nclass ListEmployees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: \"mail\"\r\n    };\r\n  }\r\n  handleClick = e => {\r\n    console.log(\"click \", e);\r\n    this.setState({\r\n      current: e.key\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Header>\r\n            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\r\n              <Menu\r\n                onClick={this.handleClick}\r\n                selectedKeys={[this.state.current]}\r\n                mode=\"horizontal\"\r\n              >\r\n                <Menu.Item>\r\n                  <Link to={{ pathname: \"/home\" }}>\r\n                    {\" \"}\r\n                    <img\r\n                      src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\r\n                      width=\"200px\"\r\n                      height=\"60px\"\r\n                    />\r\n                  </Link>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Col>\r\n            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n              <Link to={{ pathname: \"/login\" }}>\r\n                {\" \"}\r\n                <Button size=\"large\">\r\n                  <Icon type=\"logout\" />\r\n                  Logout\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Header>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ListEmployees;\r\n","import React, { Component } from \"react\";\r\nimport { Calendar } from \"antd\";\r\n\r\nexport default class TimeSheet_Calander extends Component {\r\n  render() {\r\n    function onPanelChange(value, mode) {\r\n      console.log(value, mode);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Calendar onPanelChange={onPanelChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as Types from \"./types\";\r\n\r\nexport const searchEmp = result => ({\r\n  type: Types.GET_EMPLOYEE_LIST,\r\n  result\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, List, Form, Input, Menu, Button, Icon, Col, Layout } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InlineError from \"../messages/InlineError\";\r\nimport { searchEmp } from \"../../redux/actions/Get_List\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: \"mail\",\r\n      data: {\r\n        firstName: \"\"\r\n      },\r\n      loading: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  handleClick = e => {\r\n    console.log(\"click \", e);\r\n    this.setState({\r\n      current: e.key\r\n    });\r\n  };\r\n\r\n  validate = data => {\r\n    const errors = {};\r\n    if (!data.firstName) errors.firstName = \"Can't be empty\";\r\n    return errors;\r\n  };\r\n\r\n  onSearch = e => {\r\n    const errors = this.validate(this.state.data);\r\n    this.setState({ errors });\r\n    if (Object.keys(errors).length === 0) {\r\n      const { firstName } = this.state.data;\r\n      this.props.dispatch(\r\n        searchEmp({\r\n          firstName: firstName\r\n        })\r\n      );\r\n\r\n      this.props.history.push(\"/search\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const data1 = Array.from(this.props.empList);\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Col xs={22} sm={22} md={22} lg={22} xl={22}>\r\n            <Menu\r\n              onClick={this.handleClick}\r\n              selectedKeys={[this.state.current]}\r\n              mode=\"horizontal\"\r\n            >\r\n              <Menu.Item>\r\n                <Link to={{ pathname: \"/home\" }}>\r\n                  {\" \"}\r\n                  <img\r\n                    src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\"\r\n                    width=\"200px\"\r\n                    height=\"60px\"\r\n                  />\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Col>\r\n          <Col xs={2} sm={2} md={2} lg={2} xl={2}>\r\n            <Link to={{ pathname: \"/login\" }}>\r\n              {\" \"}\r\n              <Button size=\"large\">\r\n                <Icon type=\"logout\" />\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Header>\r\n        <Card title=\"Search Employee\">\r\n          <Form>\r\n            <Col span={8}>\r\n              <Form.Item error={!!errors.firstName}>\r\n                <Input\r\n                  id=\"firstName\"\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={data.firstName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Enter Name\"\r\n                />\r\n                {errors.firstName && <InlineError text={errors.firstName} />}\r\n              </Form.Item>\r\n              <Button type=\"primary\" onClick={this.onSearch}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col xs={22} sm={22} md={22} lg={22} xl={22}>\r\n              <Content\r\n                style={{\r\n                  margin: \"24px 16px\",\r\n                  padding: 24,\r\n                  background: \"#fff\",\r\n                  minHeight: 580\r\n                }}\r\n              >\r\n                <List\r\n                  header={<div>Employee Details</div>}\r\n                  bordered\r\n                  dataSource={data1}\r\n                  renderItem={item => (\r\n                    <List.Item>{item.primaryEmail}</List.Item>\r\n                  )}\r\n                />\r\n              </Content>\r\n            </Col>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  //console.log(\"STATE\" + JSON.stringify(state.empList.result));\r\n  return {\r\n    empList: state.empList.result\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Search);\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\r\nimport Login from \"../components/Login\";\r\nimport Home from \"../components/Home\";\r\nimport CreateNewRequest from \"../components/CreateNewRequest\";\r\nimport Signup from \"../components/Signup\";\r\nimport AddEmployee from \"../components/AddEmployee\";\r\nimport ListEmployees from \"../components/ListEmployees\";\r\nimport TimeSheetCalander from \"../components/TimeSheet_Calender\";\r\nimport Search from \"../components/Search\";\r\n\r\nexport default () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/login\" render={props => <Login {...props} />} />\r\n        <Route exact path=\"/home\" render={props => <Home {...props} />} />\r\n        <Route exact path=\"/signup\" render={props => <Signup {...props} />} />\r\n        <Route\r\n          exact\r\n          path=\"/addEmployee\"\r\n          render={props => <AddEmployee {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/TimeSheetCalander\"\r\n          render={props => <TimeSheetCalander {...props} />}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/listEmployees\"\r\n          render={props => <ListEmployees {...props} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/createNewRequest\"\r\n          render={props => <CreateNewRequest {...props} />}\r\n        />\r\n        <Route exact path=\"/search\" render={props => <Search {...props} />} />\r\n\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Routes from \"./routes\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      isAuthenticated: false\r\n    };\r\n  }\r\n  \r\n  userHasAuthenticated = authenticated => {\r\n    this.setState({ isAuthenticated: authenticated });\r\n  }\r\n  render() {\r\n    const childProps = {\r\n  isAuthenticated: this.state.isAuthenticated,\r\n  userHasAuthenticated: this.userHasAuthenticated\r\n};\r\n    return (\r\n     <div>\r\n      <Routes childProps={childProps} />\r\n\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export function GetDataFromServer(apiPath, reqMethod, formBody) {\r\n  let myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  // if(window.localStorage.userLoginToken !== undefined){\r\n  //   myHeaders.append('Authorization', 'Bearer '+window.localStorage.userLoginToken);\r\n  // }\r\n  // if(window.localStorage.bazruserid !== undefined){\r\n  //   myHeaders.append('bazruserid', window.localStorage.bazruserid);\r\n  // }\r\n\r\n  if (!reqMethod && reqMethod !== \"POST\") {\r\n    return fetch(apiPath, { method: \"GET\", headers: myHeaders });\r\n  } else {\r\n    if (formBody) {\r\n      let fetchData = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(formBody),\r\n        headers: myHeaders\r\n      };\r\n      // Create our request constructor with all the parameters we need\r\n      // var request = new Request(apiPath, {\r\n      //     method: 'POST',\r\n      //     body: formBody,\r\n      //     headers: new Headers()\r\n      // });\r\n      //return fetch(request);\r\n      return fetch(apiPath, fetchData);\r\n    }\r\n  }\r\n}\r\n\r\n// below service call is used only for posting a new item,\r\n// for posting a new item we're using formData for whihc we should not send the headers\r\n// and the request body shoudl be form data.\r\nexport function GetDataFromServerToPost(apiPath, reqMethod, formBody) {\r\n  let myHeaders = new Headers();\r\n  // if(window.localStorage.userLoginToken !== undefined){\r\n  //   myHeaders.append('Authorization', 'Bearer '+window.localStorage.userLoginToken);\r\n  // }\r\n\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  if (formBody) {\r\n    let fetchData = {\r\n      method: \"POST\",\r\n      body: formBody,\r\n      headers: myHeaders\r\n    };\r\n    return fetch(apiPath, fetchData);\r\n  }\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport * as Types from \"../actions/types\";\r\nimport { GetDataFromServer } from \"../service\";\r\n\r\nfunction* fetchLoginUser(action) {\r\n  try {\r\n    console.log(\"LogIn Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.firstName = action.firstName; //action.code;\r\n    formBody.password = action.password; //action.provider;\r\n    //const reqMethod = \"POST\";\r\n    console.log(formBody);\r\n    const loginUrl = \"http://localhost:8080/get?firstName=formBody.firstName\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"GET\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchTimeSheet(action) {\r\n  console.log(\"TimeSheet Action->\" + JSON.stringify(action));\r\n  try {\r\n    console.log(\"Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.selectWeek = action.selectWeek; //action.provider;\r\n    formBody.jobTitle = action.jobTitle;\r\n    formBody.approver = action.approver;\r\n    formBody.client = action.client;\r\n    formBody.endDate = action.endDate;\r\n    formBody.projectId = action.projectId;\r\n\r\n    const loginUrl = \"http://localhost:8080/create\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchTimeSheetCalander(action) {\r\n  console.log(\"Submit Action->\" + JSON.stringify(action));\r\n  try {\r\n    let formBody = {};\r\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\r\n    const loginUrl = \"http://localhost:8080/submit\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* fetchSaveTimeSheetCalander(action) {\r\n  console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\r\n  try {\r\n    let formBody = {};\r\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\r\n    const loginUrl = \"http://localhost:8080/timesheet/save\";\r\n    const response = yield call(GetDataFromServer, loginUrl, \"POST\", formBody);\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* signUpUser(action) {\r\n  try {\r\n    console.log(\"Submit Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.user = action.user;\r\n\r\n    const signUpUrl = \"http://localhost:8080/create\";\r\n    const response = yield call(\r\n      GetDataFromServer,\r\n      signUpUrl,\r\n      \"POST\",\r\n      formBody.user\r\n    );\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"SIGNUP_USER_SERVER_RESPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({ type: Types.SIGNUP_USER_SERVER_RESPONSE_SUCCESS, result });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* saveEmployee(action) {\r\n  try {\r\n    console.log(\"Submit Action->\" + JSON.stringify(action));\r\n    let formBody = {};\r\n    formBody.user = action.user;\r\n\r\n    //const reqMethod = \"POST\";\r\n    const AddEmpUrl = \"http://localhost:8080/employee\";\r\n    const response = yield call(\r\n      GetDataFromServer,\r\n      AddEmpUrl,\r\n      \"POST\",\r\n      formBody.user\r\n    );\r\n    const result = yield response.json();\r\n    console.log(\"Result Json\" + result);\r\n    if (result.error) {\r\n      yield put({\r\n        type: \"EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_ERROR\",\r\n        error: result.error\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: Types.EMPLOYEE_SAVE_DATABASE_SERVER_RESPONSE_SUCCESS,\r\n        result\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* searchEmployee(action) {\r\n  console.log(\"Search Action->\" + JSON.stringify(action));\r\n  let formBody = {};\r\n  formBody.result = action.result;\r\n  let firstName = {};\r\n  firstName = action.result.firstName;\r\n\r\n  console.log(firstName);\r\n  const reqMethod = \"GET\";\r\n  const loginUrl = `http://localhost:8080/search/${firstName}`;\r\n\r\n  const response = yield call(GetDataFromServer, loginUrl, \"\", \"\");\r\n\r\n  const result = yield response.json();\r\n\r\n  console.log(\"Result->\" + JSON.stringify(result));\r\n  if (result.error) {\r\n    yield put({ type: Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE, result });\r\n  } else {\r\n    yield put({ type: Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE, result });\r\n  }\r\n}\r\n\r\nexport default function* rootSaga(params) {\r\n  yield takeEvery(Types.LOGIN_USER, fetchLoginUser);\r\n  yield takeEvery(Types.CREATE_TIMESHEET, fetchTimeSheet);\r\n  yield takeEvery(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\r\n  yield takeEvery(\r\n    Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR,\r\n    fetchSaveTimeSheetCalander\r\n  );\r\n  yield takeEvery(Types.SIGNUP_USER, signUpUser);\r\n  yield takeEvery(Types.EMPLOYEE_SAVE_DATABASE, saveEmployee);\r\n  yield takeEvery(Types.GET_EMPLOYEE_LIST, searchEmployee);\r\n}\r\n","import * as Type from \"../actions/types\";\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case Type.CREATE_TIMESHEET:\r\n            // return Object.assign({}, state);\r\n            return { ...state, timesheet: action.timesheet }\r\n        case Type.CREATE_TIMESHEET_WORKINGHOUR:\r\n            return { ...state }\r\n        case Type.CREATE_TIMESHEET_SAVE_WORKINGHOUR:\r\n            return { ...state }\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","import * as Types from \"../actions/types\";\r\n\r\nconst initialUserObj = {\r\n  \"signUpUsersList\":[],\r\n  \"pending\": false,\r\n  \"loggedIn\": false,\r\n  \"isValidToken\": false,\r\n  \"isBusiness\": false,\r\n  \"empDetails\": {},\r\n  \"result\":{},\r\n  \"user\":{ \"email\": \"\",\r\n           \"displayName\": \"\",\r\n           \"registered\": false,\r\n           \"refreshToken\": \"\",\r\n           \"expiresIn\": \"\",\r\n           \"emailVerified\": false,\r\n           \"validSince\": \"\",\r\n           \"disabled\": false,\r\n           \"lastLoginAt\": \"\",\r\n           \"createdAt\": \"\"}\r\n\r\n};\r\n\r\n\r\nconst handleLoginServerResponseSuccess = (state, action) => {\r\n  let newState = {...state};\r\n  if(action.result !== undefined){\r\n    newState = Object.assign({}, state, {\"result\" : Object.assign({}, action.result)})\r\n    \r\n  }\r\n  return {...newState};\r\n}\r\nconst handleLoginServerResponseError = (state, action) => {\r\n  let newState = {...state};\r\n  return {...newState};\r\n}\r\n\r\nexport default (state = initialUserObj, action) => {\r\n    switch(action.type){\r\n        case Types.LOGIN_USER :\r\n            return Object.assign({}, state,{ \"loggedIn\" :false,\"isValidToken\":false, \"pending\":true});\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_ERROR :\r\n                return handleLoginServerResponseError(state, action);\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS :\r\n                return handleLoginServerResponseSuccess(state, action);       \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as Types from \"../actions/types\";\r\n\r\nconst initialUserObj = {\r\n  result: []\r\n};\r\n\r\nconst getEmployeeListError = (state, action) => {\r\n  let newState = { ...state };\r\n  return { ...newState };\r\n};\r\n\r\nconst getEmployeeList = (state, action) => {\r\n  //console.log(\"REdux\" + JSON.stringify(action));\r\n  let newState = { ...state };\r\n  if (action.result !== undefined) {\r\n    newState = Object.assign({}, state, {\r\n      result: JSON.parse(JSON.stringify(action.result))\r\n    });\r\n    console.log(\"New\" + JSON.stringify(newState));\r\n  }\r\n  return { ...newState };\r\n};\r\n\r\nexport default (state = initialUserObj, action = {}) => {\r\n  switch (action.type) {\r\n    case Types.GET_EMPLOYEE_LIST:\r\n      return { ...state };\r\n    case Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE:\r\n      return getEmployeeList(state, action);\r\n    case Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE:\r\n      return getEmployeeListError(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport CreatTimeSheet from \"./CreateNewRequest\";\r\nimport auth from \"./auth\";\r\nimport empList from \"./Get_List\";\r\n// cont rootReducer = combineReducers({auth})\r\nexport default combineReducers({\r\n  auth,\r\n  timesheet: CreatTimeSheet,\r\n  empList\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport reducers from \"../reducers\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet middleware = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV === \"development\"){\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(reducers, applyMiddleware(...middleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n<Provider store={store}>\r\n    < App />\r\n</Provider>\r\n</BrowserRouter>\r\n, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}