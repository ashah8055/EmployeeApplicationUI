{"ast":null,"code":"import _classCallCheck from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Amar/emp/src/components/Login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Router } from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, Card, Checkbox, Icon } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\nvar FormItem = Form.Item;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props)); // defining the state to the component\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.dispatch(loginUser(_this.state.data.email, _this.state.data.password));\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        try {\n          _this.props.history.push(\"/home\");\n        } catch (e) {\n          alert(e.message);\n        }\n      });\n    };\n\n    _this.state = {\n      data: {\n        email: 'testbiz@rsrit.com',\n        password: '123456',\n        isBusiness: true\n      },\n      loading: false,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\",\n        width: \"200px\",\n        height: \"60px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"register now!\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log(props.result);\n      return null;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    result: state.auth.result\n  };\n};\n\nvar WrappedNormalLoginForm = Form.create()(Login); //ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\n\nexport default connect(mapStateToProps)(WrappedNormalLoginForm); //export default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/Amar/emp/src/components/Login/index.js"],"names":["React","Component","connect","PropTypes","Router","Link","ReactDOM","Form","Input","Button","Card","Checkbox","Icon","loginUser","getBusinessUsersList","FormItem","Item","Login","props","handleSubmit","e","preventDefault","dispatch","state","data","email","password","form","validateFields","err","values","console","log","history","push","alert","message","isBusiness","loading","errors","getFieldDecorator","rules","required","color","valuePropName","initialValue","result","propTypes","mapStateToProps","auth","WrappedNormalLoginForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Router } from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, Card, Checkbox, Icon } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {\n            data: {\n                email: 'testbiz@rsrit.com',\n                password: '123456',\n                isBusiness: true\n            },\n            loading: false,\n            errors: {}\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n\n        console.log(props.result);\n\n        return null;\n    }\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.dispatch(loginUser(this.state.data.email, this.state.data.password));\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n\n            try {\n\n                this.props.history.push(\"/home\");\n            } catch (e) {\n                alert(e.message);\n            }\n\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n\n\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <div>\n                    <img src='https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png' width=\"200px\" height=\"60px\"></img>\n                </div>\n\n                <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                    })(\n                        <Checkbox>Remember me</Checkbox>\n                    )}\n                    <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n              </Button>\n                    Or <a href=\"\">register now!</a>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nLogin.propTypes = {\n}\n\nconst mapStateToProps = state => {\n    return {\n        result: state.auth.result\n    };\n};\nconst WrappedNormalLoginForm = Form.create()(Login);\n\n//ReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\n\nexport default connect(mapStateToProps)(WrappedNormalLoginForm);\n\n//export default WrappedNormalLoginForm;\n"]},"metadata":{},"sourceType":"module"}