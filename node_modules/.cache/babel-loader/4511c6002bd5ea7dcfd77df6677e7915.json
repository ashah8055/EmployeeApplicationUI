{"ast":null,"code":"import _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Type from \"../actions/types\";\nvar initialUserObj = {\n  \"listOfProject\": []\n};\n\nvar handleProjectList = function handleProjectList(state, action) {\n  console.log(\"REdux\" + JSON.stringify(action));\n\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"listOfProject\": action.projectDetails.projectDetails.projectName\n    });\n    console.log(\"New\" + JSON.stringify(newState));\n  }\n\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Type.CREATE_PROJECT:\n      return _objectSpread({}, state, {\n        projectDetails: action.projectDetails\n      });\n\n    case Type.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n      return handleProjectList(state, action);\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/reducers/ProjectDetails.js"],"names":["Type","initialUserObj","handleProjectList","state","action","console","log","JSON","stringify","newState","result","undefined","Object","assign","projectDetails","projectName","type","CREATE_PROJECT","LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS"],"mappings":";AAAA,OAAO,KAAKA,IAAZ,MAAsB,kBAAtB;AACA,IAAMC,cAAc,GAAG;AAEnB,mBAAiB;AAFE,CAAvB;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAtB;;AACA,MAAIK,QAAQ,qBAAQN,KAAR,CAAZ;;AACA,MAAIC,MAAM,CAACM,MAAP,KAAkBC,SAAtB,EAAiC;AAC7BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAAE,uBAAiBC,MAAM,CAACU,cAAP,CAAsBA,cAAtB,CAAqCC;AAAxD,KAAzB,CAAX;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAQC,IAAI,CAACC,SAAL,CAAeC,QAAf,CAApB;AACH;;AACD,2BAAYA,QAAZ;AAEH,CATD;;AAUA,gBAAe,YAAoC;AAAA,MAAnCN,KAAmC,uEAA3BF,cAA2B;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACY,IAAf;AACI,SAAKhB,IAAI,CAACiB,cAAV;AACI,+BAAYd,KAAZ;AAAmBW,QAAAA,cAAc,EAAEV,MAAM,CAACU;AAA1C;;AACJ,SAAKd,IAAI,CAACkB,2CAAV;AACI,aAAOhB,iBAAiB,CAACC,KAAD,EAAQC,MAAR,CAAxB;;AACJ;AACI,+BAAYD,KAAZ;AANR;AAQH,CATD","sourcesContent":["import * as Type from \"../actions/types\";\nconst initialUserObj = {\n\n    \"listOfProject\": []\n};\n\nconst handleProjectList = (state, action) => {\n    console.log(\"REdux\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, { \"listOfProject\": action.projectDetails.projectDetails.projectName })\n        console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n\n}\nexport default (state = initialUserObj, action) => {\n    switch (action.type) {\n        case Type.CREATE_PROJECT:\n            return { ...state, projectDetails: action.projectDetails }\n        case Type.LIST_PROJECT_DETAILS_SERVER_RESPONSE_SUCESS:\n            return handleProjectList(state, action);\n        default:\n            return { ...state };\n    }\n};"]},"metadata":{},"sourceType":"module"}