'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _dom = require('./utility/dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// `PureComponent` is only available in React >= 15.3.0.
var PureComponent = _react2.default.PureComponent || _react2.default.Component;

// http://wd.dizaina.net/en/experiments/ios7-style-switch/

// An iOS-style switch
var Switch = (_temp2 = _class = function (_PureComponent) {
	_inherits(Switch, _PureComponent);

	function Switch() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, Switch);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Switch.__proto__ || Object.getPrototypeOf(Switch)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.onKeyDown = function (event) {
			var onKeyDown = _this.props.onKeyDown;


			if (onKeyDown) {
				onKeyDown(event);
			}

			if (event.defaultPrevented) {
				return;
			}

			if ((0, _dom.submitFormOnCtrlEnter)(event, _this.input)) {
				return;
			}
		}, _this.storeInputComponent = function (_) {
			return _this.input = _;
		}, _this.toggle = function (event) {
			var _this$props = _this.props,
			    onChange = _this$props.onChange,
			    disabled = _this$props.disabled,
			    value = _this$props.value;


			if (disabled) {
				return;
			}

			onChange(!value);
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(Switch, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    value = _props.value,
			    disabled = _props.disabled,
			    style = _props.style,
			    className = _props.className,
			    leftLabel = _props.leftLabel,
			    rightLabel = _props.rightLabel,
			    children = _props.children;


			return _react2.default.createElement(
				'label',
				{
					className: (0, _classnames2.default)('rrui__switch', {
						'rrui__input': children,
						'rrui__switch--label': children,
						'rrui__switch--disabled': disabled
					}, className),
					style: style },
				(leftLabel || children) && _react2.default.createElement(
					'div',
					{ className: (0, _classnames2.default)('rrui__switch__label', 'rrui__switch__label--left') },
					leftLabel || children
				),
				_react2.default.createElement(
					'div',
					{ className: 'rrui__switch__switch' },
					_react2.default.createElement('input', {
						ref: this.storeInputComponent,
						type: 'checkbox',
						value: value,
						onKeyDown: this.onKeyDown,
						onChange: this.toggle,
						className: 'rrui__switch__input',
						style: inputStyle }),
					_react2.default.createElement('div', {
						className: (0, _classnames2.default)('rrui__switch__groove', {
							// CSS selector performance optimization
							'rrui__switch__groove--on': value
						}) }),
					_react2.default.createElement('div', {
						className: (0, _classnames2.default)('rrui__switch__knob', {
							// CSS selector performance optimization
							'rrui__switch__knob--on': value
						}) })
				),
				rightLabel && _react2.default.createElement(
					'div',
					{ className: (0, _classnames2.default)('rrui__switch__label', 'rrui__switch__label--right') },
					rightLabel
				)
			);
		}

		// render_static()
		// {
		// 	const { name, disabled, value } = this.props
		//
		// 	return (
		// 		<div className="rrui__rich__fallback">
		// 			<input
		// 				type="checkbox"
		// 				name={ name }
		// 				disabled={ disabled }
		// 				value={ value }/>
		// 		</div>
		// 	)
		// }

	}]);

	return Switch;
}(PureComponent), _class.propTypes = {
	// HTML form input `name` attribute
	name: _propTypes2.default.string,

	// Disables the switch
	disabled: _propTypes2.default.bool,

	// Either `true` or `false`
	value: _propTypes2.default.bool.isRequired,

	// Is called when the switch is switched
	onChange: _propTypes2.default.func.isRequired,

	// The label to the left of the switch
	leftLabel: _propTypes2.default.string,

	// The label to the right of the switch
	rightLabel: _propTypes2.default.string,

	// A label (analogous to `leftLabel`)
	children: _propTypes2.default.node,

	// CSS style object
	style: _propTypes2.default.object,

	// CSS class
	className: _propTypes2.default.string
}, _class.defaultProps = {
	value: false
}, _temp2);
exports.default = Switch;


var inputStyle = {
	position: 'absolute',
	opacity: 0,
	margin: 0
};
//# sourceMappingURL=Switch.js.map