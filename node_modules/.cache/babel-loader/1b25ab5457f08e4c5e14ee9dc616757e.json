{"ast":null,"code":"import _defineProperty from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Amar/emp/src/components/Login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, Button, Card, Checkbox } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props)); // defining the state to the component\n\n    _this.onChange = function (e) {\n      return _this.setState({\n        data: _objectSpread({}, _this.state.data, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onSubmit = function () {\n      var errors = _this.validate(_this.state.data);\n\n      _this.setState({\n        errors: errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        _this.props.dispatch(getBusinessUsersList());\n\n        _this.props.dispatch(loginUser(_this.state.data.email, _this.state.data.password));\n      }\n    };\n\n    _this.state = {\n      data: {\n        email: 'testbiz@rsrit.com',\n        password: '123456',\n        isBusiness: true\n      },\n      loading: false,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.props.dispatch(getBusinessUsersList());\n    }\n  }, {\n    key: \"render\",\n    // validate = data => {\n    //     const errors = {};\n    //     if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n    //     if(!data.password) errors.password = \"Can't be empty\";\n    //     return errors;\n    // }\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        error: !!errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"email\",\n        type: \"text\",\n        name: \"email\",\n        value: data.email,\n        onChange: this.onChange,\n        placeholder: \"example@example.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"password\",\n        type: \"password\",\n        name: \"password\",\n        value: data.password,\n        onChange: this.onChange,\n        placeholder: \"Make it Secure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.isUserLoggedIn) {\n        if (props.isBusiness) {\n          props.history.push(\"/home\");\n        } else {\n          props.history.push(\"/empStatus\");\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isUserLoggedIn: state.auth.loggedIn,\n    userObject: state.auth.user,\n    isBusiness: state.auth.isBusiness\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/Amar/emp/src/components/Login/index.js"],"names":["React","Component","connect","PropTypes","Link","Form","Input","Button","Card","Checkbox","loginUser","getBusinessUsersList","Login","props","onChange","e","setState","data","state","target","name","value","onSubmit","errors","validate","Object","keys","length","dispatch","email","password","isBusiness","loading","isUserLoggedIn","history","push","propTypes","mapStateToProps","auth","loggedIn","userObject","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, Button, Card, Checkbox } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\n\nclass Login extends Component {\n    \n\n    constructor(props) {\n        super(props);\n        // defining the state to the component\n        this.state = {            \n            data:{\n                email: 'testbiz@rsrit.com',\n                password: '123456',\n                isBusiness:true\n            },            \n            loading: false,\n            errors: {}\n      }\n    }\n\n    componentDidMount(){\n        //this.props.dispatch(getBusinessUsersList());\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.isUserLoggedIn) {            \n            if(props.isBusiness){\n                props.history.push(\"/home\");\n            } else{\n                props.history.push(\"/empStatus\");\n            }\n        } \n        return null;\n      }\n\n    \n    onChange = e => this.setState({\n        data: { ...this.state.data, [e.target.name]: e.target.value}\n    });\n    \n    onSubmit = () => {\n        const errors = this.validate(this.state.data);\n        this.setState({errors});        \n        if(Object.keys(errors).length===0){\n            this.props.dispatch(getBusinessUsersList());\n            this.props.dispatch(loginUser(this.state.data.email, this.state.data.password));\n        }\n    };\n\n    // validate = data => {\n    //     const errors = {};\n    //     if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n    //     if(!data.password) errors.password = \"Can't be empty\";\n    //     return errors;\n    // }\n\n\n    render() { \n        const { data, errors } = this.state\n        return ( \n            <div>\n                <Card title=\"Login\">\n                    <Form>\n                        <Form.Item error={!!errors.email}>\n                            <Input id=\"email\" type=\"text\" name=\"email\" value= {data.email} onChange={this.onChange} placeholder=\"example@example.com\" />\n                          {/* {errors.email && <InlineError text= {errors.email}/>} */}\n                        </Form.Item>\n                        <Form.Item error={!!errors.password}>\n                                <Input id=\"password\" type=\"password\" name=\"password\" value= {data.password} onChange={this.onChange} placeholder=\"Make it Secure\" />\n                            {/* {errors.password && <InlineError text= {errors.password}/>} */}\n                        </Form.Item>\n                        {/* <Checkbox name=\"isBusiness\" checked={data.isBusiness} onChange={this.onChange}>Business</Checkbox> */}\n                        <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>   \n                        {/* <p><Link to={{pathname: \"/signup\"}}>SignUp</Link></p> */}\n                    </Form>\n                </Card>\n            </div>\n         );\n    }\n}\n\nLogin.propTypes = {\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.auth.loggedIn,\n        userObject: state.auth.user,\n        isBusiness: state.auth.isBusiness\n    };\n};\n \nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}