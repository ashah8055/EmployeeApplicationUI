{"version":3,"sources":["../source/Select.js"],"names":["PureComponent","Component","empty_value_option_value","Select","state","focus","selectButton","onCollapse","focusOut","setState","isExpanded","onExpand","onFocus","props","expand","list","collapse","toggle","storeListRef","ref","storeSelectButton","node","storeInputComponentNode","inputComponentNode","getSelectButton","nativeSelectOnKeyDown","event","shouldShowOptionsList","onKeyDownFromNativeSelect","onKeyDown","nativeSelectOnMouseDown","preventDefault","nativeSelectOnChange","value","target","undefined","setValue","onClick","disabled","required","fromNativeSelect","defaultPrevented","ctrlKey","altKey","shiftKey","metaKey","keyCode","newValue","onChange","onBlur","expandable","container","onFocusOut","native","nativeExpanded","id","upward","icon","compact","scroll","scrollMaxItems","scrollIntoView","alignment","saveOnIcons","placeholder","options","indicateInvalid","error","closeButtonIcon","closeLabel","wait","style","className","containerStyle","textAlign","label","getLabel","renderNativeSelect","renderSelectButton","map","option","i","divider","content","title","ariaLabel","toggleClassName","selected","getSelectedOption","selectedOptionLabel","getPlaceholder","showIconOnly","isEmptyValue","hasEmptyOption","createElement","name","tabIndex","storeNativeSelect","renderNativeSelectOptions","empty_option_present","rendered_options","renderNativeSelectOption","unshift","nonSelectable","getOptionKey","propTypes","arrayOf","shape","any","string","oneOfType","func","isRequired","bool","object","number","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;;;;;;;AAOA;AACA,IAAMA,gBAAgB,gBAAMA,aAAN,IAAuB,gBAAMC,SAAnD;;AAEA,IAAMC,2BAA2B,EAAjC;;IAGqBC,M;;;;;;;;;;;;;;oLAgIpBC,K,GAAQ,E,QAERC,K,GAAQ;AAAA,UAAM,MAAKC,YAAL,CAAkBD,KAAlB,EAAN;AAAA,G,QAERE,U,GAAa,iBACb;AAAA,OADgBC,QAChB,SADgBA,QAChB;;AACC,SAAKC,QAAL,CAAc,EAAEC,YAAY,KAAd,EAAd;;AAEA,OAAI,CAACF,QAAL,EAAe;AACd,UAAKH,KAAL;AACA;AACD,G,QAEDM,Q,GAAW,YACX;AAAA,OACSC,OADT,GACqB,MAAKC,KAD1B,CACSD,OADT;;;AAGC,OAAIA,OAAJ,EAAa;AACZA;AACA;;AAED,SAAKH,QAAL,CAAc,EAAEC,YAAY,IAAd,EAAd;AACA,G,QAEDI,M,GAAa;AAAA,UAAM,MAAKC,IAAL,CAAUD,MAAV,EAAN;AAAA,G,QACbE,Q,GAAa;AAAA,UAAM,MAAKD,IAAL,CAAUC,QAAV,EAAN;AAAA,G,QACbC,M,GAAa;AAAA,UAAM,MAAKF,IAAL,CAAUE,MAAV,EAAN;AAAA,G,QAEbC,Y,GAAe,UAACC,GAAD;AAAA,UAAS,MAAKJ,IAAL,GAAYI,GAArB;AAAA,G,QACfC,iB,GAAoB,UAACC,IAAD;AAAA,UAAU,MAAKf,YAAL,GAAoBe,IAA9B;AAAA,G,QACpBC,uB,GAA0B,UAACD,IAAD;AAAA,UAAU,MAAKE,kBAAL,GAA0BF,IAApC;AAAA,G,QAE1BG,e,GAAkB;AAAA,UAAM,MAAKlB,YAAX;AAAA,G,QAwRlBmB,qB,GAAwB,UAACC,KAAD,EACxB;AACC,OAAI,MAAKC,qBAAL,EAAJ,EACA;AACC,UAAKtB,KAAL;AACA,UAAKuB,yBAAL,GAAiC,IAAjC;AACA,UAAKC,SAAL,CAAeH,KAAf;AACA;AACD,G,QAEDI,uB,GAA0B,UAACJ,KAAD,EAC1B;AACC,OAAI,MAAKC,qBAAL,EAAJ,EACA;AACCD,UAAMK,cAAN;AACA,UAAK1B,KAAL;AACA,UAAKY,MAAL;AACA;AACD,G,QAEDe,oB,GAAuB,UAACN,KAAD,EACvB;AACC,OAAIO,QAAQP,MAAMQ,MAAN,CAAaD,KAAzB;;AAEA;AACA,OAAIA,UAAU/B,wBAAd,EACA;AACC;AACA+B,YAAQE,SAAR;AACA;;AAED,SAAKC,QAAL,CAAcH,KAAd;AACA,G,QAEDI,O,GAAU,UAACX,KAAD,EACV;AAAA,OACSY,QADT,GACsB,MAAKzB,KAD3B,CACSyB,QADT;;;AAGC,OAAI,CAACA,QAAL,EAAe;AACd,UAAKrB,MAAL;AACA;AACD,G,QAEDY,S,GAAY,UAACH,KAAD,EACZ;AAAA,qBACuC,MAAKb,KAD5C;AAAA,OACSyB,QADT,eACSA,QADT;AAAA,OACmBL,KADnB,eACmBA,KADnB;AAAA,OAC0BM,QAD1B,eAC0BA,QAD1B;AAAA,OAES7B,UAFT,GAEwB,MAAKN,KAF7B,CAESM,UAFT;;AAIC;;AACA,OAAM8B,mBAAmB,MAAKZ,yBAA9B;AACA,SAAKA,yBAAL,GAAiC,KAAjC;;AAEA,OAAIU,QAAJ,EAAc;AACb;AACA;;AAED,OAAIZ,MAAMe,gBAAV,EAA4B;AAC3B;AACA;;AAED,OAAI,CAAC/B,UAAL,EAAiB;AAChB,QAAI,gCAAsBgB,KAAtB,EAA6B,MAAKpB,YAAlC,CAAJ,EAAqD;AACpD;AACA;AACD;;AAED,OAAIoB,MAAMgB,OAAN,IAAiBhB,MAAMiB,MAAvB,IAAiCjB,MAAMkB,QAAvC,IAAmDlB,MAAMmB,OAA7D,EAAsE;AACrE;AACA;;AAED,WAAQnB,MAAMoB,OAAd;AAEC;AACA;AACA,SAAK,EAAL;AACA;AACA;AACA,SAAK,EAAL;AACC,YAAO,MAAK/B,IAAL,CAAUc,SAAV,CAAoBH,KAApB,CAAP;;AAED;AACA,SAAK,EAAL;AACC;AACA;AACA,SAAIa,YAAY,CAAC,+BAAqB,MAAKjC,YAA1B,CAAjB,EAA0D;AACzD,YAAKQ,MAAL;AACA;AACD,YAAOY,MAAMK,cAAN,EAAP;;AAED;AACA,SAAK,EAAL;AACC,SAAIS,gBAAJ,EACA;AACC;AACA;AACA;AACAd,YAAMK,cAAN;;AAEA,YAAKjB,MAAL;AACA;AACD;AA9BF;AAgCA,G,QA0DDsB,Q,GAAW,UAACW,QAAD,EACX;AAAA,sBAC6B,MAAKlC,KADlC;AAAA,OACSoB,KADT,gBACSA,KADT;AAAA,OACgBe,QADhB,gBACgBA,QADhB;;AAGC;;AACA,OAAID,aAAad,KAAjB,EAAwB;AACvBe,aAASD,QAAT;AACA;AACD,G,QAEDE,M,GAAS,UAACvB,KAAD,EACT;AAAA,sBAC2B,MAAKb,KADhC;AAAA,OACSoC,MADT,gBACSA,MADT;AAAA,OACiBhB,KADjB,gBACiBA,KADjB;;;AAGC,OAAI,MAAKlB,IAAT,EAAe;AACd,UAAKA,IAAL,CAAUkC,MAAV,CAAiBvB,KAAjB;AACA;;AAED;AACA;AACA,OAAIuB,UAAU,MAAKlC,IAAf,IAAuB,MAAKA,IAAL,CAAUmC,UAAjC,IAA+C,CAAC,MAAKnC,IAAL,CAAUmC,UAAV,CAAqBC,SAAzE,EAAoF;AACnF,uCAAmBF,MAAnB,EAA2BvB,KAA3B,EAAkCO,KAAlC;AACA;AACD,G,QAEDmB,U,GAAa,UAAC1B,KAAD,EACb;AAAA,sBACmD,MAAKb,KADxD;AAAA,OACSoC,MADT,gBACSA,MADT;AAAA,OACiBhB,KADjB,gBACiBA,KADjB;AAAA,OACwBoB,MADxB,gBACwBA,MADxB;AAAA,OACgCC,cADhC,gBACgCA,cADhC;;;AAGC,OAAI,CAACD,MAAD,IAAW,CAACC,cAAhB,EAAgC;AAC/B,UAAKtC,QAAL;AACA;;AAED,OAAIiC,MAAJ,EAAY;AACX,uCAAmBA,MAAnB,EAA2BvB,KAA3B,EAAkCO,KAAlC;AACA;AACD,G;;;;;2BAzdD;AAAA,gBA2BG,KAAKpB,KA3BR;AAAA,OAGE0C,EAHF,UAGEA,EAHF;AAAA,OAIEC,MAJF,UAIEA,MAJF;AAAA,OAKEC,IALF,UAKEA,IALF;AAAA,OAMEC,OANF,UAMEA,OANF;AAAA,OAOEC,MAPF,UAOEA,MAPF;AAAA,OAQEC,cARF,UAQEA,cARF;AAAA,OASEC,cATF,UASEA,cATF;AAAA,OAUEC,SAVF,UAUEA,SAVF;AAAA,OAWEC,WAXF,UAWEA,WAXF;AAAA,OAYEV,MAZF,UAYEA,MAZF;AAAA,OAaEf,QAbF,UAaEA,QAbF;AAAA,OAcEC,QAdF,UAcEA,QAdF;AAAA,OAeEyB,WAfF,UAeEA,WAfF;AAAA,OAgBEC,OAhBF,UAgBEA,OAhBF;AAAA,OAiBEhC,KAjBF,UAiBEA,KAjBF;AAAA,OAkBEe,QAlBF,UAkBEA,QAlBF;AAAA,OAmBEkB,eAnBF,UAmBEA,eAnBF;AAAA,OAoBEC,KApBF,UAoBEA,KApBF;AAAA,OAqBEC,eArBF,UAqBEA,eArBF;AAAA,OAsBEC,UAtBF,UAsBEA,UAtBF;AAAA,OAuBEC,IAvBF,UAuBEA,IAvBF;AAAA,OAwBEC,KAxBF,UAwBEA,KAxBF;AAAA,OAyBEC,SAzBF,UAyBEA,SAzBF;AAAA,OA6BS9D,UA7BT,GA6BwB,KAAKN,KA7B7B,CA6BSM,UA7BT;;;AA+BC,OAAM+D,iBAAiB,EAAEC,WAAWZ,SAAb,EAAvB;;AAEA,OAAMa,QAAQ,KAAKC,QAAL,EAAd;;AAEA,UACC;AAAA;AAAA;AACC,YAAQL,qBAAaE,cAAb,EAAgCF,KAAhC,IAA0CE,cADnD;AAEC,gBAAY,0BAEX,cAFW,EAGX;AACC,+BAA2Bf,WAAWD;AADvC,MAHW,EAMXe,SANW,CAFb;AAWC;AAAA;AAAA;AACC,WAAM,KAAKlD,uBADZ;AAEC,iBAAU,aAFX;AAIGgD,aAAQ,uDAJX;AAOG,MAACjB,MAAD,IAAW,KAAKwB,kBAAL,EAPd;AASG,MAACxB,MAAD,IAAW,KAAKyB,kBAAL,EATd;AAkBGH,cACD;AAAA;AAAA;AACC,WAAKpB,EADN;AAEC,cAAQtB,KAFT;AAGC,iBAAWM,QAHZ;AAIC,gBAAU2B,mBAAmBC,KAJ9B;AAKC,eAAS,KALV;AAMGQ;AANH,MAnBF;AA8BG,UAAKhD,qBAAL,MACD;AAAA;AAAA;AACC,YAAK,KAAKT,YADX;AAEC,eAAQsC,MAFT;AAGC,kBAAWM,SAHZ;AAIC,uBAAgBD,cAJjB;AAKC,uBAAgBF,WAAW,KAAX,GAAmB,CAAnB,GAAuBC,cALxC;AAMC,cAAO3B,KANR;AAOC,iBAAU,KAAKG,QAPhB;AAQC,mBAAY,KAAK7B,UARlB;AASC,iBAAU,KAAKI,QAThB;AAUC,uBAAgB,KAAKa,eAVtB;AAWC,mBAAY,KAAK4B,UAXlB;AAYC,qBAAc,KAAKpC,QAZpB;AAaC,wBAAiBoD,eAblB;AAcC,mBAAYC,UAdb;AAeC,kBAAW,0BAAW,cAAX,EAA2B,oBAA3B,EACX;AACC,4CAAsCP,cAAc,MADrD;AAEC,6CAAsCA,cAAc;AAFrD,QADW,CAfZ;AAqBEG,cAAQc,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,cACZ;AAAA,uBAAM,IAAN;AAAA;AACC,cAAKA,CADN;AAEC,gBAAOD,OAAO/C,KAFf;AAGC,eAAM+C,OAAOE,OAAP,IAAkBnB,WAAlB,GAAgC5B,SAAhC,GAA4C6C,OAAOvB,IAH1D;AAIEuB,eAAOE,OAAP,GAAiB,sDAAjB,GAA+BF,OAAOG,OAAP,GAAiBH,OAAOG,OAAP,CAAeH,MAAf,CAAjB,GAA0CA,OAAOL;AAJlF,QADY;AAAA,OAAZ;AArBF,MA/BF;AAgEGtB,eAAU,KAAKwB,kBAAL;AAhEb,KAXD;AA+EGX,uBAAmBC,KAAnB,IACD;AAAA;AAAA,OAAK,WAAU,mBAAf;AACGA;AADH;AAhFF,IADD;AAuFA;;;uCAGD;AAAA,iBAeG,KAAKtD,KAfR;AAAA,OAGEyD,IAHF,WAGEA,IAHF;AAAA,OAIErC,KAJF,WAIEA,KAJF;AAAA,OAKErB,OALF,WAKEA,OALF;AAAA,OAME0B,QANF,WAMEA,QANF;AAAA,OAOEC,QAPF,WAOEA,QAPF;AAAA,OAQEkB,IARF,WAQEA,IARF;AAAA,OASE2B,KATF,WASEA,KATF;AAAA,OAUEC,SAVF,WAUEA,SAVF;AAAA,OAWEC,eAXF,WAWEA,eAXF;AAAA,OAYEpB,eAZF,WAYEA,eAZF;AAAA,OAaEC,KAbF,WAaEA,KAbF;AAAA,OAiBSzD,UAjBT,GAiBwB,KAAKN,KAjB7B,CAiBSM,UAjBT;;;AAmBC,OAAM6E,WAAW,KAAKC,iBAAL,EAAjB;;AAEA,OAAMC,sBAAsBF,YAAYA,SAASZ,KAArB,IAA8B,KAAKC,QAAL,EAA9B,IAAiD,KAAKc,cAAL,EAA7E;AACA,OAAMC,eAAelC,QAAQ8B,QAAR,IAAoBA,SAAS9B,IAAlD;;AAEA,UACC;AAAA;AAAA;AACC,UAAM,KAAKrC,iBADZ;AAEC,WAAK,QAFN;AAGC,eAAWkB,QAHZ;AAIC,cAAU,KAAKD,OAJhB;AAKC,gBAAY,KAAKR,SALlB;AAMC,cAAUjB,OANX;AAOC,aAAS,KAAKqC,MAPf;AAQC,eAAW,CAAC,CARb;AASC,YAAQmC,KATT;AAUC,mBAAaC,SAVd;AAWC,gBAAY,0BAEX,qBAFW,EAGX,oBAHW,EAIX,sBAJW,EAKXC,eALW,EAMX;AACC,qCAAmCM,aAAa3D,KAAb,KAAuB,CAAC,KAAK4D,cAAL,EAD5D;AAEC,uCAAmC3B,mBAAmBC,KAFvD;AAGC,wCAAmC7B;AAHpC,MANW,CAXb;AAyBC;AAAA;AAAA,OAAK,WAAU,gCAAf;AAGC;AAAA;AAAA;AACC,kBAAY,0BAAW,8BAAX,EACZ;AACC,kDAA2C,CAAC,KAAKsC,QAAL,EAAD,IAAoBrC,QAApB,IAAgCqD,aAAa3D,KAAb;AAD5E,QADY,CADb;AAKG0D,qBAAe,gBAAMG,aAAN,CAAoBP,SAAS9B,IAA7B,EAAmC,EAAExB,YAAF,EAAS0C,OAAOc,mBAAhB,EAAnC,CAAf,GAA2FA;AAL9F,MAHD;AAYG,MAACnB,IAAD,IAAS,uCAAK,WAAU,qBAAf;AAZZ;AAzBD,IADD;AA0CA;;;uCAGD;AAAA,iBAaG,KAAKzD,KAbR;AAAA,OAGE0C,EAHF,WAGEA,EAHF;AAAA,OAIEwC,IAJF,WAIEA,IAJF;AAAA,OAKE9D,KALF,WAKEA,KALF;AAAA,OAME0C,KANF,WAMEA,KANF;AAAA,OAOErC,QAPF,WAOEA,QAPF;AAAA,OAQEe,MARF,WAQEA,MARF;AAAA,OASEc,KATF,WASEA,KATF;AAAA,OAUED,eAVF,WAUEA,eAVF;AAAA,OAWE8B,QAXF,WAWEA,QAXF;;;AAeC,UACC;AAAA;AAAA;AACC,UAAM,KAAKC,iBADZ;AAEC,SAAK1C,EAFN;AAGC,WAAOwC,IAHR;AAIC,YAAQH,aAAa3D,KAAb,IAAsB/B,wBAAtB,GAAiD+B,KAJ1D;AAKC,eAAWK,QALZ;AAMC,gBAAY,KAAKb,qBANlB;AAOC,kBAAc,KAAKK,uBAPpB;AAQC,eAAW,KAAKE,oBARjB;AASC,eAAWgE,QATZ;AAUC,gBAAY,0BAAW,sBAAX,EACZ;AACC,uCAAkC,CAAC3C,MADpC;AAEC,uCAAkCa,mBAAmBC;AAFtD,MADY,CAVb;AAeE,SAAK+B,yBAAL;AAfF,IADD;AAmBA;;;8CAGD;AAAA;;AAAA,iBAOG,KAAKrF,KAPR;AAAA,OAGEoD,OAHF,WAGEA,OAHF;AAAA,OAIEhC,KAJF,WAIEA,KAJF;AAAA,OAKE+B,WALF,WAKEA,WALF;;;AASC,OAAImC,uBAAuB,KAA3B;;AAEA,OAAMC,mBAAmBnC,QAAQc,GAAR,CAAY,UAACC,MAAD,EACrC;AAAA,QACO/C,KADP,GACwB+C,MADxB,CACO/C,KADP;AAAA,QACc0C,KADd,GACwBK,MADxB,CACcL,KADd;;;AAGC,QAAIiB,aAAa3D,KAAb,CAAJ,EACA;AACCkE,4BAAuB,IAAvB;AACAlE,aAAQ/B,wBAAR;AACA;;AAED,WAAO,OAAKmG,wBAAL,CAA8BpE,KAA9B,EAAqC0C,KAArC,CAAP;AACA,IAXwB,CAAzB;;AAaA,OAAIiB,aAAa3D,KAAb,KAAuB,CAACkE,oBAA5B,EACA;AACCC,qBAAiBE,OAAjB,CAAyB,KAAKD,wBAAL,CAA8BlE,SAA9B,EAAyC6B,WAAzC,EAAsD,IAAtD,CAAzB;AACA;;AAED,UAAOoC,gBAAP;AACA;;;2CAEwBnE,K,EAAO0C,K,EAAO4B,a,EACvC;AACC,UACC;AAAA;AAAA;AACC,UAAMC,aAAavE,KAAb,CADP;AAEC,YAAQ2D,aAAa3D,KAAb,IAAsB,EAAtB,GAA2BA,KAFpC;AAGC,aAASsE,gBAAgB,IAAhB,GAAuBpE,SAHjC;AAIC,eAAWoE,gBAAgB,IAAhB,GAAuBpE,SAJnC;AAKC,gBAAU,6BALX;AAMGwC;AANH,IADD;AAUA;;;mCA2GD;AAAA,OACSV,OADT,GACqB,KAAKpD,KAD1B,CACSoD,OADT;;;AAGC,wBAAqBA,OAArB,kHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QADWe,MACX;;AACC,QAAIY,aAAaZ,OAAO/C,KAApB,CAAJ,EACA;AACC,YAAO,IAAP;AACA;AACD;;AAED,UAAO,KAAP;AACA;;;sCAGD;AAAA,iBAC4B,KAAKpB,KADjC;AAAA,OACSoD,OADT,WACSA,OADT;AAAA,OACkBhC,KADlB,WACkBA,KADlB;;;AAGC,yBAAqBgC,OAArB,yHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QADWe,MACX;;AACC,QAAI,CAACA,OAAOE,OAAR,IAAmBF,OAAO/C,KAAP,KAAiBA,KAAxC,EACA;AACC,YAAO+C,MAAP;AACA;AACD;AACD;;;6BAGD;AAAA,iBACuC,KAAKnE,KAD5C;AAAA,OACS8D,KADT,WACSA,KADT;AAAA,OACgBX,WADhB,WACgBA,WADhB;AAAA,OAC6B/B,KAD7B,WAC6BA,KAD7B;;;AAGC,OAAI2D,aAAa3D,KAAb,CAAJ,EAAyB;AACxB,QAAI+B,WAAJ,EAAiB;AAChB,YAAOW,KAAP;AACA;AACD,IAJD,MAIO;AACN,WAAOA,KAAP;AACA;AACD;;;mCAGD;AAAA,iBACuC,KAAK9D,KAD5C;AAAA,OACS8D,KADT,WACSA,KADT;AAAA,OACgBX,WADhB,WACgBA,WADhB;AAAA,OAC6B/B,KAD7B,WAC6BA,KAD7B;;;AAGC,OAAI2D,aAAa3D,KAAb,CAAJ,EAAyB;AACxB,WAAO+B,eAAeW,KAAtB;AACA;AACD;;;0CAGD;AAAA,iBACoC,KAAK9D,KADzC;AAAA,OACSwC,MADT,WACSA,MADT;AAAA,OACiBC,cADjB,WACiBA,cADjB;;AAEC,UAAO,CAACD,MAAD,IAAW,CAACC,cAAnB;AACA;;;;EAtlBkCtD,a,WAE5ByG,S,GACP;AACC;AACAxC,UAAU,oBAAUyC,OAAV,CAET,oBAAUC,KAAV,CACC;AACA;AACA1E,SAAQ,oBAAU2E,GAFlB;AAGA;AACAjC,SAAQ,oBAAUkC,MAJlB;AAKA;AACApD,QAAQ,oBAAUqD,SAAV,CACP,CACA,oBAAUzF,IADV,EAEA,oBAAU0F,IAFV,CADO,CANR;AAWA;AACA;AACA5B,WAAU,oBAAU4B;AAbpB,EADD,CAFS,EAmBTC,UArBF;;AAuBC;AACAjB,OAAa,oBAAUc,MAxBxB;;AA0BC;AACAlC,QAAa,oBAAUkC,MA3BxB;;AA6BC;AACA7C,cAAc,oBAAU6C,MA9BzB;;AAgCC;AACAxD,SAAc,oBAAU4D,IAAV,CAAeD,UAjC9B;;AAmCC;AACA1D,iBAAiB,oBAAU2D,IAAV,CAAeD,UApCjC;;AAsCC;AACA;AACAjD,cAAc,oBAAUkD,IAAV,CAAeD,UAxC9B;;AA0CC;AACA1E,WAAa,oBAAU2E,IA3CxB;;AA6CC;AACA1E,WAAa,oBAAU0E,IAAV,CAAeD,UA9C7B;;AAgDC;AACA1C,OAAa,oBAAU2C,IAAV,CAAeD,UAjD7B;;AAmDC;AACA/E,QAAa,oBAAU2E,GApDxB;;AAsDC;AACA5D,WAAa,oBAAU+D,IAvDxB;;AAyDC;AACA;AACA;AACA;AACAnG,UAAa,oBAAUmG,IA7DxB;;AA+DC;AACA;AACA;AACA;AACA9D,SAAa,oBAAU8D,IAnExB;;AAqEC;AACA;AACA;AACApD,SAAa,oBAAUsD,IAAV,CAAeD,UAxE7B;;AA0EC;AACAxC,YAAa,oBAAUqC,MA3ExB;;AA6EC;AACAvB,kBAAkB,oBAAUuB,MA9E7B;;AAgFC;AACAtC,QAAa,oBAAU2C,MAjFxB;;AAmFC;AACA;AACA;AACA;AACAzD,OAAa,oBAAUwD,IAvFxB;;AAyFC;AACA;AACA;AACA;AACA;AACAvD,UAAa,oBAAUuD,IA9FxB;;AAgGC;AACAjB,WAAa,oBAAUmB,MAjGxB;;AAmGC;AACA9B,YAAY,oBAAUwB;AApGvB,C,UAuGOO,Y,GACP;AACC/D,SAAS,KADV;AAECC,iBAAiB,KAFlB;;AAICS,cAAc,KAJf;;AAMC;AACAxB,WAAW,KAPZ;;AASC;AACA2B,kBAAkB,IAVnB;;AAYC;AACAI,OAAO,KAbR;;AAeC;AACAX,SAAS,IAhBV;;AAkBCG,YAAY;AAlBb,C;;AAohBD;AACA;;;kBAhoBqB3D,M;AAioBrB,SAASqG,YAAT,CAAsBvE,KAAtB,EACA;AACC,QAAO2D,aAAa3D,KAAb,IAAsB,cAAtB,GAAuCA,KAA9C;AACA;;AAED,SAAS2D,YAAT,CAAsB3D,KAAtB,EACA;AACC,QAAOA,UAAU,IAAV,IAAkBA,UAAUE,SAAnC;AACA","file":"Select.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { polyfill as reactLifecyclesCompat } from 'react-lifecycles-compat'\r\nimport classNames from 'classnames'\r\n\r\nimport ExpandableList from './ExpandableList'\r\nimport List from './List'\r\nimport Label from './TextInputLabel'\r\nimport Ellipsis from './Ellipsis'\r\nimport Divider from './Divider'\r\n\r\nimport { onBlurForReduxForm } from './utility/redux-form'\r\n\r\nimport\r\n{\r\n\tsubmitFormOnCtrlEnter,\r\n\tsubmitContainingForm\r\n}\r\nfrom './utility/dom'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nconst empty_value_option_value = ''\r\n\r\n@reactLifecyclesCompat\r\nexport default class Select extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// A list of selectable options\r\n\t\toptions : PropTypes.arrayOf\r\n\t\t(\r\n\t\t\tPropTypes.shape\r\n\t\t\t({\r\n\t\t\t\t// Option value (may be `undefined`)\r\n\t\t\t\tvalue : PropTypes.any,\r\n\t\t\t\t// Option label (may be `undefined`)\r\n\t\t\t\tlabel : PropTypes.string,\r\n\t\t\t\t// Option icon\r\n\t\t\t\ticon  : PropTypes.oneOfType\r\n\t\t\t\t([\r\n\t\t\t\t\tPropTypes.node,\r\n\t\t\t\t\tPropTypes.func\r\n\t\t\t\t]),\r\n\t\t\t\t// Render custom content (a React component).\r\n\t\t\t\t// Receives `{ value, label }` properties.\r\n\t\t\t\tcontent : PropTypes.func\r\n\t\t\t})\r\n\t\t)\r\n\t\t.isRequired,\r\n\r\n\t\t// HTML form input `name` attribute\r\n\t\tname       : PropTypes.string,\r\n\r\n\t\t// Label which is placed above the select\r\n\t\tlabel      : PropTypes.string,\r\n\r\n\t\t// Placeholder (like \"Choose\")\r\n\t\tplaceholder : PropTypes.string,\r\n\r\n\t\t// Whether to use native `<select/>`\r\n\t\tnative      : PropTypes.bool.isRequired,\r\n\r\n\t\t// Whether to use native `<select/>` when expanded\r\n\t\tnativeExpanded : PropTypes.bool.isRequired,\r\n\r\n\t\t// Show icon only for selected item,\r\n\t\t// and only if `icon` is `true`.\r\n\t\tsaveOnIcons : PropTypes.bool.isRequired,\r\n\r\n\t\t// Disables this control\r\n\t\tdisabled   : PropTypes.bool,\r\n\r\n\t\t// Set to `true` to mark the field as required\r\n\t\trequired   : PropTypes.bool.isRequired,\r\n\r\n\t\t// Set to `true` to display the loading indicator\r\n\t\twait       : PropTypes.bool.isRequired,\r\n\r\n\t\t// Selected option value\r\n\t\tvalue      : PropTypes.any,\r\n\r\n\t\t// Is called when an option is selected\r\n\t\tonChange   : PropTypes.func,\r\n\r\n\t\t// Is called when the select is focused.\r\n\t\t// Can be used for toggling `--focus` CSS class.\r\n\t\t// Not tested.\r\n\t\t// `event` argument can be `undefined`.\r\n\t\tonFocus    : PropTypes.func,\r\n\r\n\t\t// Is called when the select is blurred.\r\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\r\n\t\t// so that it gets the parsed `value` in its `onBlur` handler,\r\n\t\t// not the formatted text.\r\n\t\tonBlur     : PropTypes.func,\r\n\r\n\t\t// If `scroll` is `false`, then options list\r\n\t\t// is not limited in height.\r\n\t\t// Is `true` by default (scrollable).\r\n\t\tscroll     : PropTypes.bool.isRequired,\r\n\r\n\t\t// Component CSS class\r\n\t\tclassName  : PropTypes.string,\r\n\r\n\t\t// `<button/>` toggler CSS class\r\n\t\ttoggleClassName : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle      : PropTypes.object,\r\n\r\n\t\t// If this flag is set to `true`,\r\n\t\t// and `icon` is specified for a selected option,\r\n\t\t// then the selected option will be displayed\r\n\t\t// as icon only, without the label.\r\n\t\ticon       : PropTypes.bool,\r\n\r\n\t\t// If this flag is set to `true`,\r\n\t\t// then it makes `<Select/>` not stretch itself\r\n\t\t// to 100% width by making it `inline-block`.\r\n\t\t// Is set to `true` when `icon` is `true`\r\n\t\t// because it makes sense.\r\n\t\tcompact    : PropTypes.bool,\r\n\r\n\t\t// HTML `tabindex` attribute\r\n\t\ttabIndex   : PropTypes.number,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s `<button/>`\r\n\t\tariaLabel : PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tnative : false,\r\n\t\tnativeExpanded : false,\r\n\r\n\t\tsaveOnIcons : false,\r\n\r\n\t\t// Set to `true` to mark the field as required\r\n\t\trequired : false,\r\n\r\n\t\t// Show `error` (if passed).\r\n\t\tindicateInvalid : true,\r\n\r\n\t\t// Set to `true` to display the loading indicator\r\n\t\twait : false,\r\n\r\n\t\t// Will show scrollbar on overflow.\r\n\t\tscroll : true,\r\n\r\n\t\talignment : 'left'\r\n\t}\r\n\r\n\tstate = {}\r\n\r\n\tfocus = () => this.selectButton.focus()\r\n\r\n\tonCollapse = ({ focusOut }) =>\r\n\t{\r\n\t\tthis.setState({ isExpanded: false })\r\n\r\n\t\tif (!focusOut) {\r\n\t\t\tthis.focus()\r\n\t\t}\r\n\t}\r\n\r\n\tonExpand = () =>\r\n\t{\r\n\t\tconst { onFocus } = this.props\r\n\r\n\t\tif (onFocus) {\r\n\t\t\tonFocus()\r\n\t\t}\r\n\r\n\t\tthis.setState({ isExpanded: true })\r\n\t}\r\n\r\n\texpand     = () => this.list.expand()\r\n\tcollapse   = () => this.list.collapse()\r\n\ttoggle     = () => this.list.toggle()\r\n\r\n\tstoreListRef = (ref) => this.list = ref\r\n\tstoreSelectButton = (node) => this.selectButton = node\r\n\tstoreInputComponentNode = (node) => this.inputComponentNode = node\r\n\r\n\tgetSelectButton = () => this.selectButton\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tupward,\r\n\t\t\ticon,\r\n\t\t\tcompact,\r\n\t\t\tscroll,\r\n\t\t\tscrollMaxItems,\r\n\t\t\tscrollIntoView,\r\n\t\t\talignment,\r\n\t\t\tsaveOnIcons,\r\n\t\t\tnative,\r\n\t\t\tdisabled,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\toptions,\r\n\t\t\tvalue,\r\n\t\t\tonChange,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tcloseLabel,\r\n\t\t\twait,\r\n\t\t\tstyle,\r\n\t\t\tclassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst { isExpanded } = this.state\r\n\r\n\t\tconst containerStyle = { textAlign: alignment }\r\n\r\n\t\tconst label = this.getLabel()\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style ? { ...containerStyle, ...style } : containerStyle }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__select',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__select--compact'  : compact || icon\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName\r\n\t\t\t\t) }>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ this.storeInputComponentNode }\r\n\t\t\t\t\tclassName=\"rrui__input\">\r\n\r\n\t\t\t\t\t{ wait && <Ellipsis/> }\r\n\r\n\t\t\t\t\t{/* A transparent native `<select/>` above (for better UX on mobile devices). */}\r\n\t\t\t\t\t{ !native && this.renderNativeSelect() }\r\n\t\t\t\t\t{/* The currently selected option */}\r\n\t\t\t\t\t{ !native && this.renderSelectButton() }\r\n\r\n\t\t\t\t\t{/* Label */}\r\n\t\t\t\t\t{/* (this label is placed after the \"selected\" button\r\n\t\t\t\t\t     to utilize the CSS `+` selector) */}\r\n\t\t\t\t\t{/* If the `placeholder` wasn't specified\r\n\t\t\t\t\t    but `label` was and no option is currently selected\r\n\t\t\t\t\t    then the `label` becomes the `placeholder`\r\n\t\t\t\t\t    until something is selected */}\r\n\t\t\t\t\t{ label &&\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tid={ id }\r\n\t\t\t\t\t\t\tvalue={ value }\r\n\t\t\t\t\t\t\trequired={ required }\r\n\t\t\t\t\t\t\tinvalid={ indicateInvalid && error }\r\n\t\t\t\t\t\t\tfloats={ false }>\r\n\t\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* The list of selectable options */}\r\n\t\t\t\t\t{ this.shouldShowOptionsList() &&\r\n\t\t\t\t\t\t<ExpandableList\r\n\t\t\t\t\t\t\tref={this.storeListRef}\r\n\t\t\t\t\t\t\tupward={upward}\r\n\t\t\t\t\t\t\talignment={alignment}\r\n\t\t\t\t\t\t\tscrollIntoView={scrollIntoView}\r\n\t\t\t\t\t\t\tscrollMaxItems={scroll === false ? 0 : scrollMaxItems}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\tonChange={this.setValue}\r\n\t\t\t\t\t\t\tonCollapse={this.onCollapse}\r\n\t\t\t\t\t\t\tonExpand={this.onExpand}\r\n\t\t\t\t\t\t\tgetTogglerNode={this.getSelectButton}\r\n\t\t\t\t\t\t\tonFocusOut={this.onFocusOut}\r\n\t\t\t\t\t\t\tonTapOutside={this.collapse}\r\n\t\t\t\t\t\t\tcloseButtonIcon={closeButtonIcon}\r\n\t\t\t\t\t\t\tcloseLabel={closeLabel}\r\n\t\t\t\t\t\t\tclassName={classNames('rrui__shadow', 'rrui__options-list',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'rrui__options-list--left-aligned'  : alignment === 'left',\r\n\t\t\t\t\t\t\t\t'rrui__options-list--right-aligned' : alignment === 'right'\r\n\t\t\t\t\t\t\t})}>\r\n\r\n\t\t\t\t\t\t\t{options.map((option, i) => (\r\n\t\t\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tvalue={option.value}\r\n\t\t\t\t\t\t\t\t\ticon={option.divider || saveOnIcons ? undefined : option.icon}>\r\n\t\t\t\t\t\t\t\t\t{option.divider ? <Divider/> : (option.content ? option.content(option) : option.label)}\r\n\t\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ExpandableList>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* Native `<select/>` */}\r\n\t\t\t\t\t{ native && this.renderNativeSelect() }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Error message */}\r\n\t\t\t\t{ indicateInvalid && error &&\r\n\t\t\t\t\t<div className=\"rrui__input-error\">\r\n\t\t\t\t\t\t{ error }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trenderSelectButton()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\twait,\r\n\t\t\tvalue,\r\n\t\t\tonFocus,\r\n\t\t\tdisabled,\r\n\t\t\trequired,\r\n\t\t\ticon,\r\n\t\t\ttitle,\r\n\t\t\tariaLabel,\r\n\t\t\ttoggleClassName,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst { isExpanded } = this.state\r\n\r\n\t\tconst selected = this.getSelectedOption()\r\n\r\n\t\tconst selectedOptionLabel = selected && selected.label || this.getLabel() || this.getPlaceholder()\r\n\t\tconst showIconOnly = icon && selected && selected.icon\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tref={ this.storeSelectButton }\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\tonFocus={ onFocus }\r\n\t\t\t\tonBlur={ this.onBlur }\r\n\t\t\t\ttabIndex={ -1 }\r\n\t\t\t\ttitle={ title }\r\n\t\t\t\taria-label={ ariaLabel }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__input-element',\r\n\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t'rrui__select__button',\r\n\t\t\t\t\ttoggleClassName,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__select__button--empty'    : isEmptyValue(value) && !this.hasEmptyOption(),\r\n\t\t\t\t\t\t'rrui__select__button--invalid'  : indicateInvalid && error,\r\n\t\t\t\t\t\t'rrui__select__button--disabled' : disabled\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\r\n\t\t\t\t{/* http://stackoverflow.com/questions/35464067/flexbox-not-working-on-button-element-in-some-browsers */}\r\n\t\t\t\t<div className=\"rrui__select__selected-content\">\r\n\r\n\t\t\t\t\t{/* Selected option label (or icon) */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={ classNames('rrui__select__selected-label',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'rrui__select__selected-label--required' : !this.getLabel() && required && isEmptyValue(value)\r\n\t\t\t\t\t\t}) }>\r\n\t\t\t\t\t\t{ showIconOnly ? React.createElement(selected.icon, { value, label: selectedOptionLabel }) : selectedOptionLabel }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* An arrow */}\r\n\t\t\t\t\t{ !wait && <div className=\"rrui__select__arrow\"/> }\r\n\t\t\t\t</div>\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\trenderNativeSelect()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\tlabel,\r\n\t\t\tdisabled,\r\n\t\t\tnative,\r\n\t\t\terror,\r\n\t\t\tindicateInvalid,\r\n\t\t\ttabIndex\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<select\r\n\t\t\t\tref={ this.storeNativeSelect }\r\n\t\t\t\tid={ id }\r\n\t\t\t\tname={ name }\r\n\t\t\t\tvalue={ isEmptyValue(value) ? empty_value_option_value : value }\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonKeyDown={ this.nativeSelectOnKeyDown }\r\n\t\t\t\tonMouseDown={ this.nativeSelectOnMouseDown }\r\n\t\t\t\tonChange={ this.nativeSelectOnChange }\r\n\t\t\t\ttabIndex={ tabIndex }\r\n\t\t\t\tclassName={ classNames('rrui__select__native',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__select__native--overlay' : !native,\r\n\t\t\t\t\t'rrui__select__native--invalid' : indicateInvalid && error\r\n\t\t\t\t}) }>\r\n\t\t\t\t{this.renderNativeSelectOptions()}\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n\r\n\trenderNativeSelectOptions()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\toptions,\r\n\t\t\tvalue,\r\n\t\t\tplaceholder\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet empty_option_present = false\r\n\r\n\t\tconst rendered_options = options.map((option) =>\r\n\t\t{\r\n\t\t\tlet { value, label } = option\r\n\r\n\t\t\tif (isEmptyValue(value))\r\n\t\t\t{\r\n\t\t\t\tempty_option_present = true\r\n\t\t\t\tvalue = empty_value_option_value\r\n\t\t\t}\r\n\r\n\t\t\treturn this.renderNativeSelectOption(value, label)\r\n\t\t})\r\n\r\n\t\tif (isEmptyValue(value) && !empty_option_present)\r\n\t\t{\r\n\t\t\trendered_options.unshift(this.renderNativeSelectOption(undefined, placeholder, true))\r\n\t\t}\r\n\r\n\t\treturn rendered_options\r\n\t}\r\n\r\n\trenderNativeSelectOption(value, label, nonSelectable)\r\n\t{\r\n\t\treturn (\r\n\t\t\t<option\r\n\t\t\t\tkey={ getOptionKey(value) }\r\n\t\t\t\tvalue={ isEmptyValue(value) ? '' : value }\r\n\t\t\t\thidden={ nonSelectable ? true : undefined }\r\n\t\t\t\tdisabled={ nonSelectable ? true : undefined }\r\n\t\t\t\tclassName=\"rrui__select__native-option\">\r\n\t\t\t\t{ label }\r\n\t\t\t</option>\r\n\t\t)\r\n\t}\r\n\r\n\tnativeSelectOnKeyDown = (event) =>\r\n\t{\r\n\t\tif (this.shouldShowOptionsList())\r\n\t\t{\r\n\t\t\tthis.focus()\r\n\t\t\tthis.onKeyDownFromNativeSelect = true\r\n\t\t\tthis.onKeyDown(event)\r\n\t\t}\r\n\t}\r\n\r\n\tnativeSelectOnMouseDown = (event) =>\r\n\t{\r\n\t\tif (this.shouldShowOptionsList())\r\n\t\t{\r\n\t\t\tevent.preventDefault()\r\n\t\t\tthis.focus()\r\n\t\t\tthis.toggle()\r\n\t\t}\r\n\t}\r\n\r\n\tnativeSelectOnChange = (event) =>\r\n\t{\r\n\t\tlet value = event.target.value\r\n\r\n\t\t// Convert back from an empty string to `undefined`\r\n\t\tif (value === empty_value_option_value)\r\n\t\t{\r\n\t\t\t// `null` is not accounted for, use `undefined` instead.\r\n\t\t\tvalue = undefined\r\n\t\t}\r\n\r\n\t\tthis.setValue(value)\r\n\t}\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst { disabled } = this.props\r\n\r\n\t\tif (!disabled) {\r\n\t\t\tthis.toggle()\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { disabled, value, required } = this.props\r\n\t\tconst { isExpanded } = this.state\r\n\r\n\t\t// Reset \"event came from native select\" flag.\r\n\t\tconst fromNativeSelect = this.onKeyDownFromNativeSelect\r\n\t\tthis.onKeyDownFromNativeSelect = false\r\n\r\n\t\tif (disabled) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!isExpanded) {\r\n\t\t\tif (submitFormOnCtrlEnter(event, this.selectButton)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// \"Up\" arrow.\r\n\t\t\t// Select the previous item (if present).\r\n\t\t\tcase 38:\r\n\t\t\t// \"Down\" arrow.\r\n\t\t\t// Select the next item (if present).\r\n\t\t\tcase 40:\r\n\t\t\t\treturn this.list.onKeyDown(event)\r\n\r\n\t\t\t// \"Enter\".\r\n\t\t\tcase 13:\r\n\t\t\t\t// Submit containing `<form/>`.\r\n\t\t\t\t// Expand otherwise.\r\n\t\t\t\tif (required || !submitContainingForm(this.selectButton)) {\r\n\t\t\t\t\tthis.expand()\r\n\t\t\t\t}\r\n\t\t\t\treturn event.preventDefault()\r\n\r\n\t\t\t// \"Spacebar\".\r\n\t\t\tcase 32:\r\n\t\t\t\tif (fromNativeSelect)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Known bug:\r\n\t\t\t\t\t// Firefox is stubborn with Spacebar key not being \"preventDefault\"ed.\r\n\t\t\t\t\t// https://stackoverflow.com/questions/15141398/cannot-preventdefault-via-firefox-on-a-select\r\n\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\tthis.expand()\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\thasEmptyOption()\r\n\t{\r\n\t\tconst { options } = this.props\r\n\r\n\t\tfor (const option of options)\r\n\t\t{\r\n\t\t\tif (isEmptyValue(option.value))\r\n\t\t\t{\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tgetSelectedOption()\r\n\t{\r\n\t\tconst { options, value } = this.props\r\n\r\n\t\tfor (const option of options)\r\n\t\t{\r\n\t\t\tif (!option.divider && option.value === value)\r\n\t\t\t{\r\n\t\t\t\treturn option\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetLabel()\r\n\t{\r\n\t\tconst { label, placeholder, value } = this.props\r\n\r\n\t\tif (isEmptyValue(value)) {\r\n\t\t\tif (placeholder) {\r\n\t\t\t\treturn label\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn label\r\n\t\t}\r\n\t}\r\n\r\n\tgetPlaceholder()\r\n\t{\r\n\t\tconst { label, placeholder, value } = this.props\r\n\r\n\t\tif (isEmptyValue(value)) {\r\n\t\t\treturn placeholder || label\r\n\t\t}\r\n\t}\r\n\r\n\tshouldShowOptionsList()\r\n\t{\r\n\t\tconst { native, nativeExpanded } = this.props\r\n\t\treturn !native && !nativeExpanded\r\n\t}\r\n\r\n\tsetValue = (newValue) =>\r\n\t{\r\n\t\tconst { value, onChange } = this.props\r\n\r\n\t\t// Call `onChange` only if the `value` did change.\r\n\t\tif (newValue !== value) {\r\n\t\t\tonChange(newValue)\r\n\t\t}\r\n\t}\r\n\r\n\tonBlur = (event) =>\r\n\t{\r\n\t\tconst { onBlur, value } = this.props\r\n\r\n\t\tif (this.list) {\r\n\t\t\tthis.list.onBlur(event)\r\n\t\t}\r\n\r\n\t\t// When the `<button/>` was focused out\r\n\t\t// while there was no list being shown.\r\n\t\tif (onBlur && this.list && this.list.expandable && !this.list.expandable.container) {\r\n\t\t\tonBlurForReduxForm(onBlur, event, value)\r\n\t\t}\r\n\t}\r\n\r\n\tonFocusOut = (event) =>\r\n\t{\r\n\t\tconst { onBlur, value, native, nativeExpanded } = this.props\r\n\r\n\t\tif (!native && !nativeExpanded) {\r\n\t\t\tthis.collapse()\r\n\t\t}\r\n\r\n\t\tif (onBlur) {\r\n\t\t\tonBlurForReduxForm(onBlur, event, value)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// There can be an `undefined` value,\r\n// so just `{ value }` won't do here.\r\nfunction getOptionKey(value)\r\n{\r\n\treturn isEmptyValue(value) ? '@@rrui/empty' : value\r\n}\r\n\r\nfunction isEmptyValue(value)\r\n{\r\n\treturn value === null || value === undefined\r\n}"]}