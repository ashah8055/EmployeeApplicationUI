'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = parsePhoneNumber;

var _PhoneNumber = require('./PhoneNumber');

var _PhoneNumber2 = _interopRequireDefault(_PhoneNumber);

var _parse = require('./parse');

var _parse2 = _interopRequireDefault(_parse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parsePhoneNumber(text, defaultCountry, metadata) {
	if (isObject(defaultCountry)) {
		metadata = defaultCountry;
		defaultCountry = undefined;
	}
	return (0, _parse2.default)(text, { defaultCountry: defaultCountry, v2: true }, metadata);
}

// so istanbul will show this as "branch not covered".
/* istanbul ignore next */
var isObject = function isObject(_) {
	return (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';
};
//# sourceMappingURL=parsePhoneNumber.js.map