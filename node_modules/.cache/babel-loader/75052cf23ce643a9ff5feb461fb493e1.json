{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Amar/emp/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchLoginUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheet),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheetCalander),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchSaveTimeSheetCalander),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service';\n\nfunction fetchLoginUser(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.firstname = \"asdfg\"; //action.code;\n\n          formBody.lastname = \"zxcvbb\"; //action.provider;\n\n          formBody.age = \"34\"; //const reqMethod = \"POST\";\n\n          reqMethod = \"GET\";\n          loginUrl = 'http://localhost:8080/veiw';\n          _context.next = 10;\n          return call(GetDataFromServer, loginUrl, '', '');\n\n        case 10:\n          response = _context.sent;\n          console.log(\"dkjfhsdkjfh\" + JSON.stringify(response));\n          _context.next = 14;\n          return response.json();\n\n        case 14:\n          result = _context.sent;\n          console.log(result.workingdetails.employeeId);\n          console.log(\"Result ->\" + JSON.stringify(result));\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 21;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 21:\n          _context.next = 25;\n          break;\n\n        case 23:\n          _context.next = 25;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 25:\n          _context.next = 30;\n          break;\n\n        case 27:\n          _context.prev = 27;\n          _context.t0 = _context[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context.t0);\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 27]]);\n}\n\nfunction fetchTimeSheet(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n          _context2.prev = 1;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.selectWeek = action.selectWeek; //action.provider;\n\n          formBody.jobTitle = action.jobTitle;\n          formBody.approver = action.approver;\n          formBody.client = action.client;\n          formBody.endDate = action.endDate;\n          formBody.projectId = action.projectId; //const reqMethod = \"POST\";\n\n          reqMethod = \"POST\";\n          loginUrl = 'http://localhost:8080/create';\n          _context2.next = 14;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 14:\n          response = _context2.sent;\n          _context2.next = 17;\n          return response.json();\n\n        case 17:\n          result = _context2.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context2.next = 24;\n            break;\n          }\n\n          _context2.next = 22;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 22:\n          _context2.next = 26;\n          break;\n\n        case 24:\n          _context2.next = 26;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 26:\n          _context2.next = 31;\n          break;\n\n        case 28:\n          _context2.prev = 28;\n          _context2.t0 = _context2[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context2.t0);\n\n        case 31:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 28]]);\n}\n\nfunction fetchTimeSheetCalander(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheetCalander$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"Submit Action->\" + JSON.stringify(action));\n          _context3.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          reqMethod = \"POST\";\n          loginUrl = 'http://localhost:8080/submit';\n          _context3.next = 8;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 8:\n          response = _context3.sent;\n          _context3.next = 11;\n          return response.json();\n\n        case 11:\n          result = _context3.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context3.next = 18;\n            break;\n          }\n\n          _context3.next = 16;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 16:\n          _context3.next = 20;\n          break;\n\n        case 18:\n          _context3.next = 20;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 20:\n          _context3.next = 25;\n          break;\n\n        case 22:\n          _context3.prev = 22;\n          _context3.t0 = _context3[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context3.t0);\n\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[1, 22]]);\n}\n\nfunction fetchSaveTimeSheetCalander(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchSaveTimeSheetCalander$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n          _context4.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          reqMethod = \"POST\";\n          loginUrl = 'http://localhost:8080/timesheet/save';\n          _context4.next = 8;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 8:\n          response = _context4.sent;\n          _context4.next = 11;\n          return response.json();\n\n        case 11:\n          result = _context4.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context4.next = 18;\n            break;\n          }\n\n          _context4.next = 16;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 16:\n          _context4.next = 20;\n          break;\n\n        case 18:\n          _context4.next = 20;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 20:\n          _context4.next = 25;\n          break;\n\n        case 22:\n          _context4.prev = 22;\n          _context4.t0 = _context4[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context4.t0);\n\n        case 25:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[1, 22]]);\n}\n\nexport default function rootSaga(params) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(Types.LOGIN_USER, fetchLoginUser);\n\n        case 2:\n          _context5.next = 4;\n          return takeEvery(Types.CREATE_TIMESHEET, fetchTimeSheet);\n\n        case 4:\n          _context5.next = 6;\n          return takeEvery(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n\n        case 6:\n          _context5.next = 8;\n          return takeEvery(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/store/sagas.js"],"names":["fetchLoginUser","fetchTimeSheet","fetchTimeSheetCalander","fetchSaveTimeSheetCalander","rootSaga","takeEvery","call","put","select","take","fork","all","takeLatest","Types","GetDataFromServer","action","console","log","JSON","stringify","formBody","firstname","lastname","age","reqMethod","loginUrl","response","json","result","workingdetails","employeeId","error","type","LOGIN_USER_SERVER_RESPONSE_SUCCESS","selectWeek","jobTitle","approver","client","endDate","projectId","submitTimeSheet","params","LOGIN_USER","CREATE_TIMESHEET","CREATE_TIMESHEET_WORKINGHOUR","CREATE_TIMESHEET_SAVE_WORKINGHOUR"],"mappings":"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","sourcesContent":["import { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service';\n\n\n\nfunction* fetchLoginUser(action) {\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.firstname = \"asdfg\";//action.code;\n    formBody.lastname = \"zxcvbb\"; //action.provider;\n    formBody.age = \"34\"\n    //const reqMethod = \"POST\";\n    const reqMethod = \"GET\";\n    const loginUrl = 'http://localhost:8080/veiw';\n    const response = yield call(GetDataFromServer, loginUrl, '', '');\n    console.log(\"dkjfhsdkjfh\" + JSON.stringify(response));\n\n    const result = yield response.json();\n    console.log(result.workingdetails.employeeId);\n    console.log(\"Result ->\" + JSON.stringify(result))\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\nfunction* fetchTimeSheet(action) {\n  console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.selectWeek = action.selectWeek; //action.provider;\n    formBody.jobTitle = action.jobTitle;\n    formBody.approver = action.approver;\n    formBody.client = action.client;\n    formBody.endDate = action.endDate;\n    formBody.projectId = action.projectId;\n\n    //const reqMethod = \"POST\";\n    const reqMethod = \"POST\";\n    const loginUrl = 'http://localhost:8080/create';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n}\nfunction* fetchTimeSheetCalander(action) {\n  console.log(\"Submit Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = 'http://localhost:8080/submit';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\nfunction* fetchSaveTimeSheetCalander(action) {\n  console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = 'http://localhost:8080/timesheet/save';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\n\nexport default function* rootSaga(params) {\n  yield takeEvery(Types.LOGIN_USER, fetchLoginUser);\n  yield takeEvery(Types.CREATE_TIMESHEET, fetchTimeSheet);\n  yield takeEvery(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n  yield takeEvery(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n\n\n}\n"]},"metadata":{},"sourceType":"module"}