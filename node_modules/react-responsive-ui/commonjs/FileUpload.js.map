{"version":3,"sources":["../source/FileUpload.js"],"names":["PureComponent","Component","FileUpload","onFileSelect","event","props","onChange","multiple","action","Error","value","target","files","onClick","disabled","preventDefault","fileInput","click","storeFileInputNode","node","error","dropTarget","draggedOver","style","className","children","HIDDEN","propTypes","func","bool","isRequired","string","object","defaultProps","element","display"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;AAEA;AACA,IAAMA,gBAAgB,gBAAMA,aAAN,IAAuB,gBAAMC,SAAnD;;IAEqBC,U;;;;;;;;;;;;;;4LAgDpBC,Y,GAAe,UAACC,KAAD,EACf;AAAA,qBAC8B,MAAKC,KADnC;AAAA,OACOC,QADP,eACOA,QADP;AAAA,OACiBC,QADjB,eACiBA,QADjB;;AAGC;;AACAD,cAAWA,YAAY,MAAKD,KAAL,CAAWG,MAAlC;;AAEA;AACA;AACA,OAAI,CAACF,QAAL,EAAe;AACd,UAAM,IAAIG,KAAJ,kCAAN;AACA;;AAED,OAAMC,QAAQN,MAAMO,MAAN,CAAaC,KAA3B;AACAN,YAASC,WAAWG,KAAX,GAAmBA,MAAM,CAAN,CAA5B;;AAEA;AACA;AACA;AACAN,SAAMO,MAAN,CAAaD,KAAb,GAAqB,IAArB;AACA,G,QAEDG,O,GAAU,UAACT,KAAD,EACV;AAAA,sBAC+B,MAAKC,KADpC;AAAA,OACSS,QADT,gBACSA,QADT;AAAA,OACmBD,OADnB,gBACmBA,OADnB;;;AAGC,OAAIC,QAAJ,EAAc;AACb,WAAOV,MAAMW,cAAN,EAAP;AACA;;AAED,OAAIF,OAAJ,EAAa;AACZA;AACA;;AAED;AACA,SAAKG,SAAL,CAAeC,KAAf;AACA,G,QAEDC,kB,GAAqB,UAACC,IAAD;AAAA,UAAU,MAAKH,SAAL,GAAiBG,IAA3B;AAAA,G;;;;;2BAGrB;AAAA,gBAYG,KAAKd,KAZR;AAAA,OAGEe,KAHF,UAGEA,KAHF;AAAA,OAIEN,QAJF,UAIEA,QAJF;AAAA,OAKEO,UALF,UAKEA,UALF;AAAA,OAMEC,WANF,UAMEA,WANF;AAAA,OAQEC,KARF,UAQEA,KARF;AAAA,OASEC,SATF,UASEA,SATF;AAAA,OAUEC,QAVF,UAUEA,QAVF;;;AAcC,UACC;AAAA;AAAA;AACC,YAAQF,KADT;AAEC,gBAAY,0BAAW,mBAAX,EAAgCC,SAAhC,CAFb;AAKC;AACC,WAAK,MADN;AAEC,UAAM,KAAKN,kBAFZ;AAGC,cAAU,KAAKL,OAHhB;AAIC,eAAW,KAAKV,YAJjB;AAKC,YAAQuB,MALT,GALD;AAaGL,eACD;AAAA;AAAA;AACC,iBAAY,0BAAW,yBAAX,EACZ;AACC,4CAAsCP,QADvC;AAEC,2CAAqCM,KAFtC;AAGC,gDAA0CE;AAC1C;AAJD,OADY,CADb;AAQC,eAAU,KAAKT,OARhB;AAWGY;AAXH,KADC,CAbH;AA8BGL,aACD;AAAA;AAAA,OAAK,WAAU,mBAAf;AACGA;AADH;AA/BF,IADD;AAsCA;;;;EA7IsCpB,a,UAEhC2B,S,GACP;AACC;AACArB,WAAY,oBAAUsB,IAFvB;;AAIC;AACA;AACApB,SAAY,oBAAUoB,IANvB;;AAQC;AACArB,WAAY,oBAAUsB,IATvB;;AAWC;AACAf,WAAY,oBAAUe,IAZvB;;AAcC;AACAhB,UAAY,oBAAUe,IAfvB;;AAiBC;AACAP,aAAa,oBAAUO,IAAV,CAAeE,UAlB7B;;AAoBC;AACAR,cAAc,oBAAUO,IAAV,CAAeC,UArB9B;;AAuBC;AACA;;AAEA;AACAV,QAAY,oBAAUW,MA3BvB;;AA6BC;AACAN,WAAY,oBAAUN,IA9BvB;;AAgCC;AACAK,YAAY,oBAAUO,MAjCvB;;AAmCC;AACAR,QAAY,oBAAUS;AApCvB,C,SAuCOC,Y,GACP;AACCZ,aAAc;AAAA,SAAWa,OAAX;AAAA,EADf;AAECZ,cAAc;AAFf,C;kBA3CoBpB,U;;;AAgJrB,IAAMwB,SACN;AACCS,UAAS;AADV,CADA","file":"FileUpload.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class FileUpload extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// On file(s) chosen.\r\n\t\tonChange  : PropTypes.func,\r\n\r\n\t\t// (deprecated, use `onChange` instead).\r\n\t\t// On file(s) chosen.\r\n\t\taction    : PropTypes.func,\r\n\r\n\t\t// Allows choosing multiple files if `true`.\r\n\t\tmultiple  : PropTypes.bool,\r\n\r\n\t\t// Disables the file input.\r\n\t\tdisabled  : PropTypes.bool,\r\n\r\n\t\t// `onClick` handler.\r\n\t\tonClick   : PropTypes.func,\r\n\r\n\t\t// `react-dnd` `dropTarget()`.\r\n\t\tdropTarget : PropTypes.func.isRequired,\r\n\r\n\t\t// `react-dnd` `draggedOver`.\r\n\t\tdraggedOver : PropTypes.bool.isRequired,\r\n\r\n\t\t// `react-dnd` `canDrop()`.\r\n\t\t// canDrop : PropTypes.bool.isRequired,\r\n\r\n\t\t// Renders an error message below the `<input/>`.\r\n\t\terror     : PropTypes.string,\r\n\r\n\t\t// The clickable area, like \"Click here to choose a file\".\r\n\t\tchildren  : PropTypes.node,\r\n\r\n\t\t// CSS class\r\n\t\tclassName : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle     : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tdropTarget  : element => element,\r\n\t\tdraggedOver : false\r\n\t}\r\n\r\n\tonFileSelect = (event) =>\r\n\t{\r\n\t\tlet { onChange, multiple } = this.props\r\n\r\n\t\t// `action` property is deprecated.\r\n\t\tonChange = onChange || this.props.action\r\n\r\n\t\t// This check will be replaced with `onChange : PropTypes.func.isRequired`\r\n\t\t// when `action` property is removed in some next breaking release.\r\n\t\tif (!onChange) {\r\n\t\t\tthrow new Error(`\"onChange\" handler not passed.`)\r\n\t\t}\r\n\r\n\t\tconst value = event.target.files\r\n\t\tonChange(multiple ? value : value[0])\r\n\r\n\t\t// Reset the selected file\r\n\t\t// so that `onChange` is triggered again next time\r\n\t\t// even if the user selects the same file.\r\n\t\tevent.target.value = null\r\n\t}\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst { disabled, onClick } = this.props\r\n\r\n\t\tif (disabled) {\r\n\t\t\treturn event.preventDefault()\r\n\t\t}\r\n\r\n\t\tif (onClick) {\r\n\t\t\tonClick()\r\n\t\t}\r\n\r\n\t\t// This is why `onClick` is set on the `<input/>`.\r\n\t\tthis.fileInput.click()\r\n\t}\r\n\r\n\tstoreFileInputNode = (node) => this.fileInput = node\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\terror,\r\n\t\t\tdisabled,\r\n\t\t\tdropTarget,\r\n\t\t\tdraggedOver,\r\n\t\t\t// canDrop,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ classNames('rrui__file-upload', className) }>\r\n\r\n\t\t\t\t{/* Hidden. */}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tref={ this.storeFileInputNode }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonChange={ this.onFileSelect }\r\n\t\t\t\t\tstyle={ HIDDEN }/>\r\n\r\n\t\t\t\t{/* The actual clickable area. */}\r\n\t\t\t\t{ dropTarget(\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={ classNames('rrui__file-upload__area',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'rrui__file-upload__area--disabled' : disabled,\r\n\t\t\t\t\t\t\t'rrui__file-upload__area--invalid' : error,\r\n\t\t\t\t\t\t\t'rrui__file-upload__area--dragged-over' : draggedOver,\r\n\t\t\t\t\t\t\t// 'rrui__file-upload__area--can-not-drop' : !canDrop\r\n\t\t\t\t\t\t}) }\r\n\t\t\t\t\t\tonClick={ this.onClick }>\r\n\r\n\t\t\t\t\t\t{/* Could be an \"UPLOAD\" button or something. */}\r\n\t\t\t\t\t\t{ children }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) }\r\n\r\n\t\t\t\t{/* Error message (e.g. \"Required\"). */}\r\n\t\t\t\t{ error &&\r\n\t\t\t\t\t<div className=\"rrui__input-error\">\r\n\t\t\t\t\t\t{ error }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst HIDDEN =\r\n{\r\n\tdisplay: 'none'\r\n}"]}