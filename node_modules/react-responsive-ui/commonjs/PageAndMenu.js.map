{"version":3,"sources":["../source/PageAndMenu.js"],"names":["Context","PageAndMenu","toggleMenu","menu","toggle","setState","menuIsExpanded","isShown","registerMenu","Error","undefined","registerMenuButton","menuButton","hide_menu_on_mouse_down","event","element","contains","target","state","props"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,IAAMA,4BAAU,mCAAhB;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;IAEqBC,W;;;AAEpB;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACA;AAAA;;AAGC;AACA;AAJD;;AAAA,QA0BAC,UA1BA,GA0Ba,YACb;AACC,SAAKC,IAAL,CAAUC,MAAV,CAAiB,YACjB;AACC,UAAKC,QAAL,CAAc;AACbC,qBAAiB,MAAKH,IAAL,CAAUI,OAAV;AADJ,KAAd;AAGA,IALD;AAMA,GAlCD;;AAAA,QAoCAC,YApCA,GAoCe,UAACL,IAAD,EACf;AACC,OAAI,MAAKA,IAAT,EAAe;AACd,UAAM,IAAIM,KAAJ,CAAU,yEAAV,CAAN;AACA;;AAED,SAAKN,IAAL,GAAYA,IAAZ;;AAEA;AACA,UAAO;AAAA,WAAM,MAAKA,IAAL,GAAYO,SAAlB;AAAA,IAAP;AACA,GA9CD;;AAAA,QAgDAC,kBAhDA,GAgDqB,UAACC,UAAD,EACrB;AACC,OAAI,MAAKA,UAAT,EAAqB;AACpB,UAAM,IAAIH,KAAJ,CAAU,gFAAV,CAAN;AACA;;AAED,SAAKG,UAAL,GAAkBA,UAAlB;;AAEA;AACA,UAAO;AAAA,WAAM,MAAKA,UAAL,GAAkBF,SAAxB;AAAA,IAAP;AACA,GA1DD;;AAAA,QA4DAG,uBA5DA,GA4D0B,UAACC,KAAD,EAC1B;AACC,OAAI,CAAC,MAAKX,IAAN,IAAc,CAAC,MAAKS,UAAxB,EACA;AACC;AACA;;AAED;AACA,OAAI,MAAKT,IAAL,CAAUY,OAAV,GAAoBC,QAApB,CAA6BF,MAAMG,MAAnC,KACD,MAAKL,UAAL,CAAgBG,OAAhB,GAA0BC,QAA1B,CAAmCF,MAAMG,MAAzC,CADH,EAEA;AACC;AACA;;AAED,OAAI,MAAKd,IAAL,CAAUI,OAAV,EAAJ,EAAyB;AACxB,UAAKL,UAAL;AACA;AACD,GA7ED;;AAKC,QAAKgB,KAAL,GACA;AACCZ,mBAAqB,KADtB;AAECJ,eAAqB,MAAKA,UAF3B;AAGCM,iBAAqB,MAAKA,YAH3B;AAICG,uBAAqB,MAAKA;AAJ3B,GADA;AALD;AAYC;;;;2BAGD;AACC,UACC;AAAC,WAAD,CAAS,QAAT;AAAA,MAAkB,OAAQ,KAAKO,KAA/B;AACC;AACC,mBAAe,KAAKL,uBADrB;AAEC,kBAAc,KAAKA;AAFpB,OAGM,KAAKM,KAHX;AADD,IADD;AAQA;;;;;;kBAlCmBlB,W","file":"PageAndMenu.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport createContext from 'create-react-context'\r\n\r\nexport const Context = createContext()\r\n\r\n// export const contextPropTypes =\r\n// {\r\n// \tmenuIsExpanded     : PropTypes.bool.isRequired,\r\n// \ttoggleMenu         : PropTypes.func.isRequired,\r\n// \tregisterMenu       : PropTypes.func.isRequired,\r\n// \tregisterMenuButton : PropTypes.func.isRequired\r\n// }\r\n\r\nexport default class PageAndMenu extends Component\r\n{\r\n\t// state =\r\n\t// {\r\n\t// \tshow_menu  : false,\r\n\t// \tmenu_width : 0,\r\n\t// \tpage_moved_aside : false\r\n\t// }\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper()\r\n\r\n\t\t// `state` is placed here to so that it's initialized\r\n\t\t// after all instance methods because it references them.\r\n\t\tthis.state =\r\n\t\t{\r\n\t\t\tmenuIsExpanded     : false,\r\n\t\t\ttoggleMenu         : this.toggleMenu,\r\n\t\t\tregisterMenu       : this.registerMenu,\r\n\t\t\tregisterMenuButton : this.registerMenuButton\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={ this.state }>\r\n\t\t\t\t<div\r\n\t\t\t\t\tonTouchStart={ this.hide_menu_on_mouse_down }\r\n\t\t\t\t\tonMouseDown={ this.hide_menu_on_mouse_down }\r\n\t\t\t\t\t{ ...this.props }/>\r\n\t\t\t</Context.Provider>\r\n\t\t)\r\n\t}\r\n\r\n\ttoggleMenu = () =>\r\n\t{\r\n\t\tthis.menu.toggle(() =>\r\n\t\t{\r\n\t\t\tthis.setState({\r\n\t\t\t\tmenuIsExpanded : this.menu.isShown()\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tregisterMenu = (menu) =>\r\n\t{\r\n\t\tif (this.menu) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu registered for this page.')\r\n\t\t}\r\n\r\n\t\tthis.menu = menu\r\n\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => this.menu = undefined\r\n\t}\r\n\r\n\tregisterMenuButton = (menuButton) =>\r\n\t{\r\n\t\tif (this.menuButton) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu button registered for this page.')\r\n\t\t}\r\n\r\n\t\tthis.menuButton = menuButton\r\n\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => this.menuButton = undefined\r\n\t}\r\n\r\n\thide_menu_on_mouse_down = (event) =>\r\n\t{\r\n\t\tif (!this.menu || !this.menuButton)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Hide the menu only if clicked outside\r\n\t\tif (this.menu.element().contains(event.target)\r\n\t\t|| this.menuButton.element().contains(event.target))\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (this.menu.isShown()) {\r\n\t\t\tthis.toggleMenu()\r\n\t\t}\r\n\t}\r\n}"]}