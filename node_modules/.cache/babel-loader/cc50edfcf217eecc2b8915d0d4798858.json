{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SubMenu as RcSubMenu } from 'rc-menu';\nimport classNames from 'classnames';\n\nvar SubMenu = function (_React$Component) {\n  _inherits(SubMenu, _React$Component);\n\n  function SubMenu() {\n    _classCallCheck(this, SubMenu);\n\n    var _this = _possibleConstructorReturn(this, (SubMenu.__proto__ || Object.getPrototypeOf(SubMenu)).apply(this, arguments));\n\n    _this.onKeyDown = function (e) {\n      _this.subMenu.onKeyDown(e);\n    };\n\n    _this.saveSubMenu = function (subMenu) {\n      _this.subMenu = subMenu;\n    };\n\n    return _this;\n  }\n\n  _createClass(SubMenu, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          rootPrefixCls = _props.rootPrefixCls,\n          className = _props.className;\n      var theme = this.context.antdMenuTheme;\n      return React.createElement(RcSubMenu, _extends({}, this.props, {\n        ref: this.saveSubMenu,\n        popupClassName: classNames(rootPrefixCls + '-' + theme, className)\n      }));\n    }\n  }]);\n\n  return SubMenu;\n}(React.Component);\n\nSubMenu.contextTypes = {\n  antdMenuTheme: PropTypes.string\n}; // fix issue:https://github.com/ant-design/ant-design/issues/8666\n\nSubMenu.isSubMenu = 1;\nexport default SubMenu;","map":null,"metadata":{},"sourceType":"module"}