{"ast":null,"code":"import _objectSpread from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as Types from \"../actions/types\";\nvar initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n};\n\nvar handleLoginServerResponseSuccess = function handleLoginServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"result\": Object.assign({}, action.result)\n    });\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleLoginServerResponseError = function handleLoginServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, {\n        \"loggedIn\": false,\n        \"isValidToken\": false,\n        \"pending\": true\n      });\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state, action);\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state, action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\React\\EmployeeApplicationUI\\src\\redux\\reducers\\auth.js"],"names":["Types","initialUserObj","handleLoginServerResponseSuccess","state","action","newState","result","undefined","Object","assign","handleLoginServerResponseError","type","LOGIN_USER","LOGIN_USER_SERVER_RESPONSE_ERROR","LOGIN_USER_SERVER_RESPONSE_SUCCESS"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,IAAMC,cAAc,GAAG;AACrB,qBAAkB,EADG;AAErB,aAAW,KAFU;AAGrB,cAAY,KAHS;AAIrB,kBAAgB,KAJK;AAKrB,gBAAc,KALO;AAMrB,gBAAc,EANO;AAOrB,YAAS,EAPY;AAQrB,UAAO;AAAE,aAAS,EAAX;AACE,mBAAe,EADjB;AAEE,kBAAc,KAFhB;AAGE,oBAAgB,EAHlB;AAIE,iBAAa,EAJf;AAKE,qBAAiB,KALnB;AAME,kBAAc,EANhB;AAOE,gBAAY,KAPd;AAQE,mBAAe,EARjB;AASE,iBAAa;AATf;AARc,CAAvB;;AAsBA,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1D,MAAIC,QAAQ,qBAAOF,KAAP,CAAZ;;AACA,MAAGC,MAAM,CAACE,MAAP,KAAkBC,SAArB,EAA+B;AAC7BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAC,gBAAWK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,MAAzB;AAAZ,KAAzB,CAAX;AAED;;AACD,2BAAWD,QAAX;AACD,CAPD;;AAQA,IAAMK,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACP,KAAD,EAAQC,MAAR,EAAmB;AACxD,MAAIC,QAAQ,qBAAOF,KAAP,CAAZ;;AACA,2BAAWE,QAAX;AACD,CAHD;;AAKA,gBAAe,YAAoC;AAAA,MAAnCF,KAAmC,uEAA3BF,cAA2B;AAAA,MAAXG,MAAW;;AAC/C,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKX,KAAK,CAACY,UAAX;AACI,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAwB;AAAE,oBAAY,KAAd;AAAoB,wBAAe,KAAnC;AAA0C,mBAAU;AAApD,OAAxB,CAAP;;AACJ,SAAKH,KAAK,CAACa,gCAAX;AACQ,aAAOH,8BAA8B,CAACP,KAAD,EAAQC,MAAR,CAArC;;AACR,SAAKJ,KAAK,CAACc,kCAAX;AACQ,aAAOZ,gCAAgC,CAACC,KAAD,EAAQC,MAAR,CAAvC;;AACR;AACI,aAAOD,KAAP;AARR;AAUH,CAXD","sourcesContent":["import * as Types from \"../actions/types\";\r\n\r\nconst initialUserObj = {\r\n  \"signUpUsersList\":[],\r\n  \"pending\": false,\r\n  \"loggedIn\": false,\r\n  \"isValidToken\": false,\r\n  \"isBusiness\": false,\r\n  \"empDetails\": {},\r\n  \"result\":{},\r\n  \"user\":{ \"email\": \"\",\r\n           \"displayName\": \"\",\r\n           \"registered\": false,\r\n           \"refreshToken\": \"\",\r\n           \"expiresIn\": \"\",\r\n           \"emailVerified\": false,\r\n           \"validSince\": \"\",\r\n           \"disabled\": false,\r\n           \"lastLoginAt\": \"\",\r\n           \"createdAt\": \"\"}\r\n\r\n};\r\n\r\n\r\nconst handleLoginServerResponseSuccess = (state, action) => {\r\n  let newState = {...state};\r\n  if(action.result !== undefined){\r\n    newState = Object.assign({}, state, {\"result\" : Object.assign({}, action.result)})\r\n    \r\n  }\r\n  return {...newState};\r\n}\r\nconst handleLoginServerResponseError = (state, action) => {\r\n  let newState = {...state};\r\n  return {...newState};\r\n}\r\n\r\nexport default (state = initialUserObj, action) => {\r\n    switch(action.type){\r\n        case Types.LOGIN_USER :\r\n            return Object.assign({}, state,{ \"loggedIn\" :false,\"isValidToken\":false, \"pending\":true});\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_ERROR :\r\n                return handleLoginServerResponseError(state, action);\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS :\r\n                return handleLoginServerResponseSuccess(state, action);       \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}