{"ast":null,"code":"import _objectSpread from \"C:\\\\React\\\\EmployeeApplicationUI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as Types from \"./types\";\nvar initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n};\n\nvar handleLoginServerResponseSuccess = function handleLoginServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"result\": Object.assign({}, action.result)\n    });\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleLoginServerResponseError = function handleLoginServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nexport var loginUser = function loginUser(username, password) {\n  return {\n    type: Types.LOGIN_USER,\n    username: username,\n    password: password\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, {\n        \"loggedIn\": false,\n        \"isValidToken\": false,\n        \"pending\": true\n      });\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state, action);\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state, action);\n\n    default:\n      return state;\n  }\n});\nexport var validateUserSuccess = function validateUserSuccess(response) {\n  return {\n    type: Types.VALIDATE_USER_SERVER_RESPONSE_SUCCESS,\n    response: response\n  };\n};\nexport var validateUserFailure = function validateUserFailure(response) {\n  return {\n    type: Types.VALIDATE_USER_SERVER_RESPONSE_ERROR,\n    response: response\n  };\n};\nexport var getUsersList = function getUsersList() {\n  return {\n    type: Types.GET_USERS_LIST\n  };\n};\nexport var getUsersListSuccessResponse = function getUsersListSuccessResponse(response) {\n  return {\n    type: Types.GET_USERS_LIST_SERVER_RESPONSE_SUCCESS,\n    response: response\n  };\n};\nexport var logoutUserSuccess = function logoutUserSuccess(response) {\n  return {\n    type: Types.LOGOUT_USER_SERVER_RESPONSE_SUCCESS,\n    response: response\n  };\n};\nexport var logoutUserFailure = function logoutUserFailure(response) {\n  return {\n    type: Types.LOGOUT_USER_SERVER_REPONSE_ERROR,\n    response: response\n  };\n};\nexport var isUserLoggedIn = function isUserLoggedIn() {\n  return {\n    type: Types.IS_USER_LOGGED_IN\n  };\n};","map":{"version":3,"sources":["C:\\React\\EmployeeApplicationUI\\src\\redux\\actions\\auth.js"],"names":["Types","initialUserObj","handleLoginServerResponseSuccess","state","action","newState","result","undefined","Object","assign","handleLoginServerResponseError","loginUser","username","password","type","LOGIN_USER","LOGIN_USER_SERVER_RESPONSE_ERROR","LOGIN_USER_SERVER_RESPONSE_SUCCESS","validateUserSuccess","response","VALIDATE_USER_SERVER_RESPONSE_SUCCESS","validateUserFailure","VALIDATE_USER_SERVER_RESPONSE_ERROR","getUsersList","GET_USERS_LIST","getUsersListSuccessResponse","GET_USERS_LIST_SERVER_RESPONSE_SUCCESS","logoutUserSuccess","LOGOUT_USER_SERVER_RESPONSE_SUCCESS","logoutUserFailure","LOGOUT_USER_SERVER_REPONSE_ERROR","isUserLoggedIn","IS_USER_LOGGED_IN"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,IAAMC,cAAc,GAAG;AACrB,qBAAkB,EADG;AAErB,aAAW,KAFU;AAGrB,cAAY,KAHS;AAIrB,kBAAgB,KAJK;AAKrB,gBAAc,KALO;AAMrB,gBAAc,EANO;AAOrB,YAAS,EAPY;AAQrB,UAAO;AAAE,aAAS,EAAX;AACE,mBAAe,EADjB;AAEE,kBAAc,KAFhB;AAGE,oBAAgB,EAHlB;AAIE,iBAAa,EAJf;AAKE,qBAAiB,KALnB;AAME,kBAAc,EANhB;AAOE,gBAAY,KAPd;AAQE,mBAAe,EARjB;AASE,iBAAa;AATf;AARc,CAAvB;;AAsBA,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1D,MAAIC,QAAQ,qBAAOF,KAAP,CAAZ;;AACA,MAAGC,MAAM,CAACE,MAAP,KAAkBC,SAArB,EAA+B;AAC7BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAC,gBAAWK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,MAAzB;AAAZ,KAAzB,CAAX;AAED;;AACD,2BAAWD,QAAX;AACD,CAPD;;AAQA,IAAMK,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACP,KAAD,EAAQC,MAAR,EAAmB;AACxD,MAAIC,QAAQ,qBAAOF,KAAP,CAAZ;;AACA,2BAAWE,QAAX;AACD,CAHD;;AAKA,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAE/C,SAAO;AACLC,IAAAA,IAAI,EAAEd,KAAK,CAACe,UADP;AAELH,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD,CAPM;AASP,gBAAe,YAAoC;AAAA,MAAnCV,KAAmC,uEAA3BF,cAA2B;AAAA,MAAXG,MAAW;;AAC/C,UAAOA,MAAM,CAACU,IAAd;AACI,SAAKd,KAAK,CAACe,UAAX;AACI,aAAOP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAwB;AAAE,oBAAY,KAAd;AAAoB,wBAAe,KAAnC;AAA0C,mBAAU;AAApD,OAAxB,CAAP;;AACJ,SAAKH,KAAK,CAACgB,gCAAX;AACQ,aAAON,8BAA8B,CAACP,KAAD,EAAQC,MAAR,CAArC;;AACR,SAAKJ,KAAK,CAACiB,kCAAX;AACQ,aAAOf,gCAAgC,CAACC,KAAD,EAAQC,MAAR,CAAvC;;AACR;AACI,aAAOD,KAAP;AARR;AAUH,CAXD;AAYA,OAAO,IAAMe,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,QAAQ;AAAA,SAAK;AAC9CL,IAAAA,IAAI,EAAEd,KAAK,CAACoB,qCADkC;AAE9CD,IAAAA,QAAQ,EAARA;AAF8C,GAAL;AAAA,CAApC;AAKP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAF,QAAQ;AAAA,SAAK;AAC9CL,IAAAA,IAAI,EAAEd,KAAK,CAACsB,mCADkC;AAE9CH,IAAAA,QAAQ,EAARA;AAF8C,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AACjCT,IAAAA,IAAI,EAACd,KAAK,CAACwB;AADsB,GAAP;AAAA,CAArB;AAIP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACN,QAAD;AAAA,SAAe;AACxDL,IAAAA,IAAI,EAACd,KAAK,CAAC0B,sCAD6C;AAExDP,IAAAA,QAAQ,EAARA;AAFwD,GAAf;AAAA,CAApC;AAMP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAR,QAAQ;AAAA,SAAK;AAC5CL,IAAAA,IAAI,EAAEd,KAAK,CAAC4B,mCADgC;AAE5CT,IAAAA,QAAQ,EAARA;AAF4C,GAAL;AAAA,CAAlC;AAKP,OAAO,IAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAV,QAAQ;AAAA,SAAK;AAC5CL,IAAAA,IAAI,EAAEd,KAAK,CAAC8B,gCADgC;AAE5CX,IAAAA,QAAQ,EAARA;AAF4C,GAAL;AAAA,CAAlC;AAMP,OAAO,IAAMY,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACnCjB,IAAAA,IAAI,EAAEd,KAAK,CAACgC;AADuB,GAAP;AAAA,CAAvB","sourcesContent":["import * as Types from \"./types\";\r\n\r\nconst initialUserObj = {\r\n  \"signUpUsersList\":[],\r\n  \"pending\": false,\r\n  \"loggedIn\": false,\r\n  \"isValidToken\": false,\r\n  \"isBusiness\": false,\r\n  \"empDetails\": {},\r\n  \"result\":{},\r\n  \"user\":{ \"email\": \"\",\r\n           \"displayName\": \"\",\r\n           \"registered\": false,\r\n           \"refreshToken\": \"\",\r\n           \"expiresIn\": \"\",\r\n           \"emailVerified\": false,\r\n           \"validSince\": \"\",\r\n           \"disabled\": false,\r\n           \"lastLoginAt\": \"\",\r\n           \"createdAt\": \"\"}\r\n\r\n};\r\n\r\n\r\nconst handleLoginServerResponseSuccess = (state, action) => {\r\n  let newState = {...state};\r\n  if(action.result !== undefined){\r\n    newState = Object.assign({}, state, {\"result\" : Object.assign({}, action.result)})\r\n    \r\n  }\r\n  return {...newState};\r\n}\r\nconst handleLoginServerResponseError = (state, action) => {\r\n  let newState = {...state};\r\n  return {...newState};\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n\r\n  return {\r\n    type: Types.LOGIN_USER,\r\n    username,\r\n    password\r\n  }\r\n}\r\n\r\nexport default (state = initialUserObj, action) => {\r\n    switch(action.type){\r\n        case Types.LOGIN_USER :\r\n            return Object.assign({}, state,{ \"loggedIn\" :false,\"isValidToken\":false, \"pending\":true});\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_ERROR :\r\n                return handleLoginServerResponseError(state, action);\r\n        case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS :\r\n                return handleLoginServerResponseSuccess(state, action);       \r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport const validateUserSuccess = response => ({\r\n  type: Types.VALIDATE_USER_SERVER_RESPONSE_SUCCESS,\r\n  response\r\n});\r\n\r\nexport const validateUserFailure = response => ({\r\n  type: Types.VALIDATE_USER_SERVER_RESPONSE_ERROR,\r\n  response\r\n});\r\n\r\nexport const getUsersList = () => ({\r\n  type:Types.GET_USERS_LIST  \r\n});\r\n\r\nexport const getUsersListSuccessResponse = (response) => ({\r\n  type:Types.GET_USERS_LIST_SERVER_RESPONSE_SUCCESS,\r\n  response  \r\n})\r\n\r\n\r\nexport const logoutUserSuccess = response => ({\r\n  type: Types.LOGOUT_USER_SERVER_RESPONSE_SUCCESS,\r\n  response\r\n});\r\n\r\nexport const logoutUserFailure = response => ({\r\n  type: Types.LOGOUT_USER_SERVER_REPONSE_ERROR,\r\n  response\r\n});\r\n\r\n\r\nexport const isUserLoggedIn = () => ({\r\n  type: Types.IS_USER_LOGGED_IN\r\n});\r\n"]},"metadata":{},"sourceType":"module"}