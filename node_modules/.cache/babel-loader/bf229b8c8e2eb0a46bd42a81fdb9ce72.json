{"ast":null,"code":"import _defineProperty from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Amar/emp/src/components/Sign Up/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Validator from \"validator\";\nimport { Form, Input, Row, Col, Button, Card } from \"antd\";\nimport InlineError from \"../messages/InlineError\";\nimport { signupUser } from \"../../redux/actions/home\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.onChange = function (e) {\n      return _this.setState({\n        data: _objectSpread({}, _this.state.data, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      var errors = _this.validate(_this.state.data);\n\n      _this.setState({\n        errors: errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        var _this$state$data = _this.state.data,\n            firstName = _this$state$data.firstName,\n            lastName = _this$state$data.lastName,\n            phoneNumber = _this$state$data.phoneNumber,\n            email = _this$state$data.email,\n            password = _this$state$data.password,\n            confirmPassword = _this$state$data.confirmPassword;\n\n        _this.props.dispatch(signupUser({\n          firstName: firstName,\n          lastName: lastName,\n          phoneNumber: phoneNumber,\n          email: email,\n          password: password,\n          confirmPassword: confirmPassword\n        }));\n\n        _this.props.history.push(\"/login\");\n      }\n    };\n\n    _this.validate = function (data) {\n      var errors = {};\n      if (!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n      if (!data.password) errors.password = \"Can't be empty\";\n      if (!data.firstName) errors.firstName = \"Can't be empty\";\n      if (!data.lastName) errors.lastName = \"Can't be empty\";\n      if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\n      if (data.password !== data.confirmPassword) errors.confirmPassword = \"Write the same password\";\n      return errors;\n    };\n\n    _this.state = {\n      data: {\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loading: false,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        error: !!errors.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        value: data.firstName,\n        onChange: this.onChange,\n        placeholder: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), errors.firstName && React.createElement(InlineError, {\n        text: errors.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        value: data.lastName,\n        onChange: this.onChange,\n        placeholder: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), errors.lastName && React.createElement(InlineError, {\n        text: errors.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.phoneNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"phoneNumber\",\n        name: \"phoneNumber\",\n        type: \"tel\",\n        placeholder: \"10 Digits Phone number\",\n        value: data.phoneNumber,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), errors.phoneNumber && React.createElement(InlineError, {\n        text: errors.phoneNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"email\",\n        type: \"text\",\n        name: \"email\",\n        value: data.email,\n        onChange: this.onChange,\n        placeholder: \"email@rsrit.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), errors.email && React.createElement(InlineError, {\n        text: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"password\",\n        type: \"password\",\n        name: \"password\",\n        value: data.password,\n        onChange: this.onChange,\n        placeholder: \"Password (Make it Secure)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), errors.password && React.createElement(InlineError, {\n        text: errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        error: !!errors.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"confirmPassword\",\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: data.confirmPassword,\n        onChange: this.onChange,\n        placeholder: \"Same as Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), errors.confirmPassword && React.createElement(InlineError, {\n        text: errors.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nSignup.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userObject: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(Signup);","map":{"version":3,"sources":["/Users/Amar/emp/src/components/Sign Up/index.js"],"names":["React","Component","connect","Validator","Form","Input","Row","Col","Button","Card","InlineError","signupUser","Signup","props","onChange","e","setState","data","state","target","name","value","onSubmit","errors","validate","Object","keys","length","firstName","lastName","phoneNumber","email","password","confirmPassword","dispatch","history","push","isEmail","loading","propTypes","mapStateToProps","userObject","auth","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Validator from \"validator\";\nimport { Form, Input, Row, Col, Button, Card } from \"antd\";\nimport InlineError from \"../messages/InlineError\";\nimport { signupUser } from \"../../redux/actions/home\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n            },\n            loading: false,\n            errors: {}\n        };\n    }\n\n    onChange = e =>\n        this.setState({\n            data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n\n    onSubmit = e => {\n        const errors = this.validate(this.state.data);\n        this.setState({ errors });\n        if (Object.keys(errors).length === 0) {\n            const {\n                firstName,\n                lastName,\n                phoneNumber,\n                email,\n                password,\n                confirmPassword\n            } = this.state.data;\n            this.props.dispatch(\n                signupUser({\n                    firstName: firstName,\n                    lastName: lastName,\n                    phoneNumber: phoneNumber,\n                    email: email,\n                    password: password,\n                    confirmPassword: confirmPassword\n                })\n            );\n            this.props.history.push(\"/login\");\n        }\n    };\n\n    validate = data => {\n        const errors = {};\n        if (!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n        if (!data.password) errors.password = \"Can't be empty\";\n        if (!data.firstName) errors.firstName = \"Can't be empty\";\n        if (!data.lastName) errors.lastName = \"Can't be empty\";\n        if (!data.phoneNumber) errors.phoneNumber = \"Please Enter Number\";\n        if (data.password !== data.confirmPassword)\n            errors.confirmPassword = \"Write the same password\";\n        return errors;\n    };\n\n    render() {\n        const { data, errors } = this.state;\n        return (\n            <div>\n                <Card title=\"Signup\">\n                    <Form>\n                        <Row>\n                            <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n                                <Form.Item error={!!errors.firstName}>\n                                    <Input\n                                        id=\"firstName\"\n                                        type=\"text\"\n                                        name=\"firstName\"\n                                        value={data.firstName}\n                                        onChange={this.onChange}\n                                        placeholder=\"First Name\"\n                                    />\n                                    {errors.firstName && <InlineError text={errors.firstName} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.lastName}>\n                                    <Input\n                                        id=\"lastName\"\n                                        type=\"text\"\n                                        name=\"lastName\"\n                                        value={data.lastName}\n                                        onChange={this.onChange}\n                                        placeholder=\"Last Name\"\n                                    />\n                                    {errors.lastName && <InlineError text={errors.lastName} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.phoneNumber}>\n                                    <Input\n                                        id=\"phoneNumber\"\n                                        name=\"phoneNumber\"\n                                        type=\"tel\"\n                                        placeholder=\"10 Digits Phone number\"\n                                        value={data.phoneNumber}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.phoneNumber && (\n                                        <InlineError text={errors.phoneNumber} />\n                                    )}\n                                </Form.Item>\n                                <Form.Item error={!!errors.email}>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"text\"\n                                        name=\"email\"\n                                        value={data.email}\n                                        onChange={this.onChange}\n                                        placeholder=\"email@rsrit.com\"\n                                    />\n                                    {errors.email && <InlineError text={errors.email} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.password}>\n                                    <Input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        value={data.password}\n                                        onChange={this.onChange}\n                                        placeholder=\"Password (Make it Secure)\"\n                                    />\n                                    {errors.password && <InlineError text={errors.password} />}\n                                </Form.Item>\n                                <Form.Item error={!!errors.confirmPassword}>\n                                    <Input\n                                        id=\"confirmPassword\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        value={data.confirmPassword}\n                                        onChange={this.onChange}\n                                        placeholder=\"Same as Password\"\n                                    />\n                                    {errors.confirmPassword && (\n                                        <InlineError text={errors.confirmPassword} />\n                                    )}\n                                </Form.Item>\n\n                                <br />\n                                <br />\n                                <Button type=\"primary\" onClick={this.onSubmit}>\n                                    Submit\n                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nSignup.propTypes = {};\n\nconst mapStateToProps = state => {\n    return {\n        userObject: state.auth.user\n    };\n};\n\nexport default connect(mapStateToProps)(Signup);"]},"metadata":{},"sourceType":"module"}