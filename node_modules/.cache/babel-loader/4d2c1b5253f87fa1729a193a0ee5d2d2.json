{"ast":null,"code":"import _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Types from \"../actions/types\";\nvar initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n};\n\nvar handleLoginServerResponseSuccess = function handleLoginServerResponseSuccess(state, action) {\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      \"result\": Object.assign({}, action.result)\n    });\n  }\n\n  console.log(\"STATE->\" + JSON.stringify(newState));\n  return _objectSpread({}, newState);\n};\n\nvar handleLoginServerResponseError = function handleLoginServerResponseError(state, action) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, {\n        \"loggedIn\": false,\n        \"isValidToken\": false,\n        \"pending\": true\n      });\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state);\n\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/reducers/auth.js"],"names":["Types","initialUserObj","handleLoginServerResponseSuccess","state","action","newState","result","undefined","Object","assign","console","log","JSON","stringify","handleLoginServerResponseError","type","LOGIN_USER","LOGIN_USER_SERVER_RESPONSE_ERROR","LOGIN_USER_SERVER_RESPONSE_SUCCESS"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,IAAMC,cAAc,GAAG;AACrB,qBAAmB,EADE;AAErB,aAAW,KAFU;AAGrB,cAAY,KAHS;AAIrB,kBAAgB,KAJK;AAKrB,gBAAc,KALO;AAMrB,gBAAc,EANO;AAOrB,YAAU,EAPW;AAQrB,UAAQ;AACN,aAAS,EADH;AAEN,mBAAe,EAFT;AAGN,kBAAc,KAHR;AAIN,oBAAgB,EAJV;AAKN,iBAAa,EALP;AAMN,qBAAiB,KANX;AAON,kBAAc,EAPR;AAQN,gBAAY,KARN;AASN,mBAAe,EATT;AAUN,iBAAa;AAVP;AARa,CAAvB;;AAwBA,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1D,MAAIC,QAAQ,qBAAQF,KAAR,CAAZ;;AACA,MAAIC,MAAM,CAACE,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BF,IAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAE,gBAAUK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAM,CAACE,MAAzB;AAAZ,KAAzB,CAAX;AAED;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAxB;AACA,2BAAYA,QAAZ;AAED,CATD;;AAUA,IAAMS,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACX,KAAD,EAAQC,MAAR,EAAmB;AACxD,MAAIC,QAAQ,qBAAQF,KAAR,CAAZ;;AACA,2BAAYE,QAAZ;AACD,CAHD;;AAKA,gBAAe,YAAoC;AAAA,MAAnCF,KAAmC,uEAA3BF,cAA2B;AAAA,MAAXG,MAAW;;AACjD,UAAQA,MAAM,CAACW,IAAf;AACE,SAAKf,KAAK,CAACgB,UAAX;AACE,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAAE,oBAAY,KAAd;AAAqB,wBAAgB,KAArC;AAA4C,mBAAW;AAAvD,OAAzB,CAAP;;AACF,SAAKH,KAAK,CAACiB,gCAAX;AACE,aAAOH,8BAA8B,CAACX,KAAD,CAArC;;AACF,SAAKH,KAAK,CAACkB,kCAAX;AACE,aAAOhB,gCAAgC,CAACC,KAAD,CAAvC;;AAEF;AACE,aAAOA,KAAP;AATJ;AAWD,CAZD","sourcesContent":["import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n  \"signUpUsersList\": [],\n  \"pending\": false,\n  \"loggedIn\": false,\n  \"isValidToken\": false,\n  \"isBusiness\": false,\n  \"empDetails\": {},\n  \"result\": {},\n  \"user\": {\n    \"email\": \"\",\n    \"displayName\": \"\",\n    \"registered\": false,\n    \"refreshToken\": \"\",\n    \"expiresIn\": \"\",\n    \"emailVerified\": false,\n    \"validSince\": \"\",\n    \"disabled\": false,\n    \"lastLoginAt\": \"\",\n    \"createdAt\": \"\"\n  }\n\n};\n\n\nconst handleLoginServerResponseSuccess = (state, action) => {\n  let newState = { ...state };\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, { \"result\": Object.assign({}, action.result) })\n\n  }\n  console.log(\"STATE->\" + JSON.stringify(newState));\n  return { ...newState };\n\n}\nconst handleLoginServerResponseError = (state, action) => {\n  let newState = { ...state };\n  return { ...newState };\n}\n\nexport default (state = initialUserObj, action) => {\n  switch (action.type) {\n    case Types.LOGIN_USER:\n      return Object.assign({}, state, { \"loggedIn\": false, \"isValidToken\": false, \"pending\": true });\n    case Types.LOGIN_USER_SERVER_RESPONSE_ERROR:\n      return handleLoginServerResponseError(state);\n    case Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS:\n      return handleLoginServerResponseSuccess(state);\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}