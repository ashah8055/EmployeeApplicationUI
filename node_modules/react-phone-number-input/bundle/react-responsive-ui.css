

.rrui__activity-indicator {
  width: calc(0.6rem * 3);
  height: calc(0.6rem * 3);
  stroke: currentColor;
  line-height: 0; }

.rrui__activity-indicator-circle-container {
  -webkit-animation: rrui-spinner-rotate 2s linear infinite;
          animation: rrui-spinner-rotate 2s linear infinite;
  -webkit-transform-origin: center center;
      -ms-transform-origin: center center;
          transform-origin: center center; }

.rrui__activity-indicator-circle {
  /* IE can not animate SVG. */
  /* Only Microsoft Edge supports SVG CSS Transitions and Animation. */
  /* Could use `stroke-dasharray: 89,200` and `stroke-dashoffset: -35` here */
  /* to show an indicator in IE but the aethetics is better othewise so screw IE. */
  stroke-dasharray: 1,200;
  stroke-dashoffset: 0;
  -webkit-animation: rrui-spinner-extent 1.5s ease-in-out infinite;
          animation: rrui-spinner-extent 1.5s ease-in-out infinite;
  stroke-linecap: round; }

@-webkit-keyframes rrui-spinner-rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes rrui-spinner-rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes rrui-spinner-extent {
  0% {
    stroke-dasharray: 1,200;
    stroke-dashoffset: 0; }
  50% {
    stroke-dasharray: 89,200;
    stroke-dashoffset: -35; }
  100% {
    stroke-dasharray: 89,200;
    stroke-dashoffset: -124; } }

@keyframes rrui-spinner-extent {
  0% {
    stroke-dasharray: 1,200;
    stroke-dashoffset: 0; }
  50% {
    stroke-dasharray: 89,200;
    stroke-dashoffset: -35; }
  100% {
    stroke-dasharray: 89,200;
    stroke-dashoffset: -124; } }

.rrui__autocomplete__input {
  height: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

/* Stretches the inputs to full column width by default. */
/* Because everyone uses CSS grids today. */
.rrui__autocomplete__input {
  width: 100%; }

.rrui__autocomplete .rrui__ellipsis {
  position: absolute;
  right: calc(0.6rem / 3);
  top: calc(50% - 0.6rem / 6);
  pointer-events: none; }

.rrui__autocomplete__input {
  padding-right: calc(0.6rem * 2.5); }

.rrui__autocomplete .rrui__options-list {
  /*
	`<Select/>` options text should be at least fully visible.
	At the same time `<Select/>` options should stretch themselves
	horizontally to the width of the containing column (when using grid layout).
	*/
  width: calc(100% + 0.6rem * 1.5 * 2);
  /* Makes `border-bottom` visible on an iPhone */
  margin-top: 1px; }

.rrui__autocomplete--compact {
  /* Reverts `width: 100%` set at the top of this file */
  width: auto;
  /* If it's `compact` then it's most likely inlined */
  display: inline-block; }

.rrui__autocomplete--compact .rrui__expandable-list {
  width: auto; }

/* Reset the default `<button/>` styles */
.rrui__button-reset {
  margin: 0;
  padding: 0;
  white-space: nowrap;
  outline: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: none;
  cursor: pointer;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  font-style: inherit;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.rrui__button-reset--link:hover {
  text-decoration: none; }

.rrui__button {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  height: calc(0.6rem * 3);
  padding-left: 0rem;
  padding-right: 0rem;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-transition: background-color 30ms ease-out, color 30ms ease-out, border-color 30ms ease-out;
  -o-transition: background-color 30ms ease-out, color 30ms ease-out, border-color 30ms ease-out;
  transition: background-color 30ms ease-out, color 30ms ease-out, border-color 30ms ease-out;
  cursor: pointer;
  color: #03b2cb; }

.rrui__button:active {
  color: #2bd7f0; }

.rrui__button--busy,
.rrui__button--disabled {
  /* "pointer-events" prevents "cursor: wait" from working */
  pointer-events: none; }

.rrui__button--stretch {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%; }

.rrui__button__busy {
  position: absolute;
  left: 0rem;
  bottom: calc(50% - 0.7em);
  width: calc(100% - 2 * 0rem);
  height: 0.1em;
  overflow: hidden;
  opacity: 0;
  -webkit-transition: opacity 300ms ease-out 0ms;
  -o-transition: opacity 300ms ease-out 0ms;
  transition: opacity 300ms ease-out 0ms; }

.rrui__button__busy--after-show {
  opacity: 1;
  -webkit-transition: opacity 700ms ease-out 200ms;
  -o-transition: opacity 700ms ease-out 200ms;
  transition: opacity 700ms ease-out 200ms; }

.rrui__button__busy:before {
  display: block;
  position: absolute;
  content: "";
  left: -40%;
  width: 40%;
  height: 100%;
  background-color: currentColor;
  -webkit-animation: rrui__button__busy 2s ease-in infinite;
          animation: rrui__button__busy 2s ease-in infinite; }

/* Based on "CSS indeterminate progress" example. */
/* https://codepen.io/brunjo/pen/XJmbNz */
@-webkit-keyframes rrui__button__busy {
  from {
    left: -40%;
    width: 40%; }
  50% {
    width: 70%; }
  70% {
    width: 85%; }
  80% {
    left: 30%;
    width: 100%; }
  95% {
    left: 60%; }
  to {
    left: 100%; } }
@keyframes rrui__button__busy {
  from {
    left: -40%;
    width: 40%; }
  50% {
    width: 70%; }
  70% {
    width: 85%; }
  80% {
    left: 30%;
    width: 100%; }
  95% {
    left: 60%; }
  to {
    left: 100%; } }

/* Button colors */
.rrui__button {
  color: #03b2cb; }

.rrui__button:active {
  color: #2bd7f0; }

.rrui__button--link:hover {
  text-decoration: none; }

/* http://tympanus.net/codrops/2013/10/15/animated-checkboxes-and-radio-buttons-with-svg/ */
.rrui__checkbox .rrui__input {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.rrui__checkbox .rrui__input--multiline {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start; }

.rrui__checkbox__label {
  display: inline-block;
  /* Using padding instead of margin here to make the gap clickable. */
  padding-left: 0.6rem;
  vertical-align: bottom;
  color: inherit;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.rrui__checkbox__label:not(.rrui__checkbox__label--multiline) {
  white-space: nowrap; }

.rrui__checkbox__label--multiline {
  /* A fix for IE 11 to force it wrap `<label/>` text */
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 0;
      -ms-flex: 1 0 0px;
          flex: 1 0 0; }

.rrui__checkbox__input,
.rrui__checkbox__label {
  cursor: pointer; }

.rrui__checkbox--disabled .rrui__checkbox__input,
.rrui__checkbox--disabled .rrui__checkbox__label {
  cursor: default; }

.rrui__checkbox__checkbox {
  position: relative;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
  width: calc(0.6rem * 2);
  height: calc(0.6rem * 2); }

.rrui__checkbox__input {
  position: absolute;
  left: -40%;
  top: -40%;
  width: 180%;
  height: 180%;
  margin: 0;
  opacity: 0; }

.rrui__checkbox__box {
  width: 100%;
  height: 100%;
  fill: currentColor;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  pointer-events: none; }

/* Checkbox color (:checked) */
.rrui__checkbox__box--checked,
.rrui__checkbox__input:focus + .rrui__checkbox__box {
  color: #03b2cb; }

/* Checkbox color (:checked / :active) */
.rrui__checkbox:active .rrui__checkbox__box,
.rrui__checkbox__input:active + .rrui__checkbox__box {
  color: #2bd7f0; }

/* Checkbox color (:invalid) */
.rrui__checkbox--invalid .rrui__checkbox__box {
  color: #d30f00; }

/*
.rrui__close--top-right
{
	position : fixed;
	top      : calc(0.6rem * 2);
	right    : calc(0.6rem * 2);
	z-index  : 1;
}
*/
.rrui__close--bottom-right {
  position: fixed;
  bottom: calc(0.6rem * 2);
  right: calc(0.6rem * 2);
  z-index: 1; }

.rrui__close__icon {
  width: calc(0.6rem * 2);
  height: calc(0.6rem * 2);
  -webkit-box-sizing: content-box;
          box-sizing: content-box; }

.rrui__close__icon:active .rrui__close__icon-path {
  color: #03b2cb; }

.rrui__close__icon-path {
  color: #000000;
  stroke: currentColor; }

.rrui__close {
  padding: calc(0.6rem * 2 / 2);
  margin: calc(0.6rem * 2 * -1 / 2); }

/* DayPicker styles (version 7.1.10) */
.DayPicker-wrapper {
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row; }

.DayPicker-Months {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.DayPicker-Month {
  display: table;
  border-collapse: collapse;
  border-spacing: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.DayPicker-NavButton {
  position: absolute;
  top: -0.25em;
  cursor: pointer;
  width: 1.5em;
  height: 1.5em; }

.DayPicker-NavButton--prev {
  left: 0.25em;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' style='fill: currentColor; color: %2303b2cb;'%3E%3Cpath d='M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z'%3E%3C/path%3E%3C/svg%3E"); }

.DayPicker-NavButton--next {
  right: 0.25em;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' style='fill: currentColor; color: %2303b2cb;'%3E%3Cpath d='M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z'%3E%3C/path%3E%3C/svg%3E"); }

.DayPicker-NavButton--interactionDisabled {
  display: none; }

.DayPicker-Caption {
  display: table-caption;
  text-align: center;
  margin-bottom: 1em; }

.DayPicker-Weekdays {
  margin-top: 1em;
  display: table-header-group; }

.DayPicker-WeekdaysRow {
  display: table-row; }

.DayPicker-Weekday {
  display: table-cell;
  padding: 0.5em;
  font-size: 0.875em;
  text-align: center;
  color: #888888; }

.DayPicker-Weekday abbr[title] {
  border-bottom: none;
  text-decoration: none; }

.DayPicker-Body {
  display: table-row-group; }

.DayPicker-Week {
  display: table-row; }

.DayPicker-Day {
  display: table-cell;
  padding: 0.5em;
  text-align: center;
  cursor: pointer;
  vertical-align: middle;
  border-radius: 50%; }

.DayPicker--interactionDisabled .DayPicker-Day {
  cursor: default; }

.DayPicker-Footer {
  padding-top: 0.5em; }

.DayPicker-TodayButton {
  border: none;
  background-image: none;
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  cursor: pointer;
  color: #03b2cb;
  font-size: 0.875em; }

/* Default modifiers */
.DayPicker-Day--today {
  /*
	color: #03b2cb;
	font-weight: 700;
	*/
  /* border: 1px solid #F3F3F3; */
  /*
	border-radius: 50%;
	box-shadow: 0 0 1px #000000;
	*/
  color: #d0021b;
  font-weight: 700; }

.DayPicker-Day--outside {
  cursor: default;
  color: #888888; }

.DayPicker-Day--disabled {
  color: #cacaca;
  cursor: default; }

/* Example modifiers */
.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  position: relative;
  color: #ffffff;
  background-color: #03b2cb; }

/* =============================== */
/* Custom `react-daypicker` styles */
/* =============================== */
.DayPicker-Months {
  margin-top: 0.5em; }

.DayPicker-Month {
  margin-top: 0; }

.DayPicker-MonthSelect {
  margin-right: 0.3em; }

.DayPicker-MonthSelect,
.DayPicker-YearSelect {
  display: inline-block;
  position: relative; }

.DayPicker-wrapper,
.DayPicker-Day,
.DayPicker-NavButton {
  outline: none; }

.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  color: #ffffff;
  background-color: #03b2cb; }

/* https://github.com/gpbl/react-day-picker/issues/708 */
/*
.DayPicker-NavButton:active
{
	color : #2bd7f0;
}
*/
/* .DayPicker:not(.DayPicker--interactionDisabled) ... */
.DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  background-color: #F3F3F3;
  border-radius: 50%; }

.DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):active {
  color: #ffffff;
  background-color: #2bd7f0;
  border-radius: 50%; }

/* ----------------------------------------------------- */
/* -                  `<DatePicker/>`                  - */
/* ----------------------------------------------------- */
.rrui__date-picker {
  position: relative; }

.rrui__date-picker .rrui__expandable {
  min-width: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  text-align: center;
  background-color: #ffffff; }

.rrui__date-picker .rrui__expandable__content {
  display: inline-block;
  padding-top: calc(0.6rem * 2);
  padding-bottom: calc(0.6rem * 2);
  padding-left: calc(0.6rem * 2);
  padding-right: calc(0.6rem * 2); }

.rrui__date-picker__calendar abbr {
  text-decoration: none; }

.rrui__date-picker__input-overlay {
  /*
	Set `display` to `block` for fullscreen `.rrui__expandable` design.
	This works around the mobile keyboard appearing from the bottom.
	display  : block;
	*/
  display: none;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 1; }

.rrui__date-picker__close {
  /*
	Set `display` to `block` for fullscreen `.rrui__expandable` design.
	display      : block;
	*/
  display: none; }

.rrui__date-picker:focus {
  display: none; }

.rrui__date-picker__icon {
  display: none;
  position: absolute;
  top: calc((0.6rem * 3 - 0.6rem * 1.5) / 2);
  right: calc(0.6rem / 2);
  width: calc(0.6rem * 1.5);
  height: calc(0.6rem * 1.5);
  z-index: 1;
  opacity: 0.5;
  color: #000000; }

.rrui__date-picker .rrui__expanded--expanded .rrui__date-picker__icon {
  opacity: 1;
  color: #03b2cb; }

.rrui__date-picker__icon:active {
  opacity: 1;
  color: #2bd7f0; }

.rrui__divider {
  line-height: 0;
  font-size: 0; }

.rrui__divider__line {
  width: 100%;
  height: 1px;
  margin-bottom: -1px;
  background-color: rgba(0, 0, 0, 0.16);
  border: 0; }

.rrui__ellipsis {
  width: calc(0.6rem * 1.5);
  opacity: 0.7; }

.rrui__ellipsis__size {
  position: relative;
  width: 100%;
  padding-bottom: 22%; }

.rrui__ellipsis__dots {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%; }

.rrui__ellipsis__dot {
  width: 22%;
  height: 100%;
  margin-right: 16.5%;
  border-radius: 50%;
  background-color: currentColor;
  opacity: 0.4; }

.rrui__ellipsis__dot--1 {
  -webkit-animation: 1.1s linear 0s infinite rrui__ellipsis;
          animation: 1.1s linear 0s infinite rrui__ellipsis; }

.rrui__ellipsis__dot--2 {
  -webkit-animation: 1.1s linear 0.36666667s infinite rrui__ellipsis;
          animation: 1.1s linear 0.36666667s infinite rrui__ellipsis; }

.rrui__ellipsis__dot--3 {
  margin-right: 0;
  -webkit-animation: 1.1s linear 0.73333333s infinite rrui__ellipsis;
          animation: 1.1s linear 0.73333333s infinite rrui__ellipsis; }

@-webkit-keyframes rrui__ellipsis {
  25% {
    opacity: 1; }
  50% {
    opacity: 0.4; } }

@keyframes rrui__ellipsis {
  25% {
    opacity: 1; }
  50% {
    opacity: 0.4; } }

.rrui__expandable {
  opacity: 0;
  pointer-events: none;
  -webkit-transform: scaleY(0.5);
      -ms-transform: scaleY(0.5);
          transform: scaleY(0.5);
  -webkit-transform-origin: 50% top 0px;
      -ms-transform-origin: 50% top 0px;
          transform-origin: 50% top 0px;
  /* 250ms - too slow for short lists */
  -webkit-transition: all 100ms ease-out;
  -o-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  /* prevent white background showing through the transparent border */
  /* http://stackoverflow.com/questions/7473200/transparent-border-expands-background-color-image */
  background-clip: padding-box;
  -webkit-background-clip: padding-box; }

.rrui__expandable--expanded {
  opacity: 1;
  pointer-events: auto;
  -webkit-transform: scaleY(1);
      -ms-transform: scaleY(1);
          transform: scaleY(1);
  -webkit-transform-origin: 50% top 0px;
      -ms-transform-origin: 50% top 0px;
          transform-origin: 50% top 0px;
  -webkit-transition: all 150ms cubic-bezier(0.23, 1, 0.32, 1);
  -o-transition: all 150ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: all 150ms cubic-bezier(0.23, 1, 0.32, 1); }

.rrui__expandable--overlay {
  position: absolute;
  z-index: 1; }

.rrui__expandable__content {
  /*
	The inner block's `opacity` is animated too
	(it fades in and out by itself too).
	This is done to fade out the inner block when the dropdown is collapsed
	therefore hiding an otherwise bizarre and unwanted visual clutter
	*/
  opacity: 0;
  /* Mitigates inner content overlapping with itself creating a feeling of a mess */
  -webkit-transition: opacity 100ms ease-out;
  -o-transition: opacity 100ms ease-out;
  transition: opacity 100ms ease-out; }

.rrui__expandable__content--expanded {
  opacity: 1; }

.rrui__expandable--left-aligned {
  left: 0; }

.rrui__expandable--right-aligned {
  right: 0; }

.rrui__expandable--downward {
  /* When an html page is overflown by a long list
	   then this bottom margin helps to see that
	   there's no more options left out being clipped or something */
  margin-bottom: 1em; }

.rrui__expandable--upward {
  bottom: 100%;
  /* When an html page is overflown by a long list
	   then this bottom margin helps to see that
	   there's no more options left out being clipped or something */
  margin-top: 1em;
  -webkit-transform-origin: 50% bottom 0px;
      -ms-transform-origin: 50% bottom 0px;
          transform-origin: 50% bottom 0px; }

.rrui__expandable__close {
  /*
	Set `display` to `block` for fullscreen `.rrui__expandable` design.
	display : block;
	*/
  display: none; }

.rrui__expandable-list--left-aligned {
  left: 0; }

.rrui__expandable-list--right-aligned {
  right: 0; }

.rrui__options-list--left-aligned {
  left: calc(0.6rem * 1.5 * -1); }

.rrui__options-list--right-aligned {
  right: calc(0.6rem * 1.5 * -1); }

.rrui__file-upload {
  cursor: pointer; }

.rrui__file-upload--disabled {
  cursor: default; }

.rrui__form {
  /* Chrome adds margin-bottom for all <form/>s for some weird reason */
  margin-bottom: 0; }

.rrui__form__actions {
  margin-top: calc(0.6rem * 4);
  /* Right alignment */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.rrui__form__actions--left-right {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.rrui__form__actions .rrui__button {
  margin-right: calc(4 * 0.6rem); }

.rrui__form__actions .rrui__button:last-child {
  margin-right: 0; }

.rrui__form__field {
  margin-bottom: calc(0.6rem * 2); }

.rrui__form__error:empty {
  display: none; }

.rrui__input {
  /* `position: relative` is for the floating label absolute positioning */
  position: relative; }

.rrui__input,
.rrui__input-label {
  height: calc(0.6rem * 3); }

/* `.rrui__input:not(.rrui__input--multiline)`
   would result in issues with this CSS selector being
   too specific and therefore taking higher priority */
.rrui__input--multiline {
  height: auto; }

/*
For some reason web browsers size `<input/>`s to be wider
than 100% of the parent if the parent is small enough.
*/
.rrui__input-element {
  max-width: 100%; }

.rrui__input-error {
  margin-top: 0.6rem;
  color: #d30f00; }

.rrui__input-field {
  outline: none;
  border-radius: 0;
  /* Some web browsers add <input/> padding by default */
  padding: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  font-style: inherit; }

/* Overrides Chrome autofill yellow background color */
.rrui__input-field:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 1000px white inset;
          box-shadow: 0 0 0 1000px white inset; }

/* Stretches the inputs to full column width by default. */
/* Because everyone uses CSS grids today. */
.rrui__input-field,
.rrui__select__button,
.rrui__select__autocomplete {
  width: 100%; }

.rrui__input-field,
.rrui__select__button,
.rrui__select__native {
  border: none;
  border-bottom: 1px solid #cacaca;
  -webkit-transition: border 0.1s;
  -o-transition: border 0.1s;
  transition: border 0.1s; }

.rrui__input-field:focus,
.rrui__select__button:focus,
.rrui__select__native:focus + .rrui__select__button {
  border-bottom-color: #03b2cb; }

.rrui__input-field {
  height: 100%;
  font-size: inherit;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

/* Resets height back to 100% for multiline text input */
.rrui__input-field--multiline {
  height: auto;
  resize: none; }

.rrui__input-field--invalid,
.rrui__input-field--invalid:focus {
  border-color: #d30f00; }

.rrui__input-field--disabled {
  cursor: default;
  background-color: transparent; }

.rrui__input-label {
  position: absolute;
  left: 0;
  top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  white-space: nowrap;
  font-size: inherit;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  pointer-events: none;
  /*
	When changing this label color
	one could also change "input" and "textarea" placeholder color
	if using `placeholder` property.
	Changing `:placeholder` color is not widely supported though.
	*/
  color: #888888;
  -webkit-transform: scale(0.8) translateY(-70%);
      -ms-transform: scale(0.8) translateY(-70%);
          transform: scale(0.8) translateY(-70%);
  -webkit-transform-origin: left top;
      -ms-transform-origin: left top;
          transform-origin: left top;
  -webkit-transition: color 0.1s ease-out, -webkit-transform 450ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: color 0.1s ease-out, -webkit-transform 450ms cubic-bezier(0.23, 1, 0.32, 1);
  -o-transition: color 0.1s ease-out, transform 450ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: color 0.1s ease-out, transform 450ms cubic-bezier(0.23, 1, 0.32, 1);
  transition: color 0.1s ease-out, transform 450ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 450ms cubic-bezier(0.23, 1, 0.32, 1); }

/* Focused input label */
.rrui__select__native:focus + .rrui__select__button + .rrui__input-label,
.rrui__input-element:focus + .rrui__input-label {
  color: #03b2cb; }

/* (when the `value` is empty) */
/* Required input field label asterisk. */
.rrui__input-label--required:after,
.rrui__select__selected-label--required:after {
  content: '*';
  margin-left: 0.2em; }

.rrui__list {
  margin: 0;
  padding-left: 0;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
  overflow-y: auto;
  background-color: #ffffff;
  list-style-type: none;
  overflow-x: hidden;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.rrui__list__item {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  /*
	This side padding is also connected to
	`.rrui__select__options--left-aligned`'s `left`,
	`.rrui__select__options--right-aligned`'s `right`
	and `.rrui__select__options`'s `min-width`.
	*/
  padding-left: calc(0.6rem * 1.5);
  padding-right: calc(0.6rem * 1.5);
  color: inherit;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  text-align: left;
  white-space: nowrap; }

.rrui__list__item:hover {
  background-color: #F3F3F3; }

.rrui__list__item:active {
  background-color: #03b2cb;
  color: #ffffff; }

.rrui__list__item--button {
  height: calc(0.6rem * 4); }

.rrui__list__item--divider {
  padding-left: 0;
  padding-right: 0;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
  pointer-events: none; }

.rrui__list__item--focused {
  background-color: #F3F3F3; }

.rrui__list__item-icon {
  margin-right: 0.6rem;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0; }

.rrui__list__item--disabled {
  /* "pointer-events" prevents "cursor: wait" from working */
  pointer-events: none; }

.rrui__list__items--scroll {
  /* https://css-tricks.com/snippets/css/momentum-scrolling-on-ios-overflow-elements/ */
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch; }

.rrui__menu {
  /* Usually menu toggler is not 100% wide, so it makes sense. */
  display: inline-block;
  position: relative; }

.rrui__menu .rrui__expandable-list {
  width: auto; }

.rrui__menu .rrui__list__item {
  padding-left: calc(0.6rem * 2.5);
  padding-right: calc(0.6rem * 2.5); }

.rrui__menu .rrui__list__item--divider {
  padding-left: 0;
  padding-right: 0; }

.rrui__menu-button {
  display: inline-block;
  width: calc(0.6rem * 3);
  height: calc(0.6rem * 3);
  padding: calc(0.6rem / 2);
  margin: calc(-1 * 0.6rem / 2);
  line-height: 0;
  color: #000000;
  outline: none; }

.rrui__menu-button {
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

/*
.rrui__menu-button:active
{
	color : #03b2cb;
}
*/
/* https://codepen.io/bennettfeely/pen/twbyA */
.rrui__menu-button__icon {
  position: relative;
  top: calc((100% - 12.5%) / 2);
  height: 12.5%;
  -webkit-transition: 0.25s;
  -o-transition: 0.25s;
  transition: 0.25s; }

.rrui__menu-button__icon,
.rrui__menu-button__icon:before,
.rrui__menu-button__icon:after {
  background: currentColor; }

.rrui__menu-button__icon:before,
.rrui__menu-button__icon:after {
  display: block;
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1;
  -webkit-transition: 0.25s;
  -o-transition: 0.25s;
  transition: 0.25s; }

.rrui__menu-button__icon:before {
  top: -200%;
  /* 25% */ }

.rrui__menu-button__icon:after {
  top: 200%;
  /* 25% */ }

.rrui__menu-button:hover .rrui__menu-button__icon:before {
  -webkit-transform: translateY(-64%);
      -ms-transform: translateY(-64%);
          transform: translateY(-64%);
  /* 33% */ }

.rrui__menu-button:hover .rrui__menu-button__icon:after {
  -webkit-transform: translateY(64%);
      -ms-transform: translateY(64%);
          transform: translateY(64%);
  /* 33% */ }

.rrui__menu-button--expanded .rrui__menu-button__icon {
  -webkit-transform: scale(0.75);
      -ms-transform: scale(0.75);
          transform: scale(0.75); }

.rrui__menu-button--expanded .rrui__menu-button__icon:before,
.rrui__menu-button--expanded .rrui__menu-button__icon:after {
  /* !important overrides `:hover` */
  top: 0 !important; }

.rrui__menu-button--expanded .rrui__menu-button__icon--x {
  background: transparent; }

.rrui__menu-button--expanded .rrui__menu-button__icon--x:before {
  /* `!important` overrides `:hover` */
  -webkit-transform: rotate(-45deg) !important;
      -ms-transform: rotate(-45deg) !important;
          transform: rotate(-45deg) !important; }

.rrui__menu-button--expanded .rrui__menu-button__icon--x:after {
  /* `!important` overrides `:hover` */
  -webkit-transform: rotate(45deg) !important;
      -ms-transform: rotate(45deg) !important;
          transform: rotate(45deg) !important; }

/*===========================================================
= `react-modal`                                             =
===========================================================*/
/*
when changing css transition times here
also change `default_close_timeout` in ./Modal.js accordingly
*/
/* Could have used `opacity` transition on `.ReactModal__Overlay`
   but it introduced a bug in Chrome: the fixed Overlay shriked vertically
   while having its opacity animated at the same time as the Content being scaled */
.ReactModal__Overlay {
  background-color: transparent;
  /* "auto" introduces a vertical scrollbar when "bouncing" (animation) */
  /* overflow: auto; */
  overflow: hidden; }

.ReactModal__Overlay--after-open {
  background-color: rgba(0, 0, 0, 0.25); }

/* This rule is required for closing animation */
.ReactModal__Overlay--before-close {
  background-color: transparent; }

.ReactModal__Overlay--after-open {
  -webkit-transition: background-color 300ms ease-out;
  -o-transition: background-color 300ms ease-out;
  transition: background-color 300ms ease-out; }

.ReactModal__Overlay--before-close {
  -webkit-transition: background-color 100ms ease-out;
  -o-transition: background-color 100ms ease-out;
  transition: background-color 100ms ease-out; }

.ReactModal__Content {
  outline: none; }

.rrui__modal__contents {
  opacity: 0;
  /*
	Scaling `<Modal/>` down on appear looks cool
	but it also can cause scrollbars to appear
	due to overflow which is a weird `scale()` behaviour.
	Those scrollbars alter window width resulting in
	`<Modal/>` positioning glitches (while centering itself).
	Therefore not using `scale()`s above `1`, only downscaling.
	transform  : scale(1.07);
	*/
  -webkit-transform: scale(0.95);
      -ms-transform: scale(0.95);
          transform: scale(0.95);
  -webkit-transition: opacity 100ms ease-out, -webkit-transform 100ms ease-out;
  transition: opacity 100ms ease-out, -webkit-transform 100ms ease-out;
  -o-transition: transform 100ms ease-out, opacity 100ms ease-out;
  transition: transform 100ms ease-out, opacity 100ms ease-out;
  transition: transform 100ms ease-out, opacity 100ms ease-out, -webkit-transform 100ms ease-out; }

.ReactModal__Content--after-open .rrui__modal__contents {
  opacity: 1;
  -webkit-transform: none;
      -ms-transform: none;
          transform: none; }

/* This rule is required for closing animation */
.ReactModal__Content--before-close .rrui__modal__contents {
  opacity: 0;
  -webkit-transform: scale(0.95);
      -ms-transform: scale(0.95);
          transform: scale(0.95); }

/*
The extra opacity animation on `<Modal/>` contents
is used to prevent clutter on background while the modal fades in/out.
*/
.rrui__modal__contents-body {
  opacity: 0; }

.ReactModal__Content--after-open .rrui__modal__contents-body {
  opacity: 1;
  -webkit-transition: opacity 100ms ease-out;
  -o-transition: opacity 100ms ease-out;
  transition: opacity 100ms ease-out; }

.ReactModal__Content--before-close .rrui__modal__contents-body {
  opacity: 0;
  -webkit-transition: opacity 80ms ease-out;
  -o-transition: opacity 80ms ease-out;
  transition: opacity 80ms ease-out; }

/* Hides `react-modal` scrollbar when closing the modal */
.ReactModal__Overlay--before-close {
  overflow: hidden; }

/*
While this would disable page scrolling when modal is presented,
it would introduce page width jumps.
.ReactModal__Body--open
{
	height: 100%;
	overflow: hidden;
}
*/
/*==========================================================
= `<Modal/>`                                               =
===========================================================*/
/*
Make sure to add `.rrui__fixed-full-width` CSS class
to all full-width `position: fixed` elements.
Such elements must not be `width: 100%`
but rather `width: auto` or `left: 0; right: 0;`.
*/
.rrui__fixed-full-width {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: auto; }

.rrui__modal__overlay {
  /* Horizontal centering */
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.rrui__modal__overlay--fullscreen {
  /* `display: flex` results in a weird content clipping bug in fullscreen mode
	   because of `justify-content: center` on the container */
  display: block;
  background-color: #ffffff; }

.rrui__modal__overlay--hidden {
  display: none; }

.rrui__modal__overlay--busy {
  cursor: wait; }

.rrui__modal__container {
  /* Centers everything vertically */
  min-height: 100%;
  /* Using `inline-flex` here so that it doesn't
	   stretch to the whole overlay width */
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.rrui__modal__container--fullscreen {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.rrui__modal__close {
  float: right;
  background: none;
  outline: none;
  border: none;
  cursor: pointer; }

.rrui__modal__close--busy {
  cursor: wait; }

.rrui__modal__contents {
  /* So that modal content won't neccessarily
	   stretch horizontally to the full width of the screen */
  display: inline-block;
  /* Modal content shouldn't stretch vertically */
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  /* Modal content will contract vertically */
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
          flex-basis: auto;
  border-radius: 0.2rem;
  background-color: #ffffff; }

.rrui__modal__contents--fullscreen {
  /* Completely cover the screen */
  border-radius: 0; }

.rrui__modal__vertical-margin {
  /* Perhaps "width : 100%" was needed for it to work properly */
  width: 100%;
  /* Vertical padding won't ever shrink below the minimum size */
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 3%;
      -ms-flex-preferred-size: 3%;
          flex-basis: 3%; }

.rrui__modal__vertical-margin--top {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
      -ms-flex-positive: 2;
          flex-grow: 2; }

.rrui__modal__vertical-margin--bottom {
  -webkit-box-flex: 5;
  -webkit-flex-grow: 5;
      -ms-flex-positive: 5;
          flex-grow: 5; }

.rrui__modal__vertical-margin--fullscreen {
  display: none; }

.rrui__modal--could-not-close-because-busy {
  -webkit-animation: bounce_z 0.6s;
          animation: bounce_z 0.6s;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

/* https://daneden.github.io/animate.css/ */
/* https://github.com/daneden/animate.css/blob/master/source/bouncing_entrances/bounceIn.css */
@-webkit-keyframes bounce_z {
  from, 25%, 47%, 72%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); }
  25% {
    -webkit-transform: scale3d(0.99, 0.99, 0.99);
            transform: scale3d(0.99, 0.99, 0.99); }
  47% {
    -webkit-transform: scale3d(1.01, 1.01, 1.01);
            transform: scale3d(1.01, 1.01, 1.01); }
  72% {
    -webkit-transform: scale3d(0.995, 0.995, 0.995);
            transform: scale3d(0.995, 0.995, 0.995); }
  to {
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); } }
@keyframes bounce_z {
  from, 25%, 47%, 72%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  0% {
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); }
  25% {
    -webkit-transform: scale3d(0.99, 0.99, 0.99);
            transform: scale3d(0.99, 0.99, 0.99); }
  47% {
    -webkit-transform: scale3d(1.01, 1.01, 1.01);
            transform: scale3d(1.01, 1.01, 1.01); }
  72% {
    -webkit-transform: scale3d(0.995, 0.995, 0.995);
            transform: scale3d(0.995, 0.995, 0.995); }
  to {
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); } }

.rrui__modal__content .rrui__form__error {
  margin-bottom: 0; }

/* Fullscreen `<Modal/>` animation tweaking */
.rrui__modal__overlay--fullscreen:not(.ReactModal__Overlay--after-open),
.rrui__modal__overlay--fullscreen.ReactModal__Overlay--before-close {
  background-color: transparent; }

.rrui__modal__overlay--fullscreen {
  -webkit-transition: background-color 100ms ease-out;
  -o-transition: background-color 100ms ease-out;
  transition: background-color 100ms ease-out; }

.rrui__modal__overlay--fullscreen .rrui__modal__contents {
  background-color: transparent; }

.rrui__modal__actions {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.rrui__modal__title,
.rrui__modal__actions,
.rrui__modal__content {
  /* Using `margin` instead of `padding` here
    to leverage the "margin collapse" CSS feature. */
  margin: calc(0.6rem * 3); }

.rrui__modal__actions {
  margin-top: calc(0.6rem * 2);
  margin-bottom: calc(0.6rem * 2); }

.rrui__modal__close {
  /* Prevents `<Modal.Title/>` overlapping with `<Close/>` padding */
  margin-left: 0; }

.rrui__scrollable {
  /* https://css-tricks.com/snippets/css/momentum-scrolling-on-ios-overflow-elements/ */
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch; }

.rrui__select {
  /* This is for `.rrui__select__options` to be positioned
	   correctly relative to the `<Select/>` itself. */
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.rrui__select .rrui__options-list {
  /*
	`<Select/>` options text should be at least fully visible.
	At the same time `<Select/>` options should stretch themselves
	horizontally to the width of the containing column (when using grid layout).
	*/
  width: calc(100% + 0.6rem * 1.5 * 2);
  /*
	`margin-top` is constituted by:
	- `.rrui__select__options` `padding-top`.
	- `.rrui__input` `height`.
	- half of the difference between `.rrui__select__option`'s `height`/`line-height` and `.rrui__input` `height`.
	*/
  margin-top: calc(-1 * (0.6rem + 0.6rem * 3 + (0.6rem * 4 - 0.6rem * 3) / 2)); }

.rrui__select__button {
  height: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: inherit;
  /* Not introducing an animation on `.rrui__select__option`
	   because it would introduce a little clutter due to
	   focused option animation in autocomplete mode */
  -webkit-transition: color 30ms ease-out;
  -o-transition: color 30ms ease-out;
  transition: color 30ms ease-out;
  /* Because Chrome adds `text-align: center` for all buttons */
  text-align: left; }

.rrui__select__button--expanded {
  color: #03b2cb; }

.rrui__select__button--empty .rrui__select__selected-label {
  color: #888888; }

.rrui__select__button--invalid {
  border-bottom-color: #d30f00; }

.rrui__select__button:active .rrui__select__selected-label,
.rrui__select__button:active .rrui__select__arrow,
.rrui__select__native:active + .rrui__select__button .rrui__select__selected-label,
.rrui__select__native:active + .rrui__select__button .rrui__select__arrow {
  color: #03b2cb; }

.rrui__select__selected-content {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.rrui__select__selected-label {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 auto;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis; }

.rrui__select .rrui__ellipsis {
  position: absolute;
  right: calc(0.6rem / 3);
  top: calc(50% - 0.6rem / 6);
  pointer-events: none; }

.rrui__select__arrow {
  width: 0;
  height: 0;
  margin-left: calc(0.6rem * 2 / 3);
  margin-right: calc(0.6rem * 2 / 3);
  margin-top: 0.1em;
  opacity: 0.6;
  color: #888888;
  /*transition : opacity 100ms ease-out;*/
  /* border-width: arrow_height arrow_width/2 0 arrow_width/2 */
  border-width: 0.35em 0.22em 0 0.22em;
  border-style: solid;
  border-left-color: transparent;
  border-right-color: transparent; }

.rrui__select--compact {
  /* Reverts `width: 100%` set at the top of this file */
  width: auto;
  /* If it's `compact` then it's most likely inlined */
  display: inline-block; }

.rrui__select--compact .rrui__expandable-list {
  width: auto; }

.rrui__select__button--disabled {
  /* "pointer-events" prevents "cursor: wait" from working */
  pointer-events: none; }

/* Stretches the inputs to full column width by default. */
/* Because everyone uses CSS grids today. */
.rrui__select__button {
  width: 100%; }

.rrui__select__native {
  cursor: pointer;
  outline: none; }

.rrui__select__native--overlay {
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 1;
  opacity: 0; }

.rrui__select__toggler {
  display: inline-block; }

.rrui__shadow {
  -webkit-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
          box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12); }

.rrui__slideout-menu {
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  z-index: 100;
  min-height: 100%;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
  overflow-y: auto;
  opacity: 0.9;
  background-color: #000000;
  -webkit-transform: translate3d(-100%, 0, 0);
          transform: translate3d(-100%, 0, 0);
  -webkit-transition: -webkit-transform 120ms ease-out;
  transition: -webkit-transform 120ms ease-out;
  -o-transition: transform 120ms ease-out;
  transition: transform 120ms ease-out;
  transition: transform 120ms ease-out, -webkit-transform 120ms ease-out; }

.rrui__slideout-menu__item {
  display: block;
  height: calc(0.6rem * 4);
  line-height: calc(0.6rem * 4);
  padding-left: calc(0.6rem * 2.5);
  padding-right: calc(0.6rem * 2.5);
  color: #ffffff; }

.rrui__slideout-menu--expanded {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-box-shadow: 0 0 0.2em rgba(0, 0, 0, 0.4);
          box-shadow: 0 0 0.2em rgba(0, 0, 0, 0.4); }

.rrui__snackbar__container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 1;
  margin: calc(0.6rem * 2);
  -webkit-transition: all 225ms cubic-bezier(0, 0, 0.2, 1);
  -o-transition: all 225ms cubic-bezier(0, 0, 0.2, 1);
  transition: all 225ms cubic-bezier(0, 0, 0.2, 1);
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
  visibility: visible; }

.rrui__snackbar__container--hidden {
  -webkit-transition: all 195ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: all 195ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: all 195ms cubic-bezier(0.4, 0, 0.6, 1);
  visibility: hidden; }

.rrui__snackbar {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  pointer-events: auto;
  background: #000000;
  color: #ffffff;
  border-radius: 0.1rem;
  padding-left: calc(0.6rem * 1.5);
  padding-right: calc(0.6rem * 1.5);
  height: calc(0.6rem * 4); }

.rrui__snackbar__text {
  overflow: 'hidden'; }

.rrui__switch {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-tap-highlight-color: transparent;
  tap-highlight-color: transparent; }

.rrui__switch--disabled {
  cursor: default; }

.rrui__switch--label {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.rrui__switch__switch {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  line-height: 0; }

.rrui__switch__input {
  left: -30%;
  right: -30%;
  width: 160%;
  height: 180%;
  cursor: pointer; }

.rrui__switch__label--left {
  margin-right: 0.6rem; }

.rrui__switch__label--right {
  margin-left: 0.6rem; }

.rrui__switch__groove {
  position: relative;
  display: inline-block;
  width: 1.65em;
  height: 1em;
  background: #ffffff;
  -webkit-box-shadow: inset 0 0 0 0.0625em rgba(0, 0, 0, 0.16);
          box-shadow: inset 0 0 0 0.0625em rgba(0, 0, 0, 0.16);
  border-radius: 0.5em;
  -webkit-transition: all 0.4s cubic-bezier(0.17, 0.67, 0.43, 0.98);
  -o-transition: all 0.4s cubic-bezier(0.17, 0.67, 0.43, 0.98);
  transition: all 0.4s cubic-bezier(0.17, 0.67, 0.43, 0.98);
  color: #03b2cb; }

.rrui__switch__groove--on {
  -webkit-box-shadow: inset 0 0 0 0.73em currentColor;
          box-shadow: inset 0 0 0 0.73em currentColor; }

.rrui__switch__knob {
  position: absolute;
  width: 0.875em;
  height: 0.875em;
  border-radius: 0.4375em;
  top: 0.0625em;
  left: 0.0625em;
  background: #ffffff;
  -webkit-box-shadow: inset 0 0 0 0.03em rgba(0, 0, 0, 0.3), 0 0 0.05em rgba(0, 0, 0, 0.05), 0 0.1em 0.2em rgba(0, 0, 0, 0.2);
          box-shadow: inset 0 0 0 0.03em rgba(0, 0, 0, 0.3), 0 0 0.05em rgba(0, 0, 0, 0.05), 0 0.1em 0.2em rgba(0, 0, 0, 0.2);
  -webkit-transition: all 0.25s ease-out;
  -o-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out; }

.rrui__switch__input:focus + .rrui__switch__groove + .rrui__switch__knob {
  -webkit-box-shadow: inset 0 0 0 0.03em #03b2cb, 0 0 0.05em #03b2cb, 0 0.1em 0.2em rgba(0, 0, 0, 0.2);
          box-shadow: inset 0 0 0 0.03em #03b2cb, 0 0 0.05em #03b2cb, 0 0.1em 0.2em rgba(0, 0, 0, 0.2); }

.rrui__switch__knob--on {
  left: 0.7125em; }

.rrui__switcher {
  position: relative;
  white-space: nowrap; }

.rrui__switcher .rrui__input {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.rrui__switcher__option {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  height: 100%;
  padding-left: calc(0.6rem * 1.5);
  padding-right: calc(0.6rem * 1.5);
  background-color: transparent;
  border: 1px solid #03b2cb;
  border-radius: 0.2rem;
  outline: none;
  -webkit-transition: all 50ms ease-out;
  -o-transition: all 50ms ease-out;
  transition: all 50ms ease-out; }

.rrui__switcher__option--first {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: none; }

.rrui__switcher__option--last {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0; }

.rrui__switcher__option--middle {
  border-radius: 0;
  border-right: none; }

.rrui__switcher__option:focus:not(:active):not(.rrui__switcher__option--selected) {
  color: #03b2cb; }

.rrui__switcher__option:active {
  color: #ffffff;
  background-color: #2bd7f0;
  -webkit-transition: none;
  -o-transition: none;
  transition: none; }

/*
.rrui__rich__fallback .rrui__switcher__option:active
{
	color            : #000000;
	background-color : transparent;
}
*/
/*
.rrui__rich__fallback .rrui__switcher__option input
{
	margin-left: 0;
}
*/
.rrui__switcher__option--selected {
  color: #ffffff;
  background-color: #03b2cb; }

.rrui__switcher__option {
  cursor: pointer; }

.rrui__switcher__option--disabled {
  cursor: default; }

.rrui__text-input__label--invalid {
  color: #d30f00; }

.rrui__input-field:not(:focus) + .rrui__text-input__label--placeholder {
  -webkit-transform: translateY(0) scale(1);
      -ms-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
  /* Introducing a return animation delay */
  /* Because when a user clicks/taps on an option */
  /* Then the input loses focus */
  /* Causing the return animation to start playing */
  /* and then revert back as the click finishes */
  /* returning focus to the input. */
  -webkit-transition-delay: 100ms;
       -o-transition-delay: 100ms;
          transition-delay: 100ms; }

/* Set the default height of multiline `<TextInput/>`s. */
.rrui__input-field--multiline {
  height: calc(0.6rem * 7);
  padding-top: calc(0.6rem / 2);
  padding-bottom: calc(0.6rem / 2);
  padding-left: 0;
  padding-right: 0; }

/* Multiline `<TextInput/>`'s label positioning. */
/* Must be same as `padding-top`/`padding-bottom`. */
.rrui__text-input__label--multiline {
  top: calc(0.6rem / 2); }

.rrui__tooltip {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  padding-left: calc(0.6rem * 1.5);
  padding-right: calc(0.6rem * 1.5);
  height: calc(0.6rem * 4);
  margin-top: calc(0.6rem * -1);
  color: #ffffff;
  background-color: #000000;
  border-radius: 0.1rem;
  opacity: 0;
  -webkit-transform: translateY(0.3em) scale(0.95);
      -ms-transform: translateY(0.3em) scale(0.95);
          transform: translateY(0.3em) scale(0.95);
  cursor: default; }

.rrui__tooltip--after-show {
  opacity: 1;
  /* transform : scale(1); */
  -webkit-transform: translateY(0) scale(1);
      -ms-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1); }

.rrui__tooltip--before-hide {
  opacity: 0;
  /* transform : scale(0.8); */
  -webkit-transform: translateY(0.3em) scale(0.92);
      -ms-transform: translateY(0.3em) scale(0.92);
          transform: translateY(0.3em) scale(0.92); }

.rrui__tooltip--after-show {
  -webkit-transition: opacity 90ms ease-out, -webkit-transform 120ms ease-out;
  transition: opacity 90ms ease-out, -webkit-transform 120ms ease-out;
  -o-transition: opacity 90ms ease-out, transform 120ms ease-out;
  transition: opacity 90ms ease-out, transform 120ms ease-out;
  transition: opacity 90ms ease-out, transform 120ms ease-out, -webkit-transform 120ms ease-out; }

.rrui__tooltip--before-hide {
  -webkit-transition: opacity 120ms ease-out, -webkit-transform 120ms ease-out;
  transition: opacity 120ms ease-out, -webkit-transform 120ms ease-out;
  -o-transition: opacity 120ms ease-out, transform 120ms ease-out;
  transition: opacity 120ms ease-out, transform 120ms ease-out;
  transition: opacity 120ms ease-out, transform 120ms ease-out, -webkit-transform 120ms ease-out; }

/* Prevents entering text selection mode
   on mobile devices when tapping down and holding */
.rrui__tooltip__target {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }