{"ast":null,"code":"import _classCallCheck from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Amar/emp/src/components/Login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, Button, Card, Checkbox } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function () {\n      _this.props.dispatch(loginUser(_this.state.data.email, _this.state.data.password));\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    // validate = data => {\n    //     const errors = {};\n    //     if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n    //     if(!data.password) errors.password = \"Can't be empty\";\n    //     return errors;\n    // }\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isUserLoggedIn: state.auth.loggedIn,\n    userObject: state.auth.user,\n    isBusiness: state.auth.isBusiness,\n    result: state.auth.result\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/Amar/emp/src/components/Login/index.js"],"names":["React","Component","connect","PropTypes","Link","Form","Input","Button","Card","Checkbox","loginUser","getBusinessUsersList","Login","onSubmit","props","dispatch","state","data","email","password","errors","propTypes","mapStateToProps","isUserLoggedIn","auth","loggedIn","userObject","user","isBusiness","result"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,QAApC,QAAoD,MAApD;AACA,SAASC,SAAT,EAAoBC,oBAApB,QAAgD,0BAAhD;;IAEMC,K;;;;;;;;;;;;;;;;;;UAwCFC,Q,GAAW,YAAM;AACT,YAAKC,KAAL,CAAWC,QAAX,CAAoBL,SAAS,CAAC,MAAKM,KAAL,CAAWC,IAAX,CAAgBC,KAAjB,EAAwB,MAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAAxC,CAA7B;AAEP,K;;;;;;;AAED;AACA;AACA;AACA;AACA;AACA;6BAGS;AAAA,wBACoB,KAAKH,KADzB;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSG,MADT,eACSA,MADT;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKP,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CADJ,CADJ;AAYH;;;;EAnEeZ,S;;AAsEpBW,KAAK,CAACS,SAAN,GAAkB,EAAlB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK,EAAI;AAC7B,SAAO;AACHO,IAAAA,cAAc,EAAEP,KAAK,CAACQ,IAAN,CAAWC,QADxB;AAEHC,IAAAA,UAAU,EAAEV,KAAK,CAACQ,IAAN,CAAWG,IAFpB;AAGHC,IAAAA,UAAU,EAAEZ,KAAK,CAACQ,IAAN,CAAWI,UAHpB;AAIHC,IAAAA,MAAM,EAACb,KAAK,CAACQ,IAAN,CAAWK;AAJf,GAAP;AAMH,CAPD;;AASA,eAAe3B,OAAO,CAACoB,eAAD,CAAP,CAAyBV,KAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, Button, Card, Checkbox } from 'antd';\nimport { loginUser, getBusinessUsersList } from \"../../redux/actions/auth\";\n\nclass Login extends Component {\n    \n\n    // constructor(props) {\n    //     super(props);\n    //     // defining the state to the component\n    //     this.state = {            \n    //         data:{\n    //             email: 'testbiz@rsrit.com',\n    //             password: '123456',\n    //             isBusiness:true\n    //         },            \n    //         loading: false,\n    //         errors: {}\n    //   }\n    // }\n\n    // componentDidMount(){\n    //     //this.props.dispatch(getBusinessUsersList());\n    // }\n\n    // static getDerivedStateFromProps(props, state) {\n\n    //     console.log(props.result);\n\n    //     if (props.isUserLoggedIn) {            \n    //         if(props.isBusiness){\n    //             props.history.push(\"/home\");\n    //         } else{\n    //             props.history.push(\"/empStatus\");\n    //         }\n    //     } \n    //     return null;\n    //   }\n\n    \n    // onChange = e => this.setState({\n    //     data: { ...this.state.data, [e.target.name]: e.target.value}\n    // });\n    \n    onSubmit = () => {\n            this.props.dispatch(loginUser(this.state.data.email, this.state.data.password));\n        \n    };\n\n    // validate = data => {\n    //     const errors = {};\n    //     if(!Validator.isEmail(data.email)) errors.email = \"Invalid Email\";\n    //     if(!data.password) errors.password = \"Can't be empty\";\n    //     return errors;\n    // }\n\n\n    render() { \n        const { data, errors } = this.state\n        return ( \n            <div>\n                <Card title=\"Login\">\n                    <Form>\n                       \n                        {/* <Checkbox name=\"isBusiness\" checked={data.isBusiness} onChange={this.onChange}>Business</Checkbox> */}\n                        <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>   \n                        {/* <p><Link to={{pathname: \"/signup\"}}>SignUp</Link></p> */}\n                    </Form>\n                </Card>\n            </div>\n         );\n    }\n}\n\nLogin.propTypes = {\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.auth.loggedIn,\n        userObject: state.auth.user,\n        isBusiness: state.auth.isBusiness,\n        result:state.auth.result\n    };\n};\n \nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}