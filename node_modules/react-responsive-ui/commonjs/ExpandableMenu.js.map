{"version":3,"sources":["../source/ExpandableMenu.js"],"names":["PureComponent","Component","ExpandableMenu","onCollapse","focusOut","focus","toggler","expand","list","collapse","toggle","storeListRef","ref","storeTogglerRef","storeTogglerNode","node","togglerNode","getTogglerNode","onBlur","event","onClick","disabled","props","onKeyDown","defaultPrevented","ctrlKey","altKey","shiftKey","metaKey","keyCode","preventDefault","upward","alignment","scrollIntoView","closeButtonIcon","closeLabel","style","className","children","menuItems","Children","toArray","shift","cloneElement","onExpand","propTypes","string","object","oneOfType","func","oneOf","isRequired","defaultProps"],"mappings":"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","file":"ExpandableMenu.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport ExpandableList from './ExpandableList'\r\nimport List from './List'\r\nimport Close, { CloseIcon } from './Close'\r\n\r\nimport { focus } from './utility/focus'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ExpandableMenu extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Component CSS class\r\n\t\tclassName  : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle      : PropTypes.object,\r\n\r\n\t\t// `aria-label` for the \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\tcloseLabel : PropTypes.string,\r\n\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([false])]).isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : CloseIcon\r\n\t}\r\n\r\n\tonCollapse = ({ focusOut }) =>\r\n\t{\r\n\t\tif (!focusOut) {\r\n\t\t\tthis.focus()\r\n\t\t}\r\n\t}\r\n\r\n\tfocus = () => focus(this.toggler)\r\n\r\n\texpand   = () => this.list.expand()\r\n\tcollapse = () => this.list.collapse()\r\n\ttoggle   = () => this.list.toggle()\r\n\r\n\tstoreListRef = (ref) => this.list = ref\r\n\tstoreTogglerRef = (ref) => this.toggler = ref\r\n\tstoreTogglerNode = (node) => this.togglerNode = node\r\n\tgetTogglerNode = () => this.togglerNode\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tupward,\r\n\t\t\talignment,\r\n\t\t\tscrollIntoView,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tcloseLabel,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst menuItems = React.Children.toArray(children)\r\n\t\tconst toggler = menuItems.shift()\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ classNames('rrui__menu', className) }>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ this.storeTogglerNode }\r\n\t\t\t\t\tonBlur={ this.onBlur }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonKeyDown={ this.onKeyDown }>\r\n\r\n\t\t\t\t\t{ React.cloneElement(toggler, { ref : this.storeTogglerRef }) }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ExpandableList\r\n\t\t\t\t\tref={this.storeListRef}\r\n\t\t\t\t\tupward={upward}\r\n\t\t\t\t\talignment={alignment}\r\n\t\t\t\t\tscrollIntoView={scrollIntoView}\r\n\t\t\t\t\tscrollMaxItems={0}\r\n\t\t\t\t\tonCollapse={this.onCollapse}\r\n\t\t\t\t\tonExpand={this.onExpand}\r\n\t\t\t\t\tonTapOutside={this.collapse}\r\n\t\t\t\t\tonFocusOut={this.collapse}\r\n\t\t\t\t\tgetTogglerNode={this.getTogglerNode}\r\n\t\t\t\t\tcloseButtonIcon={closeButtonIcon}\r\n\t\t\t\t\tcloseLabel={closeLabel}\r\n\t\t\t\t\tfocusSelectedItem={false}\r\n\t\t\t\t\tshouldCreateButtons={false}\r\n\t\t\t\t\tclassName=\"rrui__shadow\">\r\n\t\t\t\t\t{menuItems}\r\n\t\t\t\t</ExpandableList>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tonBlur = (event) => this.list && this.list.onBlur(event)\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst { disabled } = this.props\r\n\r\n\t\tif (!disabled) {\r\n\t\t\tthis.toggle()\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { disabled } = this.props\r\n\r\n\t\tif (disabled) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// \"Up\" arrow.\r\n\t\t\t// Select the previous item (if present).\r\n\t\t\tcase 38:\r\n\t\t\t// \"Down\" arrow.\r\n\t\t\t// Select the next item (if present).\r\n\t\t\tcase 40:\r\n\t\t\t\treturn this.list.onKeyDown(event)\r\n\r\n\t\t\t// \"Enter\".\r\n\t\t\tcase 13:\r\n\t\t\t\t// Submit containing `<form/>`.\r\n\t\t\t\t// Expand otherwise.\r\n\t\t\t\tthis.expand()\r\n\t\t\t\treturn event.preventDefault()\r\n\t\t}\r\n\t}\r\n}"]}