{"version":3,"sources":["../source/Form.js"],"names":["Form","submit","event","preventDefault","props","wait","busy","on_key_down","keyCode","cancel","post","error","className","style","render_children","children","form_elements","Children","toArray","error_element","index","child","type","FormErrorType","cloneElement","key","FormActionsType","insert_at","push","propTypes","func","oneOfType","string","bool","node","isRequired","object","defaultProps","Error","Actions","context","registerForm","unregisterForm","closeIfNotBusy","closeLabel"],"mappings":"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","file":"Form.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport Button from './Button'\r\nimport { ModalContext } from './Modal'\r\n\r\n// Prevents `<form/> submission when `wait` is `true`.\r\n// And also inserts `<Form.Error/>` when `error` is passed.\r\n// Using `Component` here instead of `PureComponent`\r\n// because `<Form.Actions>` depends on `context` and therefore\r\n// should be rerendered even if the `props` haven't changed.\r\n// And probably that was also why it would keep displaying an old error\r\n// (and not resetting it for some reason).\r\nexport default class Form extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// `onSubmit` handler\r\n\t\tsubmit      : PropTypes.func,\r\n\r\n\t\t// On `Escape` keydown handler\r\n\t\tcancel      : PropTypes.func,\r\n\r\n\t\t// `error` can be passed for non-javascript old-school forms.\r\n\t\t// e.g. when a form submitted via HTTP POST request had an error,\r\n\t\t// then this error is rendered as part of the form.\r\n\t\terror       : PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.node]),\r\n\r\n\t\t// The HTML form `action` attribute,\r\n\t\t// i.e. the URL to which the form will be posted\r\n\t\t// in case of a non-javascript old-school POST submission.\r\n\t\tpost        : PropTypes.string,\r\n\r\n\t\t// Is form submission in progress\r\n\t\twait        : PropTypes.bool.isRequired,\r\n\r\n\t\t// (deprecated)\r\n\t\t// (use `wait` instead)\r\n\t\t// Is form submission in progress\r\n\t\tbusy        : PropTypes.bool.isRequired,\r\n\r\n\t\t// CSS class\r\n\t\tclassName   : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle       : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\twait : false,\r\n\t\tbusy : false\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst { post, error, className, style } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={ this.submit }\r\n\t\t\t\tonKeyDown={ this.on_key_down }\r\n\t\t\t\taction={ post }\r\n\t\t\t\tmethod=\"POST\"\r\n\t\t\t\tclassName={ classNames('rrui__form', className) }\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tnoValidate>\r\n\r\n\t\t\t\t{ this.render_children(error) }\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\t// Adds `error` element to the form\r\n\trender_children(error)\r\n\t{\r\n\t\tconst { children } = this.props\r\n\r\n\t\tconst form_elements = React.Children.toArray(children)\r\n\r\n\t\t// Insert `error` element\r\n\t\tif (error)\r\n\t\t{\r\n\t\t\t// Will be set to `null` upon insertion\r\n\t\t\tlet error_element = <Form.Error key=\"form-error\">{ error }</Form.Error>\r\n\r\n\t\t\t// Show form error above form actions,\r\n\t\t\t// so that the error will be visible and won't be overlooked.\r\n\t\t\tlet index = 0\r\n\t\t\tfor (const child of form_elements)\r\n\t\t\t{\r\n\t\t\t\tif (child.type === FormErrorType)\r\n\t\t\t\t{\r\n\t\t\t\t\tform_elements[index] = React.cloneElement(child, { key: 'form-error' }, error)\r\n\t\t\t\t\terror_element = null\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (child.type === FormActionsType)\r\n\t\t\t\t{\r\n\t\t\t\t\tform_elements.insert_at(index, error_element)\r\n\t\t\t\t\terror_element = null\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++\r\n\t\t\t}\r\n\r\n\t\t\tif (error_element)\r\n\t\t\t{\r\n\t\t\t\tform_elements.push(error_element)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn form_elements\r\n\t}\r\n\r\n\tsubmit = (event) =>\r\n\t{\r\n\t\tif (event)\r\n\t\t{\r\n\t\t\tevent.preventDefault()\r\n\t\t}\r\n\r\n\t\tconst { wait, busy, submit } = this.props\r\n\r\n\t\t// Prevent form double submit\r\n\t\t// (because not only buttons submit a form,\r\n\t\t//  therefore just disabling buttons is not enough).\r\n\t\tif (wait || busy)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (submit)\r\n\t\t{\r\n\t\t\treturn submit()\r\n\t\t}\r\n\t}\r\n\r\n\ton_key_down = (event) =>\r\n\t{\r\n\t\t// Cancel editing on \"Escape\" key\r\n\t\tif (event.keyCode === 27)\r\n\t\t{\r\n\t\t\tconst { cancel } = this.props\r\n\r\n\t\t\tif (cancel)\r\n\t\t\t{\r\n\t\t\t\tcancel()\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nForm.Error = function({ children })\r\n{\r\n\treturn (\r\n\t\t<div className=\"rrui__form__error\">\r\n\t\t\t{ children }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nForm.Actions = function({ children })\r\n{\r\n\treturn (\r\n\t\t<ModalContext.Consumer>\r\n\t\t\t{context => (\r\n\t\t\t\t<Actions context={ context }>\r\n\t\t\t\t\t{ children }\r\n\t\t\t\t</Actions>\r\n\t\t\t)}\r\n\t\t</ModalContext.Consumer>\r\n\t)\r\n}\r\n\r\n// Workaround for `react-hot-loader`.\r\n// https://github.com/gaearon/react-hot-loader#checking-element-types\r\nconst FormErrorType = <Form.Error/>.type\r\nconst FormActionsType = <Form.Actions/>.type\r\n\r\nclass Actions extends Component\r\n{\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { context } = this.props\r\n\r\n\t\tif (context)\r\n\t\t{\r\n\t\t\tcontext.registerForm()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { context } = this.props\r\n\r\n\t\tif (context)\r\n\t\t{\r\n\t\t\tcontext.unregisterForm()\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcontext,\r\n\t\t\tchildren,\r\n\t\t\tclassName,\r\n\t\t\tstyle\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={ classNames('rrui__form__actions', className) }\r\n\t\t\t\tstyle={ style }>\r\n\t\t\t\t{ context &&\r\n\t\t\t\t\t<Button action={ context.closeIfNotBusy }>\r\n\t\t\t\t\t\t{ context.closeLabel }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{ children }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]}