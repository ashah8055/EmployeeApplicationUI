'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _PageAndMenu = require('./PageAndMenu');

var _MenuIcon = require('./MenuIcon');

var _MenuIcon2 = _interopRequireDefault(_MenuIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// `PureComponent` is only available in React >= 15.3.0.
var PureComponent = _react2.default.PureComponent || _react2.default.Component;

var ContextAwareMenuButton = function ContextAwareMenuButton(props) {
	return _react2.default.createElement(
		_PageAndMenu.Context.Consumer,
		null,
		function (context) {
			return _react2.default.createElement(MenuButton, _extends({}, props, {
				registerMenuButton: context.registerMenuButton,
				toggleMenu: context.toggleMenu,
				menuIsExpanded: context.menuIsExpanded }));
		}
	);
};

exports.default = ContextAwareMenuButton;
var MenuButton = (_temp2 = _class = function (_PureComponent) {
	_inherits(MenuButton, _PureComponent);

	function MenuButton() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, MenuButton);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuButton.__proto__ || Object.getPrototypeOf(MenuButton)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {
			event.preventDefault();

			var toggleMenu = _this.props.toggleMenu;


			toggleMenu();
		}, _this.storeButtonNode = function (node) {
			return _this.button = node;
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(MenuButton, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var registerMenuButton = this.props.registerMenuButton;


			this.unregister = registerMenuButton({
				element: function element() {
					return _this2.button;
				}
			});
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.unregister();
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    link = _props.link,
			    className = _props.className,
			    MenuButtonIcon = _props.icon,
			    menuIsExpanded = _props.menuIsExpanded,
			    toggleMenu = _props.toggleMenu,
			    registerMenuButton = _props.registerMenuButton,
			    rest = _objectWithoutProperties(_props, ['link', 'className', 'icon', 'menuIsExpanded', 'toggleMenu', 'registerMenuButton']);

			return _react2.default.createElement(
				'a',
				_extends({
					ref: this.storeButtonNode,
					href: link,
					onClick: this.onClick,
					className: (0, _classnames2.default)('rrui__menu-button', className)
				}, rest),
				_react2.default.createElement(MenuButtonIcon, { expanded: menuIsExpanded })
			);
		}
	}]);

	return MenuButton;
}(PureComponent), _class.propTypes = {
	// Context.
	registerMenuButton: _propTypes2.default.func.isRequired,
	toggleMenu: _propTypes2.default.func.isRequired,
	menuIsExpanded: _propTypes2.default.bool.isRequired,

	// A URL of the "Menu" page:
	// if a web browser has javascript disabled (e.g. Tor),
	// then the menu button will redirect to this Menu page URL.
	// If not set then won't redirect anywhere.
	link: _propTypes2.default.string.isRequired,

	// HTML `title` attribute.
	title: _propTypes2.default.string,

	// Menu button icon component.
	icon: _propTypes2.default.func.isRequired,

	// CSS class.
	className: _propTypes2.default.string,

	// CSS style object.
	style: _propTypes2.default.object
}, _class.defaultProps = {
	link: '#',
	icon: _MenuIcon2.default
}, _temp2);
//# sourceMappingURL=MenuButton.js.map