{"version":3,"sources":["../source/findNumbers.js"],"names":["findNumbers","arg_1","arg_2","arg_3","arg_4","text","options","metadata","matcher","results","hasNext","push","next"],"mappings":";;;;;kBAGwBA,W;;AAHxB;;AACA;;;;;;AAEe,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,KAA1C,EACf;AAAA,2BACqC,0CAAmBH,KAAnB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,KAAxC,CADrC;AAAA,KACSC,IADT,uBACSA,IADT;AAAA,KACeC,OADf,uBACeA,OADf;AAAA,KACwBC,QADxB,uBACwBA,QADxB;;AAGC,KAAMC,UAAU,iCAAuBH,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAAhB;;AAEA,KAAME,UAAU,EAAhB;AACA,QAAOD,QAAQE,OAAR,EAAP,EAA0B;AACzBD,UAAQE,IAAR,CAAaH,QAAQI,IAAR,EAAb;AACA;AACD,QAAOH,OAAP;AACA","file":"findNumbers.js","sourcesContent":["import { sort_out_arguments } from './findPhoneNumbers'\r\nimport PhoneNumberMatcher from './PhoneNumberMatcher'\r\n\r\nexport default function findNumbers(arg_1, arg_2, arg_3, arg_4)\r\n{\r\n\tconst { text, options, metadata } = sort_out_arguments(arg_1, arg_2, arg_3, arg_4)\r\n\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\r\n\tconst results = []\r\n\twhile (matcher.hasNext()) {\r\n\t\tresults.push(matcher.next())\r\n\t}\r\n\treturn results\r\n}"]}