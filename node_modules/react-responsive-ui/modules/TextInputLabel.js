'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = TextInputLabel;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TextInputLabel(_ref) {
	var id = _ref.id,
	    value = _ref.value,
	    required = _ref.required,
	    invalid = _ref.invalid,
	    floats = _ref.floats,
	    children = _ref.children;

	return _react2.default.createElement(
		'label',
		{
			htmlFor: id,
			className: (0, _classnames2.default)('rrui__input-label', {
				'rrui__input-label--required': required && isEmpty(value),
				'rrui__input-label--invalid': invalid,
				'rrui__input-label--floating': floats,
				'rrui__text-input__label--placeholder': floats && isEmpty(value)
			}) },
		children
	);
}

// Whether the input is empty
function isEmpty(value) {
	// `0` is not an empty value
	if (typeof value === 'number' && value === 0) {
		return false;
	}

	// `false` is not an empty value
	if (typeof value === 'boolean' && value === false) {
		return false;
	}

	// An empty string, `undefined`, `null` â€“
	// all those are considered an empty value.
	if (!value) {
		return true;
	}

	// Whitespace string is also considered empty
	if (typeof value === 'string' && !value.trim()) {
		return true;
	}

	// Not empty
	return false;
}
//# sourceMappingURL=TextInputLabel.js.map