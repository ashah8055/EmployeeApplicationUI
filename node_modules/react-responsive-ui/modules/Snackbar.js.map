{"version":3,"sources":["../source/Snackbar.js"],"names":["PureComponent","Component","Snackbar","state","values","next","props","minTime","lengthTimeFactor","value","shift","setState","height","undefined","wide","hiding","duration","length","content","auto_hide_timer","setTimeout","hide","hideAnimationDuration","show","show_next_snack_timeout","storeContainerNode","node","container","storeSnackbarNode","snackbar","clearTimeout","show_snack_timeout","prevProps","push","new_value","receiveNewValue","offsetHeight","offsetWidth","document","documentElement","clientWidth","marginBottom","parseInt","getComputedStyle","anti_lag_timeout","component","type","container_style","transform","transition","renderContent","propTypes","shape","oneOfType","string","func","object","number","isRequired","defaultProps"],"mappings":"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","file":"Snackbar.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\n// Sits at the bottom of a page and displays notifications\r\nexport default class Snackbar extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Snackbar value (either a message, or an object)\r\n\t\tvalue : PropTypes.shape\r\n\t\t({\r\n\t\t\t// Notification content.\r\n\t\t\tcontent : PropTypes.oneOfType\r\n\t\t\t([\r\n\t\t\t\tPropTypes.string,\r\n\t\t\t\tPropTypes.node\r\n\t\t\t]),\r\n\r\n\t\t\t// Instead of `content` property one may supply `component` property\r\n\t\t\t// which must be a React component which receives all \"rest\" `value` properties\r\n\t\t\t// and also `hide`property (a function that hides the notification).\r\n\t\t\tcomponent : PropTypes.func,\r\n\r\n\t\t\t// `props` are passed to `component`.\r\n\t\t\tprops : PropTypes.object,\r\n\r\n\t\t\t// If `content` is a `string` then its `length` is calculated automatically.\r\n\t\t\t// Otherwise one may pass `length` manually.\r\n\t\t\t// It's used for calculating notification `duration`.\r\n\t\t\tlength : PropTypes.number,\r\n\r\n\t\t\t// `type` is appended as a BEM modifier to `.rrui__snackbar` CSS class.\r\n\t\t\t// E.g. `.rrui__snackbar--error` for `{ type: \"error\" }`.\r\n\t\t\ttype : PropTypes.string,\r\n\r\n\t\t\t// How long does the notification stay.\r\n\t\t\t// Pass `-1` for it to stay until it's closed manually.\r\n\t\t\tduration : PropTypes.number\r\n\t\t}),\r\n\r\n\t\t// // \"Snack\" showing CSS animation duration.\r\n\t\t// // Is 225 milliseconds by default.\r\n\t\t// showAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\t// \"Snack\" hiding CSS animation duration.\r\n\t\t// Is 195 milliseconds by default.\r\n\t\thideAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tminTime          : PropTypes.number.isRequired,\r\n\t\tlengthTimeFactor : PropTypes.number.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// showAnimationDuration : 225,\r\n\t\thideAnimationDuration : 195,\r\n\t\tminTime : 1200,\r\n\t\tlengthTimeFactor : 60\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\tvalues: []\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tclearTimeout(this.auto_hide_timer)\r\n\t\tclearTimeout(this.show_next_snack_timeout)\r\n\t\tclearTimeout(this.show_snack_timeout)\r\n\t}\r\n\r\n\treceiveNewValue(prevProps)\r\n\t{\r\n\t\tconst { value } = this.props\r\n\r\n\t\t// If `value` has changed then push it to the queue.\r\n\t\tif (value && value !== prevProps.value)\r\n\t\t{\r\n\t\t\t// Add the notification to the queue\r\n\t\t\tthis.push(value)\r\n\t\t}\r\n\t}\r\n\r\n\t// Adds a notification to the queue\r\n\tpush(new_value)\r\n\t{\r\n\t\tconst { values, value } = this.state\r\n\r\n\t\t// Add the notification to the queue\r\n\t\tvalues.push(new_value)\r\n\r\n\t\t// If the notification queue was empty\r\n\t\t// then kick-start it.\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\tthis.next()\r\n\t\t}\r\n\t}\r\n\r\n\t// Displays the next notification in the queue\r\n\tnext = () =>\r\n\t{\r\n\t\tconst { values } = this.state\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\tminTime,\r\n\t\t\tlengthTimeFactor\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// Get the next notification from the queue\r\n\t\t// (will be `undefined` if the queue is empty)\r\n\t\tconst value = values.shift()\r\n\r\n\t\t// Reset the notification display\r\n\t\tthis.setState({ value, height: undefined, wide: undefined, hiding: false })\r\n\r\n\t\t// If the queue is empty, then just exit\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// `state.show` will be set to `true` later,\r\n\t\t// when the height of the element is measured\r\n\t\t// (which is after it renders)\r\n\r\n\t\tif (value.duration === -1)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tconst length = typeof value.content === 'string' ? value.content.length : value.length || 0\r\n\t\tconst duration = value.duration || (minTime + length * lengthTimeFactor)\r\n\r\n\t\t// Hide the notification after it expires\r\n\t\tthis.auto_hide_timer = setTimeout(this.hide, duration)\r\n\t}\r\n\r\n\thide = () =>\r\n\t{\r\n\t\tconst { hideAnimationDuration } = this.props\r\n\r\n\t\t// Start the hiding animation for the notification\r\n\t\tthis.setState({ show: false, hiding: true })\r\n\r\n\t\t// Display the next notification\r\n\t\t// after the currently being hidden one\r\n\t\t// finishes its hiding animation.\r\n\t\tthis.show_next_snack_timeout = setTimeout(this.next, hideAnimationDuration)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps)\r\n\t{\r\n\t\tlet { height, value } = this.state\r\n\r\n\t\t// If `value` got updated then push it to the list of `values`.\r\n\t\tthis.receiveNewValue(prevProps)\r\n\r\n\t\t// The notification DOM element has just been rendered\r\n\t\t// which means its dimensions are set by now.\r\n\t\t// Calculate the notification container DOM element height\r\n\t\t// so that the slide-from-bottom animation knows\r\n\t\t// its target Y-position for the CSS `translate` transform.\r\n\t\tif (height === undefined && value)\r\n\t\t{\r\n\t\t\theight = this.snackbar.offsetHeight\r\n\t\t\tconst wide = this.snackbar.offsetWidth === document.documentElement.clientWidth\r\n\t\t\tconst marginBottom = parseInt(getComputedStyle(this.container).marginBottom)\r\n\t\t\tconst anti_lag_timeout = 100 // Otherwise it would jump to fully shown in Chrome when there's a queue of snacks waiting to be shown\r\n\t\t\tthis.setState({ height, wide, marginBottom }, () =>\r\n\t\t\t{\r\n\t\t\t\tthis.show_snack_timeout = setTimeout(() => this.setState({ show: true }), anti_lag_timeout)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tstoreContainerNode = (node) => this.container = node\r\n\tstoreSnackbarNode  = (node) => this.snackbar = node\r\n\r\n\trenderContent(value)\r\n\t{\r\n\t\tif (value.component) {\r\n\t\t\treturn value.component({ ...value.props, hide: this.hide })\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst { type } = this.props\r\n\t\tconst { show, value, height, wide, marginBottom, hiding } = this.state\r\n\r\n\t\tconst container_style = {}\r\n\r\n\t\tif (!show)\r\n\t\t{\r\n\t\t\t// If no snack is being shown,\r\n\t\t\t// or if a snack is about to be shown,\r\n\t\t\t// then shift it under the screen's bottom border\r\n\t\t\t// to show the slide-from-bottom animation at the next step.\r\n\t\t\tif (height !== undefined)\r\n\t\t\t{\r\n\t\t\t\tcontainer_style.transform = `translateY(${height + marginBottom}px)`\r\n\t\t\t}\r\n\r\n\t\t\tif (!hiding)\r\n\t\t\t{\r\n\t\t\t\tcontainer_style.transition = 'none'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ this.storeContainerNode }\r\n\t\t\t\tstyle={ container_style }\r\n\t\t\t\tclassName={ classNames('rrui__snackbar__container',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__snackbar__container--hidden' : !show,\r\n\t\t\t\t\t'rrui__snackbar__container--wide' : wide\r\n\t\t\t\t}) }>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ this.storeSnackbarNode }\r\n\t\t\t\t\tclassName={ classNames('rrui__snackbar', value && value.type && `rrui__snackbar--${value.type}`) }>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"rrui__snackbar__text\">\r\n\t\t\t\t\t\t{ value && (value.content !== undefined ? value.content : this.renderContent(value)) }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]}