{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Avatar from './Avatar';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\n\nfunction getComponentProps(prop) {\n  if (prop && (typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    return {\n      shape: 'square'\n    };\n  }\n\n  return {\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function (_React$Component) {\n  _inherits(Skeleton, _React$Component);\n\n  function Skeleton() {\n    _classCallCheck(this, Skeleton);\n\n    return _possibleConstructorReturn(this, (Skeleton.__proto__ || Object.getPrototypeOf(Skeleton)).apply(this, arguments));\n  }\n\n  _createClass(Skeleton, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          loading = _props.loading,\n          prefixCls = _props.prefixCls,\n          className = _props.className,\n          children = _props.children,\n          avatar = _props.avatar,\n          title = _props.title,\n          paragraph = _props.paragraph,\n          active = _props.active;\n\n      if (loading || !('loading' in this.props)) {\n        var _classNames;\n\n        var hasAvatar = !!avatar;\n        var hasTitle = !!title;\n        var hasParagraph = !!paragraph; // Avatar\n\n        var avatarNode = void 0;\n\n        if (hasAvatar) {\n          var avatarProps = _extends({}, getAvatarBasicProps(hasTitle, hasParagraph), getComponentProps(avatar));\n\n          avatarNode = React.createElement('div', {\n            className: prefixCls + '-header'\n          }, React.createElement(Avatar, avatarProps));\n        }\n\n        var contentNode = void 0;\n\n        if (hasTitle || hasParagraph) {\n          // Title\n          var $title = void 0;\n\n          if (hasTitle) {\n            var titleProps = _extends({}, getTitleBasicProps(hasAvatar, hasParagraph), getComponentProps(title));\n\n            $title = React.createElement(Title, titleProps);\n          } // Paragraph\n\n\n          var paragraphNode = void 0;\n\n          if (hasParagraph) {\n            var paragraphProps = _extends({}, getParagraphBasicProps(hasAvatar, hasTitle), getComponentProps(paragraph));\n\n            paragraphNode = React.createElement(Paragraph, paragraphProps);\n          }\n\n          contentNode = React.createElement('div', {\n            className: prefixCls + '-content'\n          }, $title, paragraphNode);\n        }\n\n        var cls = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-with-avatar', hasAvatar), _defineProperty(_classNames, prefixCls + '-active', active), _classNames));\n        return React.createElement('div', {\n          className: cls\n        }, avatarNode, contentNode);\n      }\n\n      return children;\n    }\n  }]);\n\n  return Skeleton;\n}(React.Component);\n\nSkeleton.defaultProps = {\n  prefixCls: 'ant-skeleton',\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nexport default Skeleton;","map":null,"metadata":{},"sourceType":"module"}