{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nvar CheckableTag = function (_React$Component) {\n  _inherits(CheckableTag, _React$Component);\n\n  function CheckableTag() {\n    _classCallCheck(this, CheckableTag);\n\n    var _this = _possibleConstructorReturn(this, (CheckableTag.__proto__ || Object.getPrototypeOf(CheckableTag)).apply(this, arguments));\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange;\n\n      if (onChange) {\n        onChange(!checked);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckableTag, [{\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _a = this.props,\n          _a$prefixCls = _a.prefixCls,\n          prefixCls = _a$prefixCls === undefined ? 'ant-tag' : _a$prefixCls,\n          className = _a.className,\n          checked = _a.checked,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\"]);\n\n      var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-checkable', true), _defineProperty(_classNames, prefixCls + '-checkable-checked', checked), _classNames), className);\n      delete restProps.onChange; // TypeScript cannot check delete now.\n\n      return React.createElement('div', _extends({}, restProps, {\n        className: cls,\n        onClick: this.handleClick\n      }));\n    }\n  }]);\n\n  return CheckableTag;\n}(React.Component);\n\nexport default CheckableTag;","map":null,"metadata":{},"sourceType":"module"}