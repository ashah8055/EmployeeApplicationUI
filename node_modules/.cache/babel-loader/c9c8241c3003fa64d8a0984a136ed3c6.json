{"ast":null,"code":"import _objectSpread from \"/Users/Amar/emp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as Types from \"../actions/types\";\nvar initialUserObj = {\n  result: []\n};\n\nvar getEmployeeListError = function getEmployeeListError(state) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nvar getEmployeeList = function getEmployeeList(state, action) {\n  //console.log(\"REdux\" + JSON.stringify(action));\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      result: JSON.parse(JSON.stringify(action.result))\n    }); //  console.log(\"New\" + JSON.stringify(newState));\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar handleSearchEmp = function handleSearchEmp(state, action) {\n  // let newState = { ...state };\n  // if (action.result !== undefined) {\n  //   let employee = [];\n  //   for (let val in state.result) {\n  //     if (state.result[val].firstName.match(action.result.firstName)) {\n  //       employee.push(state.result[val]);\n  //     }\n  //   }\n  //   newState = Object.assign({}, state, {\n  //     result: JSON.parse(JSON.stringify(action.result))\n  //   });\n  // }\n  // return { ...newState };\n  var newState = _objectSpread({}, state);\n\n  if (action.result !== undefined) {\n    newState = Object.assign({}, state, {\n      result: JSON.parse(JSON.stringify(action.result))\n    }); // console.log(\"New\" + JSON.stringify(newState));\n  }\n\n  return _objectSpread({}, newState);\n};\n\nvar searchError = function searchError(state) {\n  var newState = _objectSpread({}, state);\n\n  return _objectSpread({}, newState);\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserObj;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case Types.GET_EMPLOYEE_LIST:\n      return _objectSpread({}, state);\n\n    case Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE:\n      return getEmployeeList(state, action);\n\n    case Types.GET_EMPLOYEE_SELECTED_LIST:\n      return getEmployeeListSelected(state, action);\n\n    case Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE:\n      return getEmployeeListError(state);\n\n    case Types.SEARCH_EMP:\n      return _objectSpread({}, state);\n\n    case Types.SEARCH_EMP_SUCCESS:\n      return handleSearchEmp(state, action);\n\n    case Types.SEARCH_EMP_ERROR:\n      return searchError(state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/reducers/Get_List.js"],"names":["Types","initialUserObj","result","getEmployeeListError","state","newState","getEmployeeList","action","undefined","Object","assign","JSON","parse","stringify","handleSearchEmp","searchError","type","GET_EMPLOYEE_LIST","GET_EMPLOYEE_LIST_SUCCESS_RESPONSE","GET_EMPLOYEE_SELECTED_LIST","getEmployeeListSelected","GET_EMPLOYEE_LIST_ERROR_RESPONSE","SEARCH_EMP","SEARCH_EMP_SUCCESS","SEARCH_EMP_ERROR"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAAvB;;AAIA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAClC,MAAIC,QAAQ,qBAAQD,KAAR,CAAZ;;AACA,2BAAYC,QAAZ;AACH,CAHD;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAQG,MAAR,EAAmB;AACvC;AACA,MAAIF,QAAQ,qBAAQD,KAAR,CAAZ;;AACA,MAAIG,MAAM,CAACL,MAAP,KAAkBM,SAAtB,EAAiC;AAC7BH,IAAAA,QAAQ,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAChCF,MAAAA,MAAM,EAAES,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,MAAM,CAACL,MAAtB,CAAX;AADwB,KAAzB,CAAX,CAD6B,CAI7B;AACH;;AACD,2BAAYG,QAAZ;AACH,CAVD;;AAYA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACV,KAAD,EAAQG,MAAR,EAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIF,QAAQ,qBAAQD,KAAR,CAAZ;;AACA,MAAIG,MAAM,CAACL,MAAP,KAAkBM,SAAtB,EAAiC;AAC7BH,IAAAA,QAAQ,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAChCF,MAAAA,MAAM,EAAES,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,MAAM,CAACL,MAAtB,CAAX;AADwB,KAAzB,CAAX,CAD6B,CAI7B;AACH;;AACD,2BAAYG,QAAZ;AACH,CAtBD;;AAwBA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAAAX,KAAK,EAAI;AACzB,MAAIC,QAAQ,qBAAQD,KAAR,CAAZ;;AACA,2BAAYC,QAAZ;AACH,CAHD;;AAKA,gBAAe,YAAyC;AAAA,MAAxCD,KAAwC,uEAAhCH,cAAgC;AAAA,MAAhBM,MAAgB,uEAAP,EAAO;;AACpD,UAAQA,MAAM,CAACS,IAAf;AACI,SAAKhB,KAAK,CAACiB,iBAAX;AACI,+BAAYb,KAAZ;;AACJ,SAAKJ,KAAK,CAACkB,kCAAX;AACI,aAAOZ,eAAe,CAACF,KAAD,EAAQG,MAAR,CAAtB;;AACJ,SAAKP,KAAK,CAACmB,0BAAX;AACI,aAAOC,uBAAuB,CAAChB,KAAD,EAAQG,MAAR,CAA9B;;AACJ,SAAKP,KAAK,CAACqB,gCAAX;AACI,aAAOlB,oBAAoB,CAACC,KAAD,CAA3B;;AACJ,SAAKJ,KAAK,CAACsB,UAAX;AACI,+BAAYlB,KAAZ;;AACJ,SAAKJ,KAAK,CAACuB,kBAAX;AACI,aAAOT,eAAe,CAACV,KAAD,EAAQG,MAAR,CAAtB;;AACJ,SAAKP,KAAK,CAACwB,gBAAX;AACI,aAAOT,WAAW,CAACX,KAAD,CAAlB;;AACJ;AACI,aAAOA,KAAP;AAhBR;AAkBH,CAnBD","sourcesContent":["import * as Types from \"../actions/types\";\n\nconst initialUserObj = {\n    result: []\n};\n\nconst getEmployeeListError = state => {\n    let newState = { ...state };\n    return { ...newState };\n};\n\nconst getEmployeeList = (state, action) => {\n    //console.log(\"REdux\" + JSON.stringify(action));\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, {\n            result: JSON.parse(JSON.stringify(action.result))\n        });\n        //  console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n};\n\nconst handleSearchEmp = (state, action) => {\n    // let newState = { ...state };\n    // if (action.result !== undefined) {\n    //   let employee = [];\n    //   for (let val in state.result) {\n    //     if (state.result[val].firstName.match(action.result.firstName)) {\n    //       employee.push(state.result[val]);\n    //     }\n    //   }\n    //   newState = Object.assign({}, state, {\n    //     result: JSON.parse(JSON.stringify(action.result))\n    //   });\n    // }\n    // return { ...newState };\n    let newState = { ...state };\n    if (action.result !== undefined) {\n        newState = Object.assign({}, state, {\n            result: JSON.parse(JSON.stringify(action.result))\n        });\n        // console.log(\"New\" + JSON.stringify(newState));\n    }\n    return { ...newState };\n};\n\nconst searchError = state => {\n    let newState = { ...state };\n    return { ...newState };\n};\n\nexport default (state = initialUserObj, action = {}) => {\n    switch (action.type) {\n        case Types.GET_EMPLOYEE_LIST:\n            return { ...state };\n        case Types.GET_EMPLOYEE_LIST_SUCCESS_RESPONSE:\n            return getEmployeeList(state, action);\n        case Types.GET_EMPLOYEE_SELECTED_LIST:\n            return getEmployeeListSelected(state, action)\n        case Types.GET_EMPLOYEE_LIST_ERROR_RESPONSE:\n            return getEmployeeListError(state);\n        case Types.SEARCH_EMP:\n            return { ...state };\n        case Types.SEARCH_EMP_SUCCESS:\n            return handleSearchEmp(state, action);\n        case Types.SEARCH_EMP_ERROR:\n            return searchError(state);\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}