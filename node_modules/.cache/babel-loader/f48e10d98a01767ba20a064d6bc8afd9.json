{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Amar/emp/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchLoginUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheet),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchTimeSheetCalander),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchSaveTimeSheetCalander),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchListOfEmployee),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCreateProjectDetails),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service'; //const baseUrl = 'http://localhost:8080';\n\nvar baseUrl = 'https://sleepy-basin-37644.herokuapp.com';\n\nfunction fetchLoginUser(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchLoginUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.firstname = \"asdfg\"; //action.code;\n\n          formBody.lastname = \"zxcvbb\"; //action.provider;\n\n          formBody.age = \"34\"; //const reqMethod = \"POST\";\n\n          reqMethod = \"GET\";\n          loginUrl = baseUrl + '/view';\n          _context.next = 10;\n          return call(GetDataFromServer, loginUrl, '', '');\n\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return response.json();\n\n        case 13:\n          result = _context.sent;\n          console.log(\"ADS\" + result.workingdetails);\n          console.log(\"Result ->\" + JSON.stringify(result));\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context.next = 22;\n            break;\n          }\n\n          _context.next = 20;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 20:\n          _context.next = 24;\n          break;\n\n        case 22:\n          _context.next = 24;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 24:\n          _context.next = 29;\n          break;\n\n        case 26:\n          _context.prev = 26;\n          _context.t0 = _context[\"catch\"](0);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context.t0);\n\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 26]]);\n}\n\nfunction fetchTimeSheet(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n          _context2.prev = 1;\n          console.log(\"Action->\" + JSON.stringify(action));\n          formBody = {};\n          formBody.selectWeek = action.selectWeek; //action.provider;\n\n          formBody.jobTitle = action.jobTitle;\n          formBody.approver = action.approver;\n          formBody.client = action.client;\n          formBody.endDate = action.endDate;\n          formBody.projectId = action.projectId; //const reqMethod = \"POST\";\n\n          reqMethod = \"POST\";\n          loginUrl = baseUrl + '/timesheet/create';\n          _context2.next = 14;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 14:\n          response = _context2.sent;\n          _context2.next = 17;\n          return response.json();\n\n        case 17:\n          result = _context2.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context2.next = 24;\n            break;\n          }\n\n          _context2.next = 22;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 22:\n          _context2.next = 26;\n          break;\n\n        case 24:\n          _context2.next = 26;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 26:\n          _context2.next = 31;\n          break;\n\n        case 28:\n          _context2.prev = 28;\n          _context2.t0 = _context2[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context2.t0);\n\n        case 31:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 28]]);\n}\n\nfunction fetchTimeSheetCalander(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchTimeSheetCalander$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"Submit Action->\" + JSON.stringify(action));\n          _context3.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          reqMethod = \"POST\";\n          loginUrl = baseUrl + '/timesheet/submit';\n          _context3.next = 8;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 8:\n          response = _context3.sent;\n          _context3.next = 11;\n          return response.json();\n\n        case 11:\n          result = _context3.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context3.next = 18;\n            break;\n          }\n\n          _context3.next = 16;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 16:\n          _context3.next = 20;\n          break;\n\n        case 18:\n          _context3.next = 20;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 20:\n          _context3.next = 25;\n          break;\n\n        case 22:\n          _context3.prev = 22;\n          _context3.t0 = _context3[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context3.t0);\n\n        case 25:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[1, 22]]);\n}\n\nfunction fetchSaveTimeSheetCalander(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchSaveTimeSheetCalander$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n          _context4.prev = 1;\n          formBody = {};\n          formBody.workingdetails = action.submitTimeSheet.workingdetails;\n          reqMethod = \"POST\";\n          loginUrl = baseUrl + '/timesheet/save';\n          _context4.next = 8;\n          return call(GetDataFromServer, loginUrl, 'POST', formBody);\n\n        case 8:\n          response = _context4.sent;\n          _context4.next = 11;\n          return response.json();\n\n        case 11:\n          result = _context4.sent;\n          console.log('Result Json' + result);\n\n          if (!result.error) {\n            _context4.next = 18;\n            break;\n          }\n\n          _context4.next = 16;\n          return put({\n            type: \"LOGIN_USER_SERVER_REPONSE_ERROR\",\n            error: result.error\n          });\n\n        case 16:\n          _context4.next = 20;\n          break;\n\n        case 18:\n          _context4.next = 20;\n          return put({\n            type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS,\n            result: result\n          });\n\n        case 20:\n          _context4.next = 25;\n          break;\n\n        case 22:\n          _context4.prev = 22;\n          _context4.t0 = _context4[\"catch\"](1);\n          // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n          console.log(_context4.t0);\n\n        case 25:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[1, 22]]);\n}\n\nfunction fetchListOfEmployee() {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchListOfEmployee$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          formBody = {};\n          reqMethod = \"GET\";\n          loginUrl = baseUrl + '/view';\n          _context5.next = 5;\n          return call(GetDataFromServer, loginUrl, '', '');\n\n        case 5:\n          response = _context5.sent;\n          _context5.next = 8;\n          return response.json();\n\n        case 8:\n          result = _context5.sent;\n          console.log(\"Result->\" + JSON.stringify(result));\n\n          if (!result.error) {\n            _context5.next = 15;\n            break;\n          }\n\n          _context5.next = 13;\n          return put({\n            type: Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR,\n            result: result\n          });\n\n        case 13:\n          _context5.next = 17;\n          break;\n\n        case 15:\n          _context5.next = 17;\n          return put({\n            type: Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS,\n            result: result\n          });\n\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}\n\nfunction fetchCreateProjectDetails(action) {\n  var formBody, reqMethod, loginUrl, response, result;\n  return _regeneratorRuntime.wrap(function fetchCreateProjectDetails$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          formBody = {};\n          reqMethod = \"POST\";\n          loginUrl = baseUrl + '/view';\n          _context6.next = 5;\n          return call(GetDataFromServer, loginUrl, '', '');\n\n        case 5:\n          response = _context6.sent;\n          _context6.next = 8;\n          return response.json();\n\n        case 8:\n          result = _context6.sent;\n          console.log(\"Result->\" + JSON.stringify(result));\n\n          if (!result.error) {\n            _context6.next = 15;\n            break;\n          }\n\n          _context6.next = 13;\n          return put({\n            type: Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR,\n            result: result\n          });\n\n        case 13:\n          _context6.next = 17;\n          break;\n\n        case 15:\n          _context6.next = 17;\n          return put({\n            type: Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS,\n            result: result\n          });\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nexport default function rootSaga(params) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(Types.LOGIN_USER, fetchLoginUser);\n\n        case 2:\n          _context7.next = 4;\n          return takeLatest(Types.CREATE_TIMESHEET, fetchTimeSheet);\n\n        case 4:\n          _context7.next = 6;\n          return takeLatest(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n\n        case 6:\n          _context7.next = 8;\n          return takeLatest(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n\n        case 8:\n          _context7.next = 10;\n          return takeLatest(Types.LIST_EMPLOYEE_DETAILS, fetchListOfEmployee);\n\n        case 10:\n          _context7.next = 12;\n          return takeLatest(Types.CREATE_PROJECT, fetchCreateProjectDetails);\n\n        case 12:\n          console.log(\"ROOT SAGA\");\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, this);\n}","map":{"version":3,"sources":["/Users/Amar/emp/src/redux/store/sagas.js"],"names":["fetchLoginUser","fetchTimeSheet","fetchTimeSheetCalander","fetchSaveTimeSheetCalander","fetchListOfEmployee","fetchCreateProjectDetails","rootSaga","takeEvery","call","put","select","take","fork","all","takeLatest","Types","GetDataFromServer","baseUrl","action","console","log","JSON","stringify","formBody","firstname","lastname","age","reqMethod","loginUrl","response","json","result","workingdetails","error","type","LOGIN_USER_SERVER_RESPONSE_SUCCESS","selectWeek","jobTitle","approver","client","endDate","projectId","submitTimeSheet","LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR","LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS","params","LOGIN_USER","CREATE_TIMESHEET","CREATE_TIMESHEET_WORKINGHOUR","CREATE_TIMESHEET_SAVE_WORKINGHOUR","LIST_EMPLOYEE_DETAILS","CREATE_PROJECT"],"mappings":"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","sourcesContent":["import { takeEvery, call, put, select, take, fork, all, takeLatest } from 'redux-saga/effects';\nimport * as Types from '../actions/types';\nimport { GetDataFromServer } from '../service';\n\n//const baseUrl = 'http://localhost:8080';\nconst baseUrl = 'https://sleepy-basin-37644.herokuapp.com';\nfunction* fetchLoginUser(action) {\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.firstname = \"asdfg\";//action.code;\n    formBody.lastname = \"zxcvbb\"; //action.provider;\n    formBody.age = \"34\"\n    //const reqMethod = \"POST\";\n    const reqMethod = \"GET\";\n    const loginUrl = baseUrl + '/view';\n    const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n    const result = yield response.json();\n    console.log(\"ADS\" + result.workingdetails);\n    console.log(\"Result ->\" + JSON.stringify(result))\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n}\nfunction* fetchTimeSheet(action) {\n  console.log(\"TimeSheet Action->\" + JSON.stringify(action));\n  try {\n    console.log(\"Action->\" + JSON.stringify(action));\n    let formBody = {};\n    formBody.selectWeek = action.selectWeek; //action.provider;\n    formBody.jobTitle = action.jobTitle;\n    formBody.approver = action.approver;\n    formBody.client = action.client;\n    formBody.endDate = action.endDate;\n    formBody.projectId = action.projectId;\n\n    //const reqMethod = \"POST\";\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/create';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  } catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n}\nfunction* fetchTimeSheetCalander(action) {\n  console.log(\"Submit Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/submit';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\nfunction* fetchSaveTimeSheetCalander(action) {\n  console.log(\"Save Time Sheet Action->\" + JSON.stringify(action));\n  try {\n    let formBody = {};\n    formBody.workingdetails = action.submitTimeSheet.workingdetails;\n    const reqMethod = \"POST\";\n    const loginUrl = baseUrl + '/timesheet/save';\n    const response = yield call(GetDataFromServer, loginUrl, 'POST', formBody);\n    const result = yield response.json();\n    console.log('Result Json' + result);\n    if (result.error) {\n      yield put({ type: \"LOGIN_USER_SERVER_REPONSE_ERROR\", error: result.error });\n    } else {\n      yield put({ type: Types.LOGIN_USER_SERVER_RESPONSE_SUCCESS, result });\n    }\n  }\n  catch (error) {\n    // yield put({ type: Types.SERVER_CALL_FAILED, error: error.message });\n    console.log(error);\n  }\n\n\n}\n\nfunction* fetchListOfEmployee() {\n\n  let formBody = {};\n  const reqMethod = \"GET\";\n  const loginUrl = baseUrl + '/view';\n  const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n  const result = yield response.json();\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR, result });\n  } else {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS, result });\n  }\n}\nfunction* fetchCreateProjectDetails(action) {\n\n  let formBody = {};\n  const reqMethod = \"POST\";\n  const loginUrl = baseUrl + '/view';\n  const response = yield call(GetDataFromServer, loginUrl, '', '');\n\n  const result = yield response.json();\n  console.log(\"Result->\" + JSON.stringify(result));\n  if (result.error) {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER__RESPONSE_ERROR, result });\n  } else {\n    yield put({ type: Types.LIST_EMPLOYEE_DETAILS_SERVER_RESPONSE_SUCESS, result });\n  }\n}\nexport default function* rootSaga(params) {\n  yield takeLatest(Types.LOGIN_USER, fetchLoginUser);\n  yield takeLatest(Types.CREATE_TIMESHEET, fetchTimeSheet);\n  yield takeLatest(Types.CREATE_TIMESHEET_WORKINGHOUR, fetchTimeSheetCalander);\n  yield takeLatest(Types.CREATE_TIMESHEET_SAVE_WORKINGHOUR, fetchSaveTimeSheetCalander);\n  yield takeLatest(Types.LIST_EMPLOYEE_DETAILS, fetchListOfEmployee);\n  yield takeLatest(Types.CREATE_PROJECT, fetchCreateProjectDetails);\n\n  console.log(\"ROOT SAGA\");\n\n}\n"]},"metadata":{},"sourceType":"module"}