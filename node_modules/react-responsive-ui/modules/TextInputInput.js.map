{"version":3,"sources":["../source/TextInputInput.js"],"names":["PureComponent","Component","TextInput","hiddenTextArea","autoresize","event","current","height","scrollHeight","undefined","bordersHeight","minHeight","Math","abs","currentHeight","input","style","onWindowResize","onChange","value","target","props","onKeyDown","defaultPrevented","storeInputNode","node","inputRef","focus","multiline","getComputedStyle","ceil","parseFloat","borderTopWidth","borderBottomWidth","window","addEventListener","removeEventListener","inputComponent","disabled","type","indicateInvalid","error","className","containerRef","floatingLabel","required","children","rest","inputStyle","resize","properties","ref","autoFocus","rows","HIDDEN_TEXTAREA_STYLE","createElement","propTypes","string","bool","isRequired","oneOfType","func","defaultProps","overflow","visibility","position","whiteSpace"],"mappings":"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","file":"TextInputInput.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport throttle from 'lodash/throttle'\r\nimport createRef from 'react-create-ref'\r\n\r\nimport { getModularGridUnit } from './utility/grid'\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class TextInput extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// `<input type/>` attribute.\r\n\t\ttype             : PropTypes.string,\r\n\r\n\t\t// Whether `<textarea/>` should autoresize itself\r\n\t\t// (is `true` by default)\r\n\t\tautoresize       : PropTypes.bool.isRequired,\r\n\r\n\t\t// In order for this to work properly\r\n\t\t// `<textarea/>` vertical padding should be `0`\r\n\t\t// and instead the padding should be defined on `<textarea/>` parent `<div/>`\r\n\t\t// like it's done in Material UI.\r\n\t\t// Otherwise it won't look pretty and the line of text near the top border\r\n\t\t// will be partially visible resulting in weird UX.\r\n\t\t// If `<textarea/>` vertical padding was `0`\r\n\t\t// the line of text near the top border wouldn't be visible.\r\n\t\t// // The maximum number of rows <textarea/> grows up to.\r\n\t\t// rowsMax          : PropTypes.number.isRequired,\r\n\r\n\t\t// Set to `false` to prevent the `<label/>` from floating\r\n\t\tfloatingLabel    : PropTypes.bool.isRequired,\r\n\r\n\t\t// A custom input component.\r\n\t\t// (is `<input/>` by default)\r\n\t\tinputComponent   : PropTypes.oneOfType\r\n\t\t([\r\n\t\t\tPropTypes.func,\r\n\t\t\tPropTypes.string\r\n\t\t])\r\n\t\t.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// `<textarea/>` should autoresize itself\r\n\t\tautoresize : true,\r\n\r\n\t\t// Set to `false` to prevent the `<label/>` from floating\r\n\t\tfloatingLabel : true,\r\n\r\n\t\t// A custom input component.\r\n\t\t// (is `<input/>` by default)\r\n\t\tinputComponent : 'input',\r\n\r\n\t\t// // The maximum number of rows <textarea/> grows up to.\r\n\t\t// rowsMax : 12\r\n\t}\r\n\r\n\thiddenTextArea = createRef()\r\n\t// hiddenTextAreaSingleLine = createRef()\r\n\r\n\t// Client side rendering, javascript is enabled\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { multiline, autoresize, value } = this.props\r\n\r\n\t\t// Doing `this.measure()` here now\r\n\t\t// because `<textarea/>` should autoresize\r\n\t\t// in case its `value` is set up front.\r\n\t\t// // Not doing `this.measure()` here because\r\n\t\t// // that resulted in weird `<textarea/>` height mismatch.\r\n\t\t// // Measuring the height of `<textarea/>` during\r\n\t\t// // the first `this.measurements()` call instead.\r\n\r\n\t\tif (multiline && autoresize) {\r\n\t\t\tconst style = getComputedStyle(this.input)\r\n\r\n\t\t\t// Measurements can be in `em`s/`rem`s/`pt`s which can give fractional pixel sizes.\r\n\t\t\t// `style.height` includes borders.\r\n\t\t\tthis.currentHeight = Math.ceil(parseFloat(style.height))\r\n\t\t\tthis.minHeight = this.currentHeight\r\n\r\n\t\t\t// this.verticalPadding = Math.ceil(parseFloat(style.paddingTop)) + Math.ceil(parseFloat(style.paddingBottom))\r\n\r\n\t\t\t// Top and bottom borders are extra height,\r\n\t\t\t// because `.scrollHeight` doesn't include borders.\r\n\t\t\tthis.bordersHeight =\r\n\t\t\t\tMath.ceil(parseFloat(style.borderTopWidth)) +\r\n\t\t\t\tMath.ceil(parseFloat(style.borderBottomWidth))\r\n\r\n\t\t\tthis.autoresize()\r\n\t\t}\r\n\r\n\t\tif (multiline && autoresize) {\r\n\t\t\twindow.addEventListener('resize', this.onWindowResize)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { multiline, autoresize } = this.props\r\n\r\n\t\tif (multiline && autoresize) {\r\n\t\t\twindow.removeEventListener('resize', this.onWindowResize)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate()\r\n\t{\r\n\t\tconst { autoresize } = this.props\r\n\r\n\t\tif (autoresize) {\r\n\t\t\tthis.autoresize()\r\n\t\t}\r\n\t}\r\n\r\n\t// Copy-pasted from Material UI on Oct 24th, 2018.\r\n\t// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/InputBase/Textarea.js\r\n\tautoresize = (event) =>\r\n\t{\r\n\t\t// const { rowsMax } = this.props\r\n\r\n\t\t// Guarding for **broken** shallow rendering method that call componentDidMount\r\n\t\t// but doesn't handle refs correctly.\r\n\t\t// To remove once the shallow rendering has been fixed.\r\n\t\tif (!this.hiddenTextArea.current) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// const lineHeight = this.hiddenTextAreaSingleLine.current.scrollHeight - this.verticalPadding\r\n\t\tlet height = this.hiddenTextArea.current.scrollHeight\r\n\r\n\t\t// Guarding for jsdom, where scrollHeight isn't present.\r\n\t\t// See https://github.com/tmpvar/jsdom/issues/1013\r\n\t\tif (height === undefined) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// It would have to first subtract `paddingTop` and `paddingBottom`,\r\n\t\t// then it would calculate `rowsMax * lineHeight` and\r\n\t\t// then it would re-add `paddingTop` and `paddingBottom`.\r\n\t\t// height = Math.min(rowsMax * lineHeight + this.verticalPadding, height)\r\n\r\n\t\t// `.scrollHeight` doesn't include borders.\r\n\t\t// `.style.height` does include borders.\r\n\t\theight += this.bordersHeight\r\n\r\n\t\tif (height <= this.minHeight) {\r\n\t\t\theight = this.minHeight\r\n\t\t}\r\n\t\t// For some reason Chrome on Windows 10\r\n\t\t// requires an extra pixel been added\r\n\t\t// to avoid showing vertical scrollbar.\r\n\t\t// (Oct 24th, 2018)\r\n\t\telse {\r\n\t\t\theight += 1\r\n\t\t}\r\n\r\n\t\t// \"Need a large enough different to update the height.\r\n\t\t//  This prevents infinite rendering loop.\"\r\n\t\t// Don't know what loop they're talking about.\r\n\t\tif (Math.abs(this.currentHeight - height) > 1) {\r\n\t\t\tthis.currentHeight = height\r\n\t\t\t// `.style.height` includes borders.\r\n\t\t\tthis.input.style.height = height + 'px'\r\n\t\t}\r\n\t}\r\n\r\n\tonWindowResize = throttle((event) => this.autoresize(), 100)\r\n\r\n\t// The underlying `input` component\r\n\t// can pass both `event`s and `value`s\r\n\t// to this parent `onChange` listener.\r\n\tonChange = (event) =>\r\n\t{\r\n\t\t// Extract `value` from the argument\r\n\t\t// of this `onChange` listener\r\n\t\t// (for convenience)\r\n\r\n\t\tlet value = event\r\n\r\n\t\tif (event.target !== undefined) {\r\n\t\t\tvalue = event.target.value\r\n\t\t}\r\n\r\n\t\t// Call the parent `onChange` handler\r\n\t\t// with the `value` as an argument\r\n\t\t// (for convenience)\r\n\r\n\t\tconst { onChange } = this.props\r\n\r\n\t\t// Call `onChange` only if `value` did actually change\r\n\t\tif (value !== this.props.value) {\r\n\t\t\tonChange(value)\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown } = this.props\r\n\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.input)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tstoreInputNode = (node) =>\r\n\t{\r\n\t\tconst { inputRef } = this.props\r\n\r\n\t\tif (inputRef) {\r\n\t\t\tinputRef(node)\r\n\t\t}\r\n\r\n\t\tthis.input = node\r\n\t}\r\n\r\n\tfocus = () => this.input.focus()\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tvalue,\r\n\t\t\tmultiline,\r\n\t\t\tinputComponent,\r\n\t\t\tfocus,\r\n\t\t\tonChange,\r\n\t\t\tdisabled,\r\n\t\t\ttype,\r\n\t\t\tautoresize,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror,\r\n\t\t\tclassName,\r\n\r\n\t\t\t// Rest\r\n\t\t\tinputRef,\r\n\t\t\tcontainerRef,\r\n\t\t\tfloatingLabel,\r\n\t\t\trequired,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet { inputStyle } = this.props\r\n\r\n\t\tif (multiline && autoresize)\r\n\t\t{\r\n\t\t\tinputStyle =\r\n\t\t\t{\r\n\t\t\t\tresize : 'none',\r\n\t\t\t\t...inputStyle\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst properties =\r\n\t\t{\r\n\t\t\t...rest,\r\n\t\t\tref         : this.storeInputNode,\r\n\t\t\tvalue       : (value === undefined || value === null) ? '' : value,\r\n\t\t\tdisabled,\r\n\t\t\tonChange    : this.onChange,\r\n\t\t\tonKeyDown   : this.onKeyDown,\r\n\t\t\tclassName   : classNames\r\n\t\t\t(\r\n\t\t\t\t'rrui__input-element',\r\n\t\t\t\t'rrui__input-field',\r\n\t\t\t\t{\r\n\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t'rrui__input-field--invalid'   : indicateInvalid && error,\r\n\t\t\t\t\t'rrui__input-field--disabled'  : disabled,\r\n\t\t\t\t\t'rrui__input-field--multiline' : multiline\r\n\t\t\t\t},\r\n\t\t\t\tclassName\r\n\t\t\t),\r\n\t\t\tstyle       : inputStyle,\r\n\t\t\tautoFocus   : focus\r\n\t\t}\r\n\r\n\t\t// In case of `multiline` set to `true`\r\n\t\t// this is gonna be a `<textarea/>`\r\n\t\tif (multiline)\r\n\t\t{\r\n\t\t\tif (autoresize) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t// <textarea\r\n\t\t\t\t\t// \tkey=\"textarea-measurement-single-line\"\r\n\t\t\t\t\t// \tref={this.hiddenTextAreaSingleLine}\r\n\t\t\t\t\t// \trows=\"1\"\r\n\t\t\t\t\t// \treadOnly\r\n\t\t\t\t\t// \taria-hidden=\"true\"\r\n\t\t\t\t\t// \tvalue=\"\"\r\n\t\t\t\t\t// \ttabIndex={-1}\r\n\t\t\t\t\t// \tclassName={properties.className}\r\n\t\t\t\t\t// \tstyle={this.props.inputStyle ? { ...inputStyle, ...HIDDEN_TEXTAREA_STYLE } : HIDDEN_TEXTAREA_STYLE}/>,\r\n\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tkey=\"textarea-measurement\"\r\n\t\t\t\t\t\tref={this.hiddenTextArea}\r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\tvalue={properties.value}\r\n\t\t\t\t\t\trows={properties.rows}\r\n\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\tclassName={properties.className}\r\n\t\t\t\t\t\tstyle={this.props.inputStyle ? { ...inputStyle, ...HIDDEN_TEXTAREA_STYLE } : HIDDEN_TEXTAREA_STYLE}/>,\r\n\r\n\t\t\t\t\t<textarea key=\"textarea\" { ...properties }/>\r\n\t\t\t\t]\r\n\t\t\t}\r\n\r\n\t\t\treturn <textarea key=\"textarea\" { ...properties }/>\r\n\t\t}\r\n\r\n\t\t// Add `<input/>` `type` property.\r\n\t\tif (inputComponent === 'input') {\r\n\t\t\tproperties.type = type || 'text'\r\n\t\t}\r\n\r\n\t\treturn React.createElement(inputComponent, properties)\r\n\t}\r\n}\r\n\r\n// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/InputBase/Textarea.js\r\nconst HIDDEN_TEXTAREA_STYLE = {\r\n\t// Overflow also needed to here to remove the extra row\r\n\t// added to `<textarea/>`s in Firefox.\r\n\toverflow: 'hidden',\r\n\t// Visibility needed to hide the extra `<textarea/>` on iPads.\r\n\tvisibility: 'hidden',\r\n\tposition: 'absolute',\r\n\theight: 'auto',\r\n\t// Don't know why is it here.\r\n\twhiteSpace: 'pre-wrap'\r\n}"]}